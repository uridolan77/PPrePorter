{"version":3,"file":"static/js/1364.bcd3ccf8.chunk.js","mappings":"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","sources":["components/reports/charts/AdvancedCharts.tsx","components/reports/interactive/InteractiveChart.tsx","components/reports/interactive/AdvancedInteractiveChart.tsx","components/reports/interactive/LassoSelectionScatterChart.tsx","components/reports/interactive/FilterContext.tsx","components/reports/interactive/AnnotationSystem.tsx","components/reports/interactive/ZoomableTimeSeriesChart.tsx","components/reports/interactive/EnhancedTooltip.tsx","components/reports/charts/ReportCharts.tsx","components/reports/interactive/DrilldownModal.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, CircularProgress, Typography, useTheme } from '@mui/material';\nimport {\n  ResponsiveContainer,\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  ZAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  Cell,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  Treemap,\n  PieChart,\n  Pie\n} from 'recharts';\nimport { format as formatDate } from 'date-fns';\n\n// Chart colors\nconst CHART_COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'];\n\n// Format currency\nconst formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n};\n\n// Format number\nconst formatNumber = (value: number): string => {\n  return new Intl.NumberFormat('en-US').format(value);\n};\n\n// Format percentage\nconst formatPercentage = (value: number): string => {\n  return `${value.toFixed(2)}%`;\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    return (\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          p: 1.5,\n          border: '1px solid',\n          borderColor: 'divider',\n          borderRadius: 1,\n          boxShadow: 1\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n          {label}\n        </Typography>\n        {payload.map((entry: any, index: number) => (\n          <Box key={`item-${index}`} sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n            <Box\n              sx={{\n                width: 12,\n                height: 12,\n                backgroundColor: entry.color,\n                mr: 1,\n                borderRadius: '50%'\n              }}\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {entry.name}: {entry.value >= 1000 ? formatCurrency(entry.value) : formatNumber(entry.value)}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n    );\n  }\n  return null;\n};\n\n// Scatter Chart Component\ninterface ScatterChartProps {\n  data: any[];\n  xKey: string;\n  yKey: string;\n  zKey?: string;\n  nameKey?: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  showLegend?: boolean;\n  showGrid?: boolean;\n}\n\nexport const ReportScatterChart: React.FC<ScatterChartProps> = ({\n  data,\n  xKey,\n  yKey,\n  zKey,\n  nameKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  showLegend = true,\n  showGrid = true\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <ScatterChart\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n        >\n          {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n          <XAxis\n            dataKey={xKey}\n            name={xKey.charAt(0).toUpperCase() + xKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            type=\"number\"\n          />\n          <YAxis\n            dataKey={yKey}\n            name={yKey.charAt(0).toUpperCase() + yKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            type=\"number\"\n          />\n          {zKey && (\n            <ZAxis\n              dataKey={zKey}\n              range={[50, 500]}\n              name={zKey.charAt(0).toUpperCase() + zKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            />\n          )}\n          <RechartsTooltip cursor={{ strokeDasharray: '3 3' }} content={<CustomTooltip />} />\n          {showLegend && <Legend />}\n          <Scatter\n            name={nameKey ? nameKey : \"Data\"}\n            data={data}\n            fill={CHART_COLORS[0]}\n          >\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />\n            ))}\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\n// Radar Chart Component\ninterface RadarChartProps {\n  data: any[];\n  dataKey: string;\n  nameKey: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  showLegend?: boolean;\n}\n\nexport const ReportRadarChart: React.FC<RadarChartProps> = ({\n  data,\n  dataKey,\n  nameKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  showLegend = true\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={data}>\n          <PolarGrid />\n          <PolarAngleAxis\n            dataKey={nameKey}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n          />\n          <PolarRadiusAxis />\n          <Radar\n            name={dataKey.charAt(0).toUpperCase() + dataKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            dataKey={dataKey}\n            stroke={CHART_COLORS[0]}\n            fill={CHART_COLORS[0]}\n            fillOpacity={0.6}\n          />\n          {showLegend && <Legend />}\n          <RechartsTooltip />\n        </RadarChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\n// Treemap Chart Component\ninterface TreemapChartProps {\n  data: any[];\n  dataKey: string;\n  nameKey: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n}\n\nexport const ReportTreemapChart: React.FC<TreemapChartProps> = ({\n  data,\n  dataKey,\n  nameKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title\n}) => {\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <Treemap\n          data={data}\n          dataKey={dataKey}\n          nameKey={nameKey}\n          aspectRatio={4 / 3}\n          stroke=\"#fff\"\n          fill={CHART_COLORS[0]}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />\n          ))}\n        </Treemap>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\n// Radial Bar Chart Component (Gauge Chart)\ninterface GaugeChartProps {\n  data: any[];\n  dataKey: string;\n  nameKey: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  startAngle?: number;\n  endAngle?: number;\n}\n\nexport const ReportGaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  dataKey,\n  nameKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  startAngle = 180,\n  endAngle = 0\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <PieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius=\"60%\"\n            outerRadius=\"80%\"\n            startAngle={startAngle}\n            endAngle={endAngle}\n            dataKey={dataKey}\n            nameKey={nameKey}\n            label\n          >\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />\n            ))}\n          </Pie>\n          <Legend\n            iconSize={10}\n            layout=\"vertical\"\n            verticalAlign=\"middle\"\n            align=\"right\"\n          />\n          <RechartsTooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\n// Heatmap Component\ninterface HeatmapProps {\n  data: any[];\n  xKey: string;\n  yKey: string;\n  valueKey: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n}\n\nexport const ReportHeatmap: React.FC<HeatmapProps> = ({\n  data,\n  xKey,\n  yKey,\n  valueKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n\n  // Process data for heatmap\n  const uniqueXValues = Array.from(new Set(data.map(item => item[xKey]))).sort();\n  const uniqueYValues = Array.from(new Set(data.map(item => item[yKey]))).sort();\n\n  // Create a grid of cells\n  const cellSize = Math.min(\n    (height - 100) / uniqueYValues.length,\n    (height * 2) / uniqueXValues.length\n  );\n\n  // Find min and max values for color scaling\n  const values = data.map(item => item[valueKey]);\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n\n  // Color scale function\n  const getColor = (value: number) => {\n    const normalizedValue = (value - minValue) / (maxValue - minValue);\n    const hue = (1 - normalizedValue) * 240; // 240 (blue) to 0 (red)\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n\n  return (\n    <Box sx={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <Box sx={{ overflowX: 'auto', overflowY: 'auto', height: height - 40 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', minWidth: uniqueXValues.length * cellSize }}>\n          {/* X-axis labels */}\n          <Box sx={{ display: 'flex', ml: 8 }}>\n            {uniqueXValues.map((x) => (\n              <Box\n                key={`x-${x}`}\n                sx={{\n                  width: cellSize,\n                  height: 40,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  transform: 'rotate(-45deg)',\n                  transformOrigin: 'bottom left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  fontSize: '0.75rem',\n                  color: theme.palette.text.secondary\n                }}\n              >\n                {x}\n              </Box>\n            ))}\n          </Box>\n\n          {/* Heatmap grid */}\n          <Box sx={{ display: 'flex' }}>\n            {/* Y-axis labels */}\n            <Box sx={{ width: 60 }}>\n              {uniqueYValues.map((y) => (\n                <Box\n                  key={`y-${y}`}\n                  sx={{\n                    height: cellSize,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    pr: 1,\n                    fontSize: '0.75rem',\n                    color: theme.palette.text.secondary\n                  }}\n                >\n                  {y}\n                </Box>\n              ))}\n            </Box>\n\n            {/* Cells */}\n            <Box>\n              {uniqueYValues.map((y) => (\n                <Box key={`row-${y}`} sx={{ display: 'flex' }}>\n                  {uniqueXValues.map((x) => {\n                    const cell = data.find(item => item[xKey] === x && item[yKey] === y);\n                    const value = cell ? cell[valueKey] : 0;\n                    return (\n                      <Box\n                        key={`cell-${x}-${y}`}\n                        sx={{\n                          width: cellSize,\n                          height: cellSize,\n                          backgroundColor: getColor(value),\n                          border: '1px solid',\n                          borderColor: theme.palette.background.paper,\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          cursor: 'pointer',\n                          '&:hover': {\n                            opacity: 0.8,\n                            boxShadow: 1\n                          }\n                        }}\n                        title={`${x}, ${y}: ${value}`}\n                      >\n                        <Typography\n                          variant=\"caption\"\n                          sx={{\n                            color: value > (maxValue - minValue) / 2 + minValue ? 'white' : 'black',\n                            fontWeight: 'bold',\n                            fontSize: '0.6rem'\n                          }}\n                        >\n                          {value}\n                        </Typography>\n                      </Box>\n                    );\n                  })}\n                </Box>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport {\n  Typography,\n  CircularProgress,\n  Chip,\n  useTheme,\n  Paper,\n  IconButton,\n  Tooltip as MuiTooltip\n} from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport { format as formatDate } from 'date-fns';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  Sector\n} from 'recharts';\n\nimport EnhancedTooltip, { TooltipData } from './EnhancedTooltip';\nimport DrilldownModal, { DrilldownData } from './DrilldownModal';\nimport { useFilterContext, Filter } from './FilterContext';\n\n/**\n * Chart data point interface\n */\nexport interface ChartDataPoint {\n  [key: string]: any;\n}\n\n/**\n * Chart types\n */\nexport type ChartType = 'area' | 'bar' | 'line' | 'pie';\n\n/**\n * Interactive chart props\n */\ninterface InteractiveChartProps {\n  /** Unique identifier for the chart */\n  id: string;\n  /** Chart title */\n  title: string;\n  /** Optional chart description */\n  description?: string;\n  /** Chart type */\n  type: ChartType;\n  /** Chart data array */\n  data: ChartDataPoint[];\n  /** Key for X-axis values */\n  xKey: string;\n  /** Keys for Y-axis values */\n  yKeys?: string[];\n  /** Key for name/label values (used in pie charts) */\n  nameKey?: string;\n  /** Key for value data (used in pie charts) */\n  valueKey?: string;\n  /** Chart height in pixels */\n  height?: number;\n  /** Loading state indicator */\n  loading?: boolean;\n  /** Error message if any */\n  error?: string | null;\n  /** Chart colors array */\n  colors?: string[];\n  /** Whether to show legend */\n  showLegend?: boolean;\n  /** Whether to show grid */\n  showGrid?: boolean;\n  /** Whether to enable drill-down functionality */\n  enableDrilldown?: boolean;\n  /** Whether to enable tooltips */\n  enableTooltip?: boolean;\n  /** Whether to enable cross-filtering */\n  enableCrossFiltering?: boolean;\n  /** Custom tooltip formatter function */\n  tooltipFormatter?: (value: any, name: string, props: any) => string;\n  /** Function to handle click events */\n  onClick?: (data: ChartDataPoint, index: number) => void;\n  /** Function to get tooltip data */\n  getTooltipData?: (payload: any[], label: string) => TooltipData;\n  /** Function to get drill-down data */\n  getDrilldownData?: (data: ChartDataPoint, index: number) => DrilldownData;\n}\n\n/**\n * InteractiveChart component\n * A chart component with interactive features like drill-down, enhanced tooltips, and cross-filtering\n */\nconst InteractiveChart: React.FC<InteractiveChartProps> = ({\n  id,\n  title,\n  description,\n  type,\n  data,\n  xKey,\n  yKeys = [],\n  nameKey = 'name',\n  valueKey = 'value',\n  height = 300,\n  loading = false,\n  error = null,\n  colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'],\n  showLegend = true,\n  showGrid = true,\n  enableDrilldown = true,\n  enableTooltip = true,\n  enableCrossFiltering = true,\n  tooltipFormatter,\n  onClick,\n  getTooltipData,\n  getDrilldownData\n}) => {\n  const theme = useTheme();\n  const { filters, addFilter, removeFilter, getFiltersForSource, applyFilters } = useFilterContext();\n\n  // State for active elements\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  const [drilldownOpen, setDrilldownOpen] = useState<boolean>(false);\n  const [drilldownData, setDrilldownData] = useState<DrilldownData | null>(null);\n\n\n\n  // Get active filters for this chart\n  const activeFilters = useMemo(() => {\n    return getFiltersForSource(id);\n  }, [getFiltersForSource, id]);\n\n  // Apply filters from other sources to the data\n  const filteredData = useMemo(() => {\n    return applyFilters(data, id);\n  }, [applyFilters, data, id]);\n\n  /**\n   * Format currency value\n   * @param amount - The amount to format\n   * @returns Formatted currency string\n   */\n  const formatCurrency = useMemo(() => {\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n\n    return (amount: number): string => {\n      return formatter.format(amount);\n    };\n  }, []);\n\n  /**\n   * Format number value\n   * @param value - The number to format\n   * @returns Formatted number string\n   */\n  const formatNumber = useMemo(() => {\n    const formatter = new Intl.NumberFormat('en-US');\n\n    return (value: number): string => {\n      return formatter.format(value);\n    };\n  }, []);\n\n  /**\n   * Format date for display\n   * @param value - The date string to format\n   * @returns Formatted date string\n   */\n  const formatDateValue = useCallback((value: string | number | undefined | null): string => {\n    try {\n      if (value === undefined || value === null) return '';\n\n      const strValue = String(value);\n\n      // Check if it's a date string with ISO format\n      if (typeof strValue === 'string' && strValue.includes('T')) {\n        const date = new Date(strValue);\n        // Check if date is valid\n        if (isNaN(date.getTime())) {\n          return strValue;\n        }\n        return formatDate(date, 'MMM dd');\n      }\n\n      return strValue;\n    } catch (error) {\n      console.warn('Error formatting date:', error);\n      return String(value || '');\n    }\n  }, []);\n\n  // Handle chart element click\n  const handleClick = useCallback((data: any, index: number) => {\n    // Call custom onClick handler if provided\n    if (onClick) {\n      onClick(data, index);\n      return;\n    }\n\n    if (enableDrilldown) {\n      // Generate drilldown data\n      let drillData: DrilldownData;\n\n      if (getDrilldownData) {\n        // Use custom function to get drilldown data\n        drillData = getDrilldownData(data, index);\n      } else {\n        // Generate default drilldown data\n        let drilldownTitle = '';\n        let category = '';\n        let value = 0;\n        let detailData: any[] = [];\n\n        if (type === 'pie') {\n          drilldownTitle = `${title} - ${data[nameKey]}`;\n          category = data[nameKey];\n          value = data[valueKey];\n\n          // Filter original data to get details\n          detailData = filteredData.filter((item: any) => {\n            if (typeof item[nameKey] === 'string' && typeof data[nameKey] === 'string') {\n              return item[nameKey].toLowerCase() === data[nameKey].toLowerCase();\n            }\n            return item[nameKey] === data[nameKey];\n          });\n        } else {\n          drilldownTitle = `${title} - ${data[xKey]}`;\n          category = data[xKey];\n\n          if (yKeys.length > 0) {\n            // Use the first yKey as the value\n            value = data[yKeys[0]];\n          } else {\n            value = data[valueKey];\n          }\n\n          // Filter original data to get details\n          detailData = filteredData.filter((item: any) => {\n            if (typeof item[xKey] === 'string' && typeof data[xKey] === 'string') {\n              return item[xKey].toLowerCase() === data[xKey].toLowerCase();\n            }\n            return item[xKey] === data[xKey];\n          });\n        }\n\n        drillData = {\n          title: drilldownTitle,\n          description: description,\n          category,\n          value,\n          data: detailData\n        };\n      }\n\n      setDrilldownData(drillData);\n      setDrilldownOpen(true);\n    } else if (enableCrossFiltering) {\n      // Add filter for cross-filtering\n      let filterId = '';\n      let filterValue: any = null;\n      let filterField = '';\n\n      if (type === 'pie') {\n        filterId = `${id}-${nameKey}-${data[nameKey]}`;\n        filterValue = data[nameKey];\n        filterField = nameKey;\n      } else {\n        filterId = `${id}-${xKey}-${data[xKey]}`;\n        filterValue = data[xKey];\n        filterField = xKey;\n      }\n\n      // Check if filter already exists\n      const existingFilter = activeFilters.find(f => f.id === filterId);\n\n      if (existingFilter) {\n        // Remove filter if it exists\n        removeFilter(filterId);\n      } else {\n        // Add new filter\n        const newFilter: Filter = {\n          id: filterId,\n          type: 'category',\n          field: filterField,\n          value: filterValue,\n          operator: 'equals',\n          source: id\n        };\n\n        addFilter(newFilter);\n      }\n    }\n  }, [\n    onClick, enableDrilldown, getDrilldownData, type, title, description,\n    nameKey, valueKey, xKey, yKeys, filteredData, enableCrossFiltering,\n    id, activeFilters, removeFilter, addFilter\n  ]);\n\n  // Handle pie chart active sector\n  const handlePieEnter = useCallback((_: any, index: number) => {\n    setActiveIndex(index);\n  }, []);\n\n  const handlePieLeave = useCallback(() => {\n    setActiveIndex(null);\n  }, []);\n\n  // Render active shape for pie chart\n  const renderActiveShape = (props: any) => {\n    const {\n      cx, cy, innerRadius, outerRadius, startAngle, endAngle,\n      fill, payload, percent, value\n    } = props;\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={-20} textAnchor=\"middle\" fill={theme.palette.text.primary}>\n          {payload[nameKey]}\n        </text>\n        <text x={cx} y={cy} dy={0} textAnchor=\"middle\" fill={theme.palette.text.primary}>\n          {value >= 1000 ? formatCurrency(value) : formatNumber(value)}\n        </text>\n        <text x={cx} y={cy} dy={20} textAnchor=\"middle\" fill={theme.palette.text.secondary}>\n          {`(${(percent * 100).toFixed(2)}%)`}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius + 10}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n      </g>\n    );\n  };\n\n  // Custom tooltip content\n  const CustomTooltipContent = ({ active, payload, label }: any) => {\n    if (!active || !payload || payload.length === 0 || !enableTooltip) {\n      return null;\n    }\n\n    // Generate tooltip data\n    let tooltipData: TooltipData;\n\n    if (getTooltipData) {\n      // Use custom function to get tooltip data\n      tooltipData = getTooltipData(payload, label);\n    } else {\n      // Generate default tooltip data\n      tooltipData = {\n        label: label,\n        payload: payload.map((entry: any) => ({\n          name: entry.name,\n          value: entry.value,\n          color: entry.color || entry.fill\n        }))\n      };\n\n      // Add comparison data if available\n      if (payload[0] && payload[0].payload) {\n        const prevValue = payload[0].payload.previousValue;\n        if (prevValue !== undefined) {\n          const currentValue = payload[0].value;\n          const change = currentValue - prevValue;\n          const changePercentage = prevValue !== 0 ? (change / prevValue) * 100 : 0;\n\n          tooltipData.comparison = {\n            label: 'Previous Period',\n            value: prevValue,\n            change,\n            changePercentage\n          };\n        }\n      }\n    }\n\n    return <EnhancedTooltip tooltipData={tooltipData} formatter={tooltipFormatter} />;\n  };\n\n  // Remove filter handler\n  const handleRemoveFilter = (filterId: string) => {\n    removeFilter(filterId);\n  };\n\n  /**\n   * Format a key into a readable label\n   * @param key - The key to format\n   * @returns Formatted label\n   */\n  const formatKeyToLabel = useCallback((key: string): string => {\n    return key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1');\n  }, []);\n\n  /**\n   * Format date for X-axis ticks\n   * @param value - The value to format\n   * @returns Formatted date string\n   */\n  const formatXAxisTick = useCallback((value: any): string => {\n    try {\n      if (!value) return '';\n\n      if (typeof value === 'string' && value.includes('T')) {\n        const date = new Date(value);\n        // Check if date is valid\n        if (isNaN(date.getTime())) {\n          return String(value);\n        }\n        return formatDate(date, 'MMM dd');\n      }\n      return String(value);\n    } catch (error) {\n      console.warn('Error formatting date:', error);\n      return String(value || '');\n    }\n  }, []);\n\n  /**\n   * Format number for Y-axis ticks\n   * @param value - The value to format\n   * @returns Formatted number string\n   */\n  const formatYAxisTick = useCallback((value: any): string => {\n    if (value >= 1000) {\n      return `${(value / 1000).toFixed(0)}k`;\n    }\n    return String(value);\n  }, []);\n\n  // Render chart based on type - memoized to prevent unnecessary re-renders\n  const renderChart = useMemo(() => {\n    // If data is not available, return null (we'll handle this in the render method)\n    if (!filteredData || filteredData.length === 0) {\n      return null;\n    }\n    // Common chart props\n    const commonChartProps = {\n      data: filteredData,\n      margin: { top: 10, right: 30, left: 0, bottom: 0 }\n    };\n\n    // Common axis props\n    const xAxisProps = {\n      dataKey: xKey,\n      tick: { fill: theme.palette.text.secondary, fontSize: 12 },\n      tickFormatter: formatXAxisTick\n    };\n\n    const yAxisProps = {\n      tick: { fill: theme.palette.text.secondary, fontSize: 12 },\n      tickFormatter: formatYAxisTick\n    };\n\n    switch (type) {\n      case 'area':\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart {...commonChartProps}>\n              {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n              <XAxis {...xAxisProps} />\n              <YAxis {...yAxisProps} />\n              <RechartsTooltip content={<CustomTooltipContent />} />\n              {showLegend && <Legend />}\n              {yKeys?.map((key, index) => (\n                <Area\n                  key={key}\n                  type=\"monotone\"\n                  dataKey={key}\n                  stroke={colors[index % colors.length]}\n                  fill={colors[index % colors.length]}\n                  fillOpacity={0.3}\n                  name={formatKeyToLabel(key)}\n                  activeDot={{ onClick: (e: any, i: number) => handleClick(e.payload, i) }}\n                />\n              ))}\n            </AreaChart>\n          </ResponsiveContainer>\n        );\n\n      case 'bar':\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart {...commonChartProps}>\n              {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n              <XAxis {...xAxisProps} />\n              <YAxis {...yAxisProps} />\n              <RechartsTooltip content={<CustomTooltipContent />} />\n              {showLegend && <Legend />}\n              {yKeys?.map((key, index) => (\n                <Bar\n                  key={key}\n                  dataKey={key}\n                  fill={colors[index % colors.length]}\n                  name={formatKeyToLabel(key)}\n                  onClick={(data: any, index: number) => handleClick(data, index)}\n                />\n              ))}\n            </BarChart>\n          </ResponsiveContainer>\n        );\n\n      case 'line':\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart {...commonChartProps}>\n              {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n              <XAxis {...xAxisProps} />\n              <YAxis {...yAxisProps} />\n              <RechartsTooltip content={<CustomTooltipContent />} />\n              {showLegend && <Legend />}\n              {yKeys?.map((key, index) => (\n                <Line\n                  key={key}\n                  type=\"monotone\"\n                  dataKey={key}\n                  stroke={colors[index % colors.length]}\n                  name={formatKeyToLabel(key)}\n                  activeDot={{ onClick: (e: any, i: number) => handleClick(e.payload, i) }}\n                />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        );\n\n      case 'pie':\n        return (\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                activeIndex={activeIndex !== null ? activeIndex : undefined}\n                activeShape={renderActiveShape}\n                data={filteredData}\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={60}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                dataKey={valueKey}\n                nameKey={nameKey}\n                onMouseEnter={handlePieEnter}\n                onMouseLeave={handlePieLeave}\n                onClick={(data: any, index: number) => handleClick(data, index)}\n              >\n                {filteredData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n                ))}\n              </Pie>\n              <RechartsTooltip content={<CustomTooltipContent />} />\n              {showLegend && <Legend />}\n            </PieChart>\n          </ResponsiveContainer>\n        );\n\n      default:\n        return (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n            <Typography color=\"text.secondary\">Unsupported chart type</Typography>\n          </div>\n        );\n    }\n  }, [\n    filteredData, type, showGrid, xKey, theme, showLegend, yKeys, colors,\n    valueKey, nameKey, activeIndex, renderActiveShape, handlePieEnter,\n    handlePieLeave, handleClick, formatKeyToLabel, formatXAxisTick,\n    formatYAxisTick, CustomTooltipContent\n  ]);\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  // Render error state\n  if (error) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </div>\n    );\n  }\n\n  // Render empty state\n  if (!filteredData || filteredData.length === 0) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <Paper sx={{ height, display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <div style={{ padding: 16, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Typography variant=\"subtitle1\">{title}</Typography>\n          {description && (\n            <MuiTooltip title={description}>\n              <IconButton size=\"small\">\n                <InfoOutlinedIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n        </div>\n        <div style={{ display: 'flex', gap: 8 }}>\n          {enableDrilldown && (\n            <MuiTooltip title=\"Click on chart elements to drill down\">\n              <IconButton size=\"small\">\n                <ZoomInIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n          {enableCrossFiltering && (\n            <MuiTooltip title=\"Click on chart elements to filter\">\n              <IconButton size=\"small\">\n                <FilterListIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n        </div>\n      </div>\n\n      {/* Active filters */}\n      {activeFilters.length > 0 && (\n        <div style={{ paddingLeft: 16, paddingRight: 16, paddingBottom: 8, display: 'flex', flexWrap: 'wrap', gap: 8 }}>\n          {activeFilters.map((filter) => (\n            <Chip\n              key={filter.id}\n              label={`${filter.field}: ${filter.value}`}\n              size=\"small\"\n              onDelete={() => handleRemoveFilter(filter.id)}\n              deleteIcon={<HighlightOffIcon />}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Chart */}\n      <div style={{ flex: 1, padding: 8 }}>\n        {renderChart}\n      </div>\n\n      {/* Drilldown Modal */}\n      <DrilldownModal\n        open={drilldownOpen}\n        onClose={() => setDrilldownOpen(false)}\n        drilldownData={drilldownData}\n      />\n    </Paper>\n  );\n};\n\nexport default InteractiveChart;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport {\n  Typography,\n  Paper,\n  IconButton,\n  Tooltip as MuiTooltip,\n  Chip,\n  useTheme,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  styled\n} from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport ShareIcon from '@mui/icons-material/Share';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\nimport InteractiveChart from './InteractiveChart';\nimport ZoomableTimeSeriesChart from './ZoomableTimeSeriesChart';\nimport LassoSelectionScatterChart from './LassoSelectionScatterChart';\nimport { AnnotationMarker, useAnnotationContext } from './AnnotationSystem';\nimport DrilldownModal, { DrilldownData } from './DrilldownModal';\nimport { useFilterContext, Filter } from './FilterContext';\nimport { TooltipData } from './EnhancedTooltip';\n\n// Styled components to avoid TypeScript Box sx prop issues\nconst HeaderContainer = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  borderBottom: '1px solid',\n  borderColor: theme.palette.divider\n}));\n\nconst TitleContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center'\n});\n\nconst ActionsContainer = styled('div')({\n  display: 'flex',\n  gap: 4\n});\n\nconst FiltersContainer = styled('div')(({ theme }) => ({\n  padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1)\n}));\n\nconst ChartContainer = styled('div')({\n  flex: 1,\n  position: 'relative'\n});\n\n// Chart types\nexport type AdvancedChartType =\n  'area' | 'bar' | 'line' | 'pie' | 'scatter' |\n  'timeSeries' | 'zoomableTimeSeries' | 'lassoScatter';\n\n/**\n * Data point interface for chart data\n */\ninterface ChartDataPoint {\n  [key: string]: any;\n}\n\n/**\n * Export format type\n */\ntype ExportFormat = 'csv' | 'excel' | 'pdf';\n\n/**\n * Advanced interactive chart props\n */\ninterface AdvancedInteractiveChartProps {\n  /** Unique identifier for the chart */\n  id: string;\n  /** Chart title */\n  title: string;\n  /** Optional chart description */\n  description?: string;\n  /** Chart type */\n  type: AdvancedChartType;\n  /** Chart data array */\n  data: ChartDataPoint[];\n  /** Key for X-axis values */\n  xKey: string;\n  /** Keys for Y-axis values */\n  yKeys?: string[];\n  /** Key for name/label values */\n  nameKey?: string;\n  /** Key for value data */\n  valueKey?: string;\n  /** Chart height in pixels */\n  height?: number;\n  /** Loading state indicator */\n  loading?: boolean;\n  /** Error message if any */\n  error?: string | null;\n  /** Chart colors array */\n  colors?: string[];\n  /** Whether to show legend */\n  showLegend?: boolean;\n  /** Whether to show grid */\n  showGrid?: boolean;\n  /** Whether to enable drill-down functionality */\n  enableDrilldown?: boolean;\n  /** Whether to enable tooltips */\n  enableTooltip?: boolean;\n  /** Whether to enable cross-filtering */\n  enableCrossFiltering?: boolean;\n  /** Whether to enable zoom functionality */\n  enableZoom?: boolean;\n  /** Whether to enable lasso selection */\n  enableLassoSelection?: boolean;\n  /** Whether to enable annotations */\n  enableAnnotations?: boolean;\n  /** Whether to enable export functionality */\n  enableExport?: boolean;\n  /** Whether to enable fullscreen mode */\n  enableFullscreen?: boolean;\n  /** Custom tooltip formatter function */\n  tooltipFormatter?: (value: any, name: string, props: any) => string;\n  /** Function to get tooltip data */\n  getTooltipData?: (payload: any[], label: string) => TooltipData;\n  /** Function to get drill-down data */\n  getDrilldownData?: (data: ChartDataPoint, index: number) => DrilldownData;\n  /** Function to handle export */\n  onExport?: (format: ExportFormat, data: ChartDataPoint[]) => void;\n  /** Function to handle sharing */\n  onShare?: (chartId: string) => void;\n  /** Function to handle click events */\n  onClick?: (data: ChartDataPoint, index: number) => void;\n}\n\n/**\n * AdvancedInteractiveChart component\n * A chart component with advanced interactive features\n */\nconst AdvancedInteractiveChart: React.FC<AdvancedInteractiveChartProps> = ({\n  id,\n  title,\n  description,\n  type,\n  data,\n  xKey,\n  yKeys = [],\n  nameKey = 'name',\n  valueKey = 'value',\n  height = 300,\n  loading = false,\n  error = null,\n  colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'],\n  showLegend = true,\n  showGrid = true,\n  enableDrilldown = true,\n  enableTooltip = true,\n  enableCrossFiltering = true,\n  enableZoom = true,\n  enableLassoSelection = true,\n  enableAnnotations = true,\n  enableExport = true,\n  enableFullscreen = true,\n  tooltipFormatter,\n  getTooltipData,\n  getDrilldownData,\n  onExport,\n  onShare,\n  onClick\n}) => {\n  const theme = useTheme();\n  const { filters, addFilter, removeFilter, getFiltersForSource } = useFilterContext();\n  const { getAnnotationsForChart } = useAnnotationContext();\n\n  // State for active elements\n  const [drilldownOpen, setDrilldownOpen] = useState<boolean>(false);\n  const [drilldownData, setDrilldownData] = useState<DrilldownData | null>(null);\n  const [isFullscreen, setIsFullscreen] = useState<boolean>(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null);\n\n  // Get active filters for this chart\n  const activeFilters = useMemo(() => {\n    return getFiltersForSource(id);\n  }, [getFiltersForSource, id]);\n\n  // Get annotations for this chart\n  const annotations = useMemo(() => {\n    return getAnnotationsForChart(id);\n  }, [getAnnotationsForChart, id]);\n\n  // Handle chart element click for drill-down\n  const handleDrillDown = useCallback((data: any, index: number) => {\n    // If custom onClick handler is provided, call it\n    if (onClick) {\n      onClick(data, index);\n      return;\n    }\n\n    if (!enableDrilldown) return;\n\n    // Generate drilldown data\n    let drillData: DrilldownData;\n\n    if (getDrilldownData) {\n      // Use custom function to get drilldown data\n      drillData = getDrilldownData(data, index);\n    } else {\n      // Generate default drilldown data\n      let drilldownTitle = '';\n      let category = '';\n      let value = 0;\n      let detailData: any[] = [];\n\n      if (type === 'pie') {\n        drilldownTitle = `${title} - ${data[nameKey]}`;\n        category = data[nameKey];\n        value = data[valueKey];\n\n        // Filter original data to get details\n        detailData = data.metadata?.detailData || [];\n      } else if (type === 'scatter' || type === 'lassoScatter') {\n        drilldownTitle = `${title} - Point Details`;\n        category = data[nameKey] || `${data[xKey]}, ${data[yKeys?.[0] || 'y']}`;\n        value = data[valueKey] || data[yKeys?.[0]];\n\n        // Use the point data as detail\n        detailData = [data];\n      } else {\n        drilldownTitle = `${title} - ${data[xKey]}`;\n        category = data[xKey];\n\n        if (yKeys.length > 0) {\n          // Use the first yKey as the value\n          value = data[yKeys[0]];\n        } else {\n          value = data[valueKey];\n        }\n\n        // Filter original data to get details\n        detailData = data.metadata?.detailData || [];\n      }\n\n      drillData = {\n        title: drilldownTitle,\n        description: description,\n        category,\n        value,\n        data: detailData.length > 0 ? detailData : [data]\n      };\n    }\n\n    setDrilldownData(drillData);\n    setDrilldownOpen(true);\n  }, [\n    enableDrilldown, getDrilldownData, type, title, description,\n    nameKey, valueKey, xKey, yKeys, onClick\n  ]);\n\n  // Remove filter handler\n  const handleRemoveFilter = (filterId: string) => {\n    removeFilter(filterId);\n  };\n\n  // Toggle fullscreen\n  const handleToggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n\n  // Handle menu open\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  // Handle menu close\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  // Handle export\n  const handleExport = (format: 'csv' | 'excel' | 'pdf') => {\n    if (onExport) {\n      onExport(format, data);\n    } else {\n      console.log(`Exporting chart in ${format} format`);\n      // Default export implementation would go here\n    }\n    handleMenuClose();\n  };\n\n  // Handle share\n  const handleShare = () => {\n    if (onShare) {\n      onShare(id);\n    } else {\n      console.log(`Sharing chart with ID: ${id}`);\n      // Default share implementation would go here\n    }\n    handleMenuClose();\n  };\n\n  // Get annotation markers\n  const getAnnotationMarkers = () => {\n    if (!enableAnnotations || annotations.length === 0) return null;\n\n    return annotations.map(annotation => {\n      // Skip annotations without position\n      if (!annotation.position) return null;\n\n      return (\n        <AnnotationMarker\n          key={annotation.id}\n          chartId={id}\n          dataPointId={annotation.dataPointId}\n          dataPointLabel={annotation.metadata?.label || `Data point ${annotation.dataPointId}`}\n          position={annotation.position}\n        />\n      );\n    });\n  };\n\n  /**\n   * Render chart based on type\n   * Memoized to prevent unnecessary re-renders\n   */\n  const renderChart = useMemo(() => {\n    // Common props for all chart types\n    const commonProps = {\n      id,\n      title,\n      description,\n      data,\n      xKey,\n      loading,\n      error,\n      colors,\n      showLegend,\n      showGrid,\n      tooltipFormatter,\n      getTooltipData\n    };\n\n    // Time series chart types\n    if (type === 'timeSeries' || type === 'zoomableTimeSeries') {\n      return (\n        <ZoomableTimeSeriesChart\n          {...commonProps}\n          type={type === 'timeSeries' ? 'line' : 'area'}\n          yKeys={yKeys}\n          height={height}\n          enableBrush={enableZoom}\n          enableZoom={enableZoom}\n          onClick={handleDrillDown}\n        />\n      );\n    }\n\n    // Scatter chart types\n    if (type === 'scatter' || type === 'lassoScatter') {\n      return (\n        <LassoSelectionScatterChart\n          {...commonProps}\n          yKey={yKeys?.[0] || 'y'}\n          zKey={yKeys && yKeys.length > 1 ? yKeys[1] : undefined}\n          nameKey={nameKey}\n          height={height}\n          enableLassoSelection={enableLassoSelection}\n          enableCrossFiltering={enableCrossFiltering}\n          onClick={handleDrillDown}\n        />\n      );\n    }\n\n    // Default chart types (bar, line, area, pie)\n    return (\n      <InteractiveChart\n        {...commonProps}\n        type={type}\n        yKeys={yKeys}\n        nameKey={nameKey}\n        valueKey={valueKey}\n        height={height}\n        enableDrilldown={enableDrilldown}\n        enableTooltip={enableTooltip}\n        enableCrossFiltering={enableCrossFiltering}\n        onClick={handleDrillDown}\n      />\n    );\n  }, [\n    id, title, description, data, xKey, loading, error, colors, showLegend, showGrid,\n    tooltipFormatter, getTooltipData, type, yKeys, height, enableZoom, enableLassoSelection,\n    enableCrossFiltering, nameKey, valueKey, enableDrilldown, enableTooltip, handleDrillDown\n  ]);\n\n  return (\n    <Paper\n      sx={{\n        height: isFullscreen ? '100vh' : height,\n        width: isFullscreen ? '100vw' : '100%',\n        position: isFullscreen ? 'fixed' : 'relative',\n        top: isFullscreen ? 0 : 'auto',\n        left: isFullscreen ? 0 : 'auto',\n        zIndex: isFullscreen ? 1300 : 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n      }}\n      elevation={isFullscreen ? 24 : 1}\n    >\n      {/* Header */}\n      <HeaderContainer>\n        <TitleContainer>\n          <Typography variant=\"subtitle1\">{title}</Typography>\n          {description && (\n            <MuiTooltip title={description}>\n              <IconButton size=\"small\">\n                <InfoOutlinedIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n        </TitleContainer>\n        <ActionsContainer>\n          {enableFullscreen && (\n            <MuiTooltip title={isFullscreen ? \"Exit Fullscreen\" : \"Fullscreen\"}>\n              <IconButton size=\"small\" onClick={handleToggleFullscreen}>\n                <FullscreenIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n          {(enableExport || enableAnnotations) && (\n            <MuiTooltip title=\"More Options\">\n              <IconButton size=\"small\" onClick={handleMenuOpen}>\n                <MoreVertIcon fontSize=\"small\" />\n              </IconButton>\n            </MuiTooltip>\n          )}\n        </ActionsContainer>\n\n        {/* Options Menu */}\n        <Menu\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={handleMenuClose}\n        >\n          {enableExport && (\n            <>\n              <MenuItem onClick={() => handleExport('csv')}>\n                <ListItemIcon>\n                  <DownloadIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Export as CSV</ListItemText>\n              </MenuItem>\n              <MenuItem onClick={() => handleExport('excel')}>\n                <ListItemIcon>\n                  <DownloadIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Export as Excel</ListItemText>\n              </MenuItem>\n              <MenuItem onClick={() => handleExport('pdf')}>\n                <ListItemIcon>\n                  <DownloadIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Export as PDF</ListItemText>\n              </MenuItem>\n              <Divider />\n            </>\n          )}\n          {enableAnnotations && (\n            <MenuItem onClick={() => console.log('View all annotations')}>\n              <ListItemIcon>\n                <CommentIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>\n                View All Annotations ({annotations.length})\n              </ListItemText>\n            </MenuItem>\n          )}\n          {onShare && (\n            <MenuItem onClick={handleShare}>\n              <ListItemIcon>\n                <ShareIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>Share Chart</ListItemText>\n            </MenuItem>\n          )}\n        </Menu>\n      </HeaderContainer>\n\n      {/* Active filters */}\n      {activeFilters.length > 0 && (\n        <FiltersContainer>\n          {activeFilters.map((filter) => (\n            <Chip\n              key={filter.id}\n              label={`${filter.field}: ${\n                Array.isArray(filter.value)\n                  ? `${filter.value.length} selected`\n                  : filter.value\n              }`}\n              size=\"small\"\n              onDelete={() => handleRemoveFilter(filter.id)}\n              deleteIcon={<HighlightOffIcon />}\n            />\n          ))}\n        </FiltersContainer>\n      )}\n\n      {/* Chart */}\n      <ChartContainer>\n        {renderChart}\n        {getAnnotationMarkers()}\n      </ChartContainer>\n\n      {/* Drilldown Modal */}\n      <DrilldownModal\n        open={drilldownOpen}\n        onClose={() => setDrilldownOpen(false)}\n        drilldownData={drilldownData}\n      />\n    </Paper>\n  );\n};\n\nexport default AdvancedInteractiveChart;\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  IconButton,\n  Tooltip,\n  useTheme,\n  Badge,\n  Chip\n} from '@mui/material';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport SelectAllIcon from '@mui/icons-material/SelectAll';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\nimport { format as formatDate } from 'date-fns';\nimport {\n  ResponsiveContainer,\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  ZAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  Cell\n} from 'recharts';\n\nimport EnhancedTooltip, { TooltipData } from './EnhancedTooltip';\nimport { useFilterContext, Filter } from './FilterContext';\n\n// Point interface\ninterface Point {\n  x: number;\n  y: number;\n}\n\n// Lasso selection scatter chart props\ninterface LassoSelectionScatterChartProps {\n  id: string;\n  title: string;\n  description?: string;\n  data: any[];\n  xKey: string;\n  yKey: string;\n  zKey?: string;\n  nameKey?: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  colors?: string[];\n  showLegend?: boolean;\n  showGrid?: boolean;\n  enableLassoSelection?: boolean;\n  enableCrossFiltering?: boolean;\n  tooltipFormatter?: (value: any, name: string, props: any) => string;\n  getTooltipData?: (payload: any[], label: string) => TooltipData;\n  onClick?: (data: any, index: number) => void;\n}\n\n/**\n * LassoSelectionScatterChart component\n * A scatter chart with lasso selection capabilities\n */\nconst LassoSelectionScatterChart: React.FC<LassoSelectionScatterChartProps> = ({\n  id,\n  title,\n  description,\n  data,\n  xKey,\n  yKey,\n  zKey,\n  nameKey = 'name',\n  height = 300,\n  loading = false,\n  error = null,\n  colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'],\n  showLegend = true,\n  showGrid = true,\n  enableLassoSelection = true,\n  enableCrossFiltering = true,\n  tooltipFormatter,\n  getTooltipData,\n  onClick\n}) => {\n  const theme = useTheme();\n  const { filters, addFilter, removeFilter, clearFilters, getFiltersForSource, applyFilters } = useFilterContext();\n  \n  // Get active filters for this chart\n  const activeFilters = getFiltersForSource(id);\n  \n  // Apply filters from other sources to the data\n  const filteredData = applyFilters(data, id);\n  \n  // State for lasso selection\n  const [lassoPoints, setLassoPoints] = useState<Point[]>([]);\n  const [isSelecting, setIsSelecting] = useState<boolean>(false);\n  const [selectedPoints, setSelectedPoints] = useState<any[]>([]);\n  const [hoveredPoint, setHoveredPoint] = useState<any | null>(null);\n  \n  // Refs for chart components\n  const svgRef = useRef<SVGSVGElement | null>(null);\n  const scatterRef = useRef<any>(null);\n  \n  // Format currency\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n  \n  // Format number\n  const formatNumber = (value: number): string => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n  \n  // Custom tooltip content\n  const CustomTooltipContent = ({ active, payload }: any) => {\n    if (!active || !payload || payload.length === 0) {\n      return null;\n    }\n    \n    // Generate tooltip data\n    let tooltipData: TooltipData;\n    \n    if (getTooltipData) {\n      // Use custom function to get tooltip data\n      tooltipData = getTooltipData(payload, '');\n    } else {\n      // Generate default tooltip data\n      const item = payload[0].payload;\n      \n      tooltipData = {\n        label: item[nameKey] || '',\n        payload: [\n          {\n            name: xKey.charAt(0).toUpperCase() + xKey.slice(1).replace(/([A-Z])/g, ' $1'),\n            value: item[xKey],\n            color: payload[0].color || payload[0].fill\n          },\n          {\n            name: yKey.charAt(0).toUpperCase() + yKey.slice(1).replace(/([A-Z])/g, ' $1'),\n            value: item[yKey],\n            color: payload[0].color || payload[0].fill\n          }\n        ]\n      };\n      \n      // Add Z value if available\n      if (zKey && item[zKey] !== undefined) {\n        tooltipData.payload.push({\n          name: zKey.charAt(0).toUpperCase() + zKey.slice(1).replace(/([A-Z])/g, ' $1'),\n          value: item[zKey],\n          color: payload[0].color || payload[0].fill\n        });\n      }\n      \n      // Add additional info if available\n      const additionalInfo = [];\n      \n      for (const key in item) {\n        if (\n          key !== xKey &&\n          key !== yKey &&\n          key !== zKey &&\n          key !== nameKey &&\n          key !== 'id' &&\n          key !== 'color' &&\n          key !== 'fill'\n        ) {\n          additionalInfo.push({\n            label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n            value: item[key]\n          });\n        }\n      }\n      \n      if (additionalInfo.length > 0) {\n        tooltipData.additionalInfo = additionalInfo;\n      }\n    }\n    \n    return <EnhancedTooltip tooltipData={tooltipData} formatter={tooltipFormatter} />;\n  };\n  \n  // Convert SVG coordinates to chart coordinates\n  const svgToChartCoords = useCallback((svgX: number, svgY: number): Point | null => {\n    if (!svgRef.current) return null;\n    \n    const svg = svgRef.current;\n    const rect = svg.getBoundingClientRect();\n    \n    // Get chart area dimensions\n    const chartWidth = rect.width;\n    const chartHeight = rect.height;\n    \n    // Get chart margins (approximate)\n    const marginTop = 10;\n    const marginRight = 30;\n    const marginBottom = 30;\n    const marginLeft = 60;\n    \n    // Calculate chart area\n    const chartAreaWidth = chartWidth - marginLeft - marginRight;\n    const chartAreaHeight = chartHeight - marginTop - marginBottom;\n    \n    // Convert SVG coordinates to chart coordinates\n    const chartX = (svgX - marginLeft) / chartAreaWidth;\n    const chartY = (svgY - marginTop) / chartAreaHeight;\n    \n    // Ensure coordinates are within chart area\n    if (chartX < 0 || chartX > 1 || chartY < 0 || chartY > 1) {\n      return null;\n    }\n    \n    return { x: chartX, y: chartY };\n  }, []);\n  \n  // Handle mouse down for lasso selection\n  const handleMouseDown = useCallback((e: React.MouseEvent<SVGSVGElement>) => {\n    if (!enableLassoSelection) return;\n    \n    // Get mouse position relative to SVG\n    const svg = e.currentTarget;\n    const rect = svg.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    // Convert to chart coordinates\n    const chartCoords = svgToChartCoords(x, y);\n    if (!chartCoords) return;\n    \n    // Start selection\n    setIsSelecting(true);\n    setLassoPoints([chartCoords]);\n  }, [enableLassoSelection, svgToChartCoords]);\n  \n  // Handle mouse move for lasso selection\n  const handleMouseMove = useCallback((e: React.MouseEvent<SVGSVGElement>) => {\n    if (!enableLassoSelection || !isSelecting) return;\n    \n    // Get mouse position relative to SVG\n    const svg = e.currentTarget;\n    const rect = svg.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    // Convert to chart coordinates\n    const chartCoords = svgToChartCoords(x, y);\n    if (!chartCoords) return;\n    \n    // Add point to lasso\n    setLassoPoints(prev => [...prev, chartCoords]);\n  }, [enableLassoSelection, isSelecting, svgToChartCoords]);\n  \n  // Handle mouse up for lasso selection\n  const handleMouseUp = useCallback(() => {\n    if (!enableLassoSelection || !isSelecting) return;\n    \n    // End selection\n    setIsSelecting(false);\n    \n    // If less than 3 points, clear lasso\n    if (lassoPoints.length < 3) {\n      setLassoPoints([]);\n      return;\n    }\n    \n    // Close the lasso by adding the first point again\n    const closedLasso = [...lassoPoints, lassoPoints[0]];\n    \n    // Find points inside lasso\n    const selected = filteredData.filter(item => {\n      // Get data point coordinates\n      const xValue = item[xKey];\n      const yValue = item[yKey];\n      \n      // Skip if coordinates are not numbers\n      if (typeof xValue !== 'number' || typeof yValue !== 'number') {\n        return false;\n      }\n      \n      // Convert data coordinates to chart coordinates\n      const xMin = Math.min(...filteredData.map(d => d[xKey]));\n      const xMax = Math.max(...filteredData.map(d => d[xKey]));\n      const yMin = Math.min(...filteredData.map(d => d[yKey]));\n      const yMax = Math.max(...filteredData.map(d => d[yKey]));\n      \n      const chartX = (xValue - xMin) / (xMax - xMin);\n      const chartY = 1 - (yValue - yMin) / (yMax - yMin); // Invert Y axis\n      \n      // Check if point is inside lasso\n      return isPointInPolygon(chartX, chartY, closedLasso);\n    });\n    \n    // Update selected points\n    setSelectedPoints(selected);\n    \n    // Apply filter if cross-filtering is enabled\n    if (enableCrossFiltering && selected.length > 0) {\n      // Create filter for selected points\n      const filterId = `${id}-lasso-selection`;\n      \n      // Remove existing filter\n      removeFilter(filterId);\n      \n      // Add new filter\n      const newFilter: Filter = {\n        id: filterId,\n        type: 'category',\n        field: 'id',\n        value: selected.map(item => item.id),\n        operator: 'in',\n        source: id\n      };\n      \n      addFilter(newFilter);\n    }\n    \n    // Clear lasso\n    setLassoPoints([]);\n  }, [\n    enableLassoSelection, isSelecting, lassoPoints, filteredData,\n    xKey, yKey, id, enableCrossFiltering, addFilter, removeFilter\n  ]);\n  \n  // Check if a point is inside a polygon (lasso)\n  const isPointInPolygon = (x: number, y: number, polygon: Point[]): boolean => {\n    let inside = false;\n    for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n      const xi = polygon[i].x;\n      const yi = polygon[i].y;\n      const xj = polygon[j].x;\n      const yj = polygon[j].y;\n      \n      const intersect = ((yi > y) !== (yj > y)) &&\n        (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n      \n      if (intersect) inside = !inside;\n    }\n    \n    return inside;\n  };\n  \n  // Clear selection\n  const handleClearSelection = useCallback(() => {\n    setSelectedPoints([]);\n    \n    // Remove filter\n    const filterId = `${id}-lasso-selection`;\n    removeFilter(filterId);\n  }, [id, removeFilter]);\n  \n  // Select all points\n  const handleSelectAll = useCallback(() => {\n    setSelectedPoints(filteredData);\n    \n    // Create filter for all points\n    const filterId = `${id}-lasso-selection`;\n    \n    // Remove existing filter\n    removeFilter(filterId);\n    \n    // Add new filter\n    const newFilter: Filter = {\n      id: filterId,\n      type: 'category',\n      field: 'id',\n      value: filteredData.map(item => item.id),\n      operator: 'in',\n      source: id\n    };\n    \n    addFilter(newFilter);\n  }, [filteredData, id, addFilter, removeFilter]);\n  \n  // Handle point hover\n  const handlePointHover = useCallback((data: any) => {\n    setHoveredPoint(data);\n  }, []);\n  \n  // Handle point click\n  const handlePointClick = useCallback((data: any, index: number) => {\n    if (onClick) {\n      onClick(data, index);\n    }\n  }, [onClick]);\n  \n  // Render lasso path\n  const renderLassoPath = () => {\n    if (lassoPoints.length < 2) return null;\n    \n    // Convert chart coordinates to SVG coordinates\n    const svgPoints = lassoPoints.map(point => {\n      const svg = svgRef.current;\n      if (!svg) return '';\n      \n      const rect = svg.getBoundingClientRect();\n      \n      // Get chart margins (approximate)\n      const marginTop = 10;\n      const marginRight = 30;\n      const marginBottom = 30;\n      const marginLeft = 60;\n      \n      // Calculate chart area\n      const chartAreaWidth = rect.width - marginLeft - marginRight;\n      const chartAreaHeight = rect.height - marginTop - marginBottom;\n      \n      // Convert chart coordinates to SVG coordinates\n      const svgX = point.x * chartAreaWidth + marginLeft;\n      const svgY = point.y * chartAreaHeight + marginTop;\n      \n      return `${svgX},${svgY}`;\n    });\n    \n    return (\n      <polyline\n        points={svgPoints.join(' ')}\n        fill=\"none\"\n        stroke={theme.palette.primary.main}\n        strokeWidth={2}\n        strokeDasharray=\"5,5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    );\n  };\n  \n  // Render loading state\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  // Render error state\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n  \n  // Render empty state\n  if (!filteredData || filteredData.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </Box>\n    );\n  }\n  \n  return (\n    <Box sx={{ height, position: 'relative' }}>\n      {/* Selection controls */}\n      {enableLassoSelection && (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 0.5,\n            backgroundColor: 'rgba(255, 255, 255, 0.7)',\n            borderRadius: 1,\n            p: 0.5\n          }}\n        >\n          <Tooltip title=\"Select All Points\">\n            <IconButton size=\"small\" onClick={handleSelectAll}>\n              <SelectAllIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Clear Selection\">\n            <IconButton\n              size=\"small\"\n              onClick={handleClearSelection}\n              disabled={selectedPoints.length === 0}\n            >\n              <ClearAllIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Badge badgeContent={selectedPoints.length} color=\"primary\" max={99}>\n            <FilterListIcon fontSize=\"small\" />\n          </Badge>\n        </Box>\n      )}\n      \n      {/* Selected points count */}\n      {selectedPoints.length > 0 && (\n        <Box sx={{ position: 'absolute', top: 10, left: 10, zIndex: 1 }}>\n          <Chip\n            label={`${selectedPoints.length} points selected`}\n            onDelete={handleClearSelection}\n            deleteIcon={<HighlightOffIcon />}\n            color=\"primary\"\n            size=\"small\"\n          />\n        </Box>\n      )}\n      \n      {/* Chart */}\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n          ref={scatterRef}\n        >\n          {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n          <XAxis\n            type=\"number\"\n            dataKey={xKey}\n            name={xKey.charAt(0).toUpperCase() + xKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n          />\n          <YAxis\n            type=\"number\"\n            dataKey={yKey}\n            name={yKey.charAt(0).toUpperCase() + yKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n          />\n          {zKey && (\n            <ZAxis\n              type=\"number\"\n              dataKey={zKey}\n              range={[50, 500]}\n              name={zKey.charAt(0).toUpperCase() + zKey.slice(1).replace(/([A-Z])/g, ' $1')}\n            />\n          )}\n          <RechartsTooltip content={<CustomTooltipContent />} />\n          {showLegend && <Legend />}\n          <Scatter\n            name={title}\n            data={filteredData}\n            fill={colors[0]}\n            onMouseEnter={handlePointHover}\n            onClick={handlePointClick}\n          >\n            {filteredData.map((entry, index) => {\n              // Check if point is selected\n              const isSelected = selectedPoints.some(p => p.id === entry.id);\n              \n              // Check if point is hovered\n              const isHovered = hoveredPoint && hoveredPoint.id === entry.id;\n              \n              // Determine fill color\n              let fillColor = colors[index % colors.length];\n              if (entry.color) {\n                fillColor = entry.color;\n              }\n              \n              return (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={fillColor}\n                  stroke={isSelected ? theme.palette.primary.main : isHovered ? theme.palette.secondary.main : fillColor}\n                  strokeWidth={isSelected ? 2 : isHovered ? 1.5 : 0}\n                  opacity={isSelected ? 1 : 0.7}\n                />\n              );\n            })}\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n      \n      {/* SVG overlay for lasso selection */}\n      <svg\n        ref={svgRef}\n        width=\"100%\"\n        height=\"100%\"\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: enableLassoSelection ? 'auto' : 'none',\n          cursor: isSelecting ? 'crosshair' : 'default'\n        }}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n      >\n        {renderLassoPath()}\n      </svg>\n    </Box>\n  );\n};\n\nexport default LassoSelectionScatterChart;\n","import React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\n\n// Filter types\nexport type FilterType = 'category' | 'date' | 'value' | 'range' | 'search';\n\n// Filter value types\nexport type FilterValue = string | number | Date | string[] | number[] | [Date, Date] | null;\n\n// Filter object\nexport interface Filter {\n  id: string;\n  type: FilterType;\n  field: string;\n  value: FilterValue;\n  operator?: 'equals' | 'contains' | 'greaterThan' | 'lessThan' | 'between' | 'in';\n  source?: string; // Widget ID that created the filter\n}\n\n// Filter context state\ninterface FilterContextState {\n  filters: Filter[];\n  addFilter: (filter: Filter) => void;\n  updateFilter: (id: string, value: FilterValue) => void;\n  removeFilter: (id: string) => void;\n  clearFilters: (source?: string) => void;\n  getFiltersForSource: (source: string) => Filter[];\n  getFiltersExceptSource: (source: string) => Filter[];\n  applyFilters: <T extends object>(data: T[], excludeSource?: string) => T[];\n}\n\n// Create context\nconst FilterContext = createContext<FilterContextState | undefined>(undefined);\n\n// Filter context provider props\ninterface FilterContextProviderProps {\n  children: ReactNode;\n}\n\n/**\n * FilterContextProvider component\n * Provides filter state and methods for cross-filtering between widgets\n */\nexport const FilterContextProvider: React.FC<FilterContextProviderProps> = ({ children }) => {\n  const [filters, setFilters] = useState<Filter[]>([]);\n\n  // Add a new filter\n  const addFilter = useCallback((filter: Filter) => {\n    setFilters(prevFilters => {\n      // Check if filter with same id already exists\n      const existingFilterIndex = prevFilters.findIndex(f => f.id === filter.id);\n\n      if (existingFilterIndex >= 0) {\n        // Replace existing filter\n        const newFilters = [...prevFilters];\n        newFilters[existingFilterIndex] = filter;\n        return newFilters;\n      } else {\n        // Add new filter\n        return [...prevFilters, filter];\n      }\n    });\n  }, []);\n\n  // Update an existing filter\n  const updateFilter = useCallback((id: string, value: FilterValue) => {\n    setFilters(prevFilters => {\n      const filterIndex = prevFilters.findIndex(f => f.id === id);\n      if (filterIndex >= 0) {\n        const newFilters = [...prevFilters];\n        newFilters[filterIndex] = {\n          ...newFilters[filterIndex],\n          value\n        };\n        return newFilters;\n      }\n      return prevFilters;\n    });\n  }, []);\n\n  // Remove a filter\n  const removeFilter = useCallback((id: string) => {\n    setFilters(prevFilters => prevFilters.filter(f => f.id !== id));\n  }, []);\n\n  // Clear all filters\n  const clearFilters = useCallback((source?: string) => {\n    if (source) {\n      // Clear filters from specific source\n      setFilters(prevFilters => prevFilters.filter(f => f.source !== source));\n    } else {\n      // Clear all filters\n      setFilters([]);\n    }\n  }, []);\n\n  // Get filters for a specific source\n  const getFiltersForSource = useCallback((source: string) => {\n    return filters.filter(f => f.source === source);\n  }, [filters]);\n\n  // Get filters except from a specific source\n  const getFiltersExceptSource = useCallback((source: string) => {\n    return filters.filter(f => f.source !== source);\n  }, [filters]);\n\n  // Apply filters to data\n  const applyFilters = useCallback(<T extends object>(data: T[], excludeSource?: string): T[] => {\n    // If no filters or no data, return original data\n    if (filters.length === 0 || data.length === 0) {\n      return data;\n    }\n\n    // Get filters to apply (exclude filters from specified source if provided)\n    const filtersToApply = excludeSource\n      ? filters.filter(f => f.source !== excludeSource)\n      : filters;\n\n    // If no filters to apply, return original data\n    if (filtersToApply.length === 0) {\n      return data;\n    }\n\n    // Apply each filter\n    return data.filter(item => {\n      return filtersToApply.every(filter => {\n        const fieldValue = item[filter.field as keyof T];\n\n        // Skip if field doesn't exist in item\n        if (fieldValue === undefined) {\n          return true;\n        }\n\n        switch (filter.type) {\n          case 'category':\n            if (filter.operator === 'in' && Array.isArray(filter.value)) {\n              // Ensure we're comparing strings\n              const stringValue = String(fieldValue);\n              return filter.value.some(val => String(val) === stringValue);\n            } else {\n              return fieldValue === filter.value;\n            }\n\n          case 'date':\n            if (!filter.value) return true;\n\n            const itemDate = fieldValue instanceof Date\n              ? fieldValue\n              : new Date(fieldValue as string);\n\n            if (filter.operator === 'between' && Array.isArray(filter.value) && filter.value.length === 2) {\n              const [startDate, endDate] = filter.value as [Date, Date];\n              return itemDate >= startDate && itemDate <= endDate;\n            } else if (filter.value instanceof Date) {\n              return itemDate.toDateString() === (filter.value as Date).toDateString();\n            }\n            return true;\n\n          case 'value':\n            if (typeof fieldValue !== 'number') return true;\n\n            if (filter.operator === 'greaterThan') {\n              return fieldValue > (filter.value as number);\n            } else if (filter.operator === 'lessThan') {\n              return fieldValue < (filter.value as number);\n            } else if (filter.operator === 'between' && Array.isArray(filter.value) && filter.value.length === 2) {\n              const [min, max] = filter.value as [number, number];\n              return fieldValue >= min && fieldValue <= max;\n            } else {\n              return fieldValue === filter.value;\n            }\n\n          case 'search':\n            if (typeof fieldValue !== 'string') return true;\n\n            return fieldValue.toLowerCase().includes((filter.value as string).toLowerCase());\n\n          default:\n            return true;\n        }\n      });\n    });\n  }, [filters]);\n\n  // Context value\n  const value: FilterContextState = {\n    filters,\n    addFilter,\n    updateFilter,\n    removeFilter,\n    clearFilters,\n    getFiltersForSource,\n    getFiltersExceptSource,\n    applyFilters\n  };\n\n  return (\n    <FilterContext.Provider value={value}>\n      {children}\n    </FilterContext.Provider>\n  );\n};\n\n// Custom hook to use filter context\nexport const useFilterContext = () => {\n  const context = useContext(FilterContext);\n  if (context === undefined) {\n    throw new Error('useFilterContext must be used within a FilterContextProvider');\n  }\n  return context;\n};\n\nexport default FilterContext;\n","import React, { useState, useCallback, createContext, useContext, ReactNode } from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Popover,\n  Paper,\n  useTheme,\n  Badge,\n  Chip,\n  Avatar\n} from '@mui/material';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport AddCommentIcon from '@mui/icons-material/AddComment';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FlagIcon from '@mui/icons-material/Flag';\nimport { format as formatDate } from 'date-fns';\n\n// Annotation type\nexport interface Annotation {\n  id: string;\n  chartId: string;\n  dataPointId: string | number;\n  text: string;\n  author: string;\n  createdAt: string;\n  updatedAt: string;\n  type: 'comment' | 'flag' | 'insight';\n  position?: {\n    x: number;\n    y: number;\n  };\n  metadata?: {\n    [key: string]: any;\n  };\n}\n\n// Annotation context state\ninterface AnnotationContextState {\n  annotations: Annotation[];\n  addAnnotation: (annotation: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => void;\n  updateAnnotation: (id: string, text: string, type: Annotation['type']) => void;\n  deleteAnnotation: (id: string) => void;\n  getAnnotationsForChart: (chartId: string) => Annotation[];\n  getAnnotationsForDataPoint: (chartId: string, dataPointId: string | number) => Annotation[];\n}\n\n// Create context\nconst AnnotationContext = createContext<AnnotationContextState | undefined>(undefined);\n\n// Annotation context provider props\ninterface AnnotationContextProviderProps {\n  children: ReactNode;\n}\n\n/**\n * AnnotationContextProvider component\n * Provides annotation state and methods for managing annotations\n */\nexport const AnnotationContextProvider: React.FC<AnnotationContextProviderProps> = ({ children }) => {\n  const [annotations, setAnnotations] = useState<Annotation[]>([]);\n  \n  // Add a new annotation\n  const addAnnotation = useCallback((annotation: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => {\n    const now = new Date().toISOString();\n    const newAnnotation: Annotation = {\n      ...annotation,\n      id: `annotation-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n      createdAt: now,\n      updatedAt: now\n    };\n    \n    setAnnotations(prev => [...prev, newAnnotation]);\n  }, []);\n  \n  // Update an annotation\n  const updateAnnotation = useCallback((id: string, text: string, type: Annotation['type']) => {\n    setAnnotations(prev => prev.map(annotation => {\n      if (annotation.id === id) {\n        return {\n          ...annotation,\n          text,\n          type,\n          updatedAt: new Date().toISOString()\n        };\n      }\n      return annotation;\n    }));\n  }, []);\n  \n  // Delete an annotation\n  const deleteAnnotation = useCallback((id: string) => {\n    setAnnotations(prev => prev.filter(annotation => annotation.id !== id));\n  }, []);\n  \n  // Get annotations for a chart\n  const getAnnotationsForChart = useCallback((chartId: string) => {\n    return annotations.filter(annotation => annotation.chartId === chartId);\n  }, [annotations]);\n  \n  // Get annotations for a data point\n  const getAnnotationsForDataPoint = useCallback((chartId: string, dataPointId: string | number) => {\n    return annotations.filter(\n      annotation => annotation.chartId === chartId && annotation.dataPointId === dataPointId\n    );\n  }, [annotations]);\n  \n  // Context value\n  const value: AnnotationContextState = {\n    annotations,\n    addAnnotation,\n    updateAnnotation,\n    deleteAnnotation,\n    getAnnotationsForChart,\n    getAnnotationsForDataPoint\n  };\n  \n  return (\n    <AnnotationContext.Provider value={value}>\n      {children}\n    </AnnotationContext.Provider>\n  );\n};\n\n// Custom hook to use annotation context\nexport const useAnnotationContext = () => {\n  const context = useContext(AnnotationContext);\n  if (context === undefined) {\n    throw new Error('useAnnotationContext must be used within an AnnotationContextProvider');\n  }\n  return context;\n};\n\n// Annotation dialog props\ninterface AnnotationDialogProps {\n  open: boolean;\n  onClose: () => void;\n  chartId: string;\n  dataPointId: string | number;\n  dataPointLabel: string;\n  existingAnnotations: Annotation[];\n}\n\n/**\n * AnnotationDialog component\n * Dialog for adding, editing, and viewing annotations\n */\nexport const AnnotationDialog: React.FC<AnnotationDialogProps> = ({\n  open,\n  onClose,\n  chartId,\n  dataPointId,\n  dataPointLabel,\n  existingAnnotations\n}) => {\n  const theme = useTheme();\n  const { addAnnotation, updateAnnotation, deleteAnnotation } = useAnnotationContext();\n  \n  const [newAnnotationText, setNewAnnotationText] = useState<string>('');\n  const [newAnnotationType, setNewAnnotationType] = useState<Annotation['type']>('comment');\n  const [editingAnnotation, setEditingAnnotation] = useState<Annotation | null>(null);\n  \n  // Handle add annotation\n  const handleAddAnnotation = () => {\n    if (!newAnnotationText.trim()) return;\n    \n    addAnnotation({\n      chartId,\n      dataPointId,\n      text: newAnnotationText,\n      author: 'Current User', // Would come from auth context in a real app\n      type: newAnnotationType\n    });\n    \n    // Reset form\n    setNewAnnotationText('');\n    setNewAnnotationType('comment');\n  };\n  \n  // Handle edit annotation\n  const handleEditAnnotation = (annotation: Annotation) => {\n    setEditingAnnotation(annotation);\n    setNewAnnotationText(annotation.text);\n    setNewAnnotationType(annotation.type);\n  };\n  \n  // Handle save edit\n  const handleSaveEdit = () => {\n    if (!editingAnnotation || !newAnnotationText.trim()) return;\n    \n    updateAnnotation(editingAnnotation.id, newAnnotationText, newAnnotationType);\n    \n    // Reset form\n    setEditingAnnotation(null);\n    setNewAnnotationText('');\n    setNewAnnotationType('comment');\n  };\n  \n  // Handle cancel edit\n  const handleCancelEdit = () => {\n    setEditingAnnotation(null);\n    setNewAnnotationText('');\n    setNewAnnotationType('comment');\n  };\n  \n  // Handle delete annotation\n  const handleDeleteAnnotation = (id: string) => {\n    deleteAnnotation(id);\n    \n    // If deleting the annotation being edited, reset form\n    if (editingAnnotation && editingAnnotation.id === id) {\n      handleCancelEdit();\n    }\n  };\n  \n  // Get annotation type icon\n  const getAnnotationTypeIcon = (type: Annotation['type']) => {\n    switch (type) {\n      case 'comment':\n        return <CommentIcon fontSize=\"small\" />;\n      case 'flag':\n        return <FlagIcon fontSize=\"small\" color=\"error\" />;\n      case 'insight':\n        return <AddCommentIcon fontSize=\"small\" color=\"primary\" />;\n      default:\n        return <CommentIcon fontSize=\"small\" />;\n    }\n  };\n  \n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\">\n            Annotations for {dataPointLabel}\n          </Typography>\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{ color: theme.palette.grey[500] }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent dividers>\n        {/* Existing annotations */}\n        {existingAnnotations.length > 0 ? (\n          <List>\n            {existingAnnotations.map((annotation) => (\n              <React.Fragment key={annotation.id}>\n                <ListItem alignItems=\"flex-start\">\n                  <Box sx={{ mr: 1, mt: 0.5 }}>\n                    {getAnnotationTypeIcon(annotation.type)}\n                  </Box>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Typography variant=\"subtitle2\">\n                          {annotation.author}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {formatDate(new Date(annotation.createdAt), 'MMM dd, yyyy HH:mm')}\n                        </Typography>\n                      </Box>\n                    }\n                    secondary={\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.primary\"\n                        sx={{ mt: 0.5, whiteSpace: 'pre-wrap' }}\n                      >\n                        {annotation.text}\n                      </Typography>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Edit\">\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"edit\"\n                        onClick={() => handleEditAnnotation(annotation)}\n                        size=\"small\"\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => handleDeleteAnnotation(annotation.id)}\n                        size=\"small\"\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider component=\"li\" />\n              </React.Fragment>\n            ))}\n          </List>\n        ) : (\n          <Box sx={{ py: 2, textAlign: 'center' }}>\n            <Typography color=\"text.secondary\">\n              No annotations yet. Add one below.\n            </Typography>\n          </Box>\n        )}\n        \n        {/* Add/Edit annotation form */}\n        <Box sx={{ mt: 2 }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            {editingAnnotation ? 'Edit Annotation' : 'Add Annotation'}\n          </Typography>\n          <TextField\n            fullWidth\n            multiline\n            rows={3}\n            placeholder=\"Add your annotation here...\"\n            value={newAnnotationText}\n            onChange={(e) => setNewAnnotationText(e.target.value)}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          <Box sx={{ display: 'flex', mt: 1, gap: 1 }}>\n            <Chip\n              icon={<CommentIcon />}\n              label=\"Comment\"\n              onClick={() => setNewAnnotationType('comment')}\n              color={newAnnotationType === 'comment' ? 'primary' : 'default'}\n              variant={newAnnotationType === 'comment' ? 'filled' : 'outlined'}\n            />\n            <Chip\n              icon={<FlagIcon />}\n              label=\"Flag\"\n              onClick={() => setNewAnnotationType('flag')}\n              color={newAnnotationType === 'flag' ? 'primary' : 'default'}\n              variant={newAnnotationType === 'flag' ? 'filled' : 'outlined'}\n            />\n            <Chip\n              icon={<AddCommentIcon />}\n              label=\"Insight\"\n              onClick={() => setNewAnnotationType('insight')}\n              color={newAnnotationType === 'insight' ? 'primary' : 'default'}\n              variant={newAnnotationType === 'insight' ? 'filled' : 'outlined'}\n            />\n          </Box>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        {editingAnnotation ? (\n          <>\n            <Button onClick={handleCancelEdit}>Cancel</Button>\n            <Button\n              onClick={handleSaveEdit}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!newAnnotationText.trim()}\n            >\n              Save Changes\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button onClick={onClose}>Close</Button>\n            <Button\n              onClick={handleAddAnnotation}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!newAnnotationText.trim()}\n            >\n              Add Annotation\n            </Button>\n          </>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// Annotation marker props\ninterface AnnotationMarkerProps {\n  chartId: string;\n  dataPointId: string | number;\n  dataPointLabel: string;\n  position: {\n    x: number;\n    y: number;\n  };\n}\n\n/**\n * AnnotationMarker component\n * Displays a marker for annotations on a chart\n */\nexport const AnnotationMarker: React.FC<AnnotationMarkerProps> = ({\n  chartId,\n  dataPointId,\n  dataPointLabel,\n  position\n}) => {\n  const theme = useTheme();\n  const { getAnnotationsForDataPoint } = useAnnotationContext();\n  \n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  \n  // Get annotations for this data point\n  const annotations = getAnnotationsForDataPoint(chartId, dataPointId);\n  \n  // Handle marker click\n  const handleMarkerClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  // Handle popover close\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  \n  // Handle dialog open\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n    handlePopoverClose();\n  };\n  \n  // Handle dialog close\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n  \n  // Popover open state\n  const open = Boolean(anchorEl);\n  \n  return (\n    <>\n      <Badge\n        badgeContent={annotations.length}\n        color=\"primary\"\n        overlap=\"circular\"\n        sx={{\n          position: 'absolute',\n          left: `${position.x}%`,\n          top: `${position.y}%`,\n          transform: 'translate(-50%, -50%)',\n          zIndex: 1\n        }}\n      >\n        <Avatar\n          sx={{\n            width: 24,\n            height: 24,\n            bgcolor: annotations.length > 0 ? theme.palette.primary.main : theme.palette.grey[300],\n            cursor: 'pointer'\n          }}\n          onClick={handleMarkerClick}\n        >\n          <CommentIcon sx={{ fontSize: 14 }} />\n        </Avatar>\n      </Badge>\n      \n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Paper sx={{ p: 2, maxWidth: 300 }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            {dataPointLabel}\n          </Typography>\n          \n          {annotations.length > 0 ? (\n            <>\n              <Typography variant=\"body2\" gutterBottom>\n                {annotations.length} annotation{annotations.length !== 1 ? 's' : ''}\n              </Typography>\n              <List dense>\n                {annotations.slice(0, 2).map((annotation) => (\n                  <ListItem key={annotation.id}>\n                    <ListItemText\n                      primary={annotation.text.length > 50 ? `${annotation.text.substring(0, 50)}...` : annotation.text}\n                      secondary={`${annotation.author} - ${formatDate(new Date(annotation.createdAt), 'MMM dd')}`}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n              {annotations.length > 2 && (\n                <Typography variant=\"body2\" color=\"primary\" sx={{ mt: 1 }}>\n                  {annotations.length - 2} more...\n                </Typography>\n              )}\n            </>\n          ) : (\n            <Typography variant=\"body2\">\n              No annotations yet. Add one now.\n            </Typography>\n          )}\n          \n          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n            <Button size=\"small\" onClick={handleDialogOpen}>\n              {annotations.length > 0 ? 'View All' : 'Add Annotation'}\n            </Button>\n          </Box>\n        </Paper>\n      </Popover>\n      \n      <AnnotationDialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        chartId={chartId}\n        dataPointId={dataPointId}\n        dataPointLabel={dataPointLabel}\n        existingAnnotations={annotations}\n      />\n    </>\n  );\n};\n\nexport default AnnotationContext;\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  IconButton,\n  Tooltip,\n  useTheme\n} from '@mui/material';\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport ZoomOutIcon from '@mui/icons-material/ZoomOut';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { format as formatDate, parseISO } from 'date-fns';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  LineChart,\n  Line,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  Legend,\n  Brush,\n  ReferenceArea\n} from 'recharts';\n\nimport EnhancedTooltip, { TooltipData } from './EnhancedTooltip';\n\n// Chart types\nexport type TimeSeriesChartType = 'area' | 'line' | 'bar';\n\n// Zoomable time series chart props\ninterface ZoomableTimeSeriesChartProps {\n  id: string;\n  title: string;\n  description?: string;\n  type: TimeSeriesChartType;\n  data: any[];\n  xKey: string;\n  yKeys: string[];\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  colors?: string[];\n  showLegend?: boolean;\n  showGrid?: boolean;\n  enableBrush?: boolean;\n  enableZoom?: boolean;\n  tooltipFormatter?: (value: any, name: string, props: any) => string;\n  getTooltipData?: (payload: any[], label: string) => TooltipData;\n  onClick?: (data: any, index: number) => void;\n}\n\n/**\n * ZoomableTimeSeriesChart component\n * A time series chart with brushing and zooming capabilities\n */\nconst ZoomableTimeSeriesChart: React.FC<ZoomableTimeSeriesChartProps> = ({\n  id,\n  title,\n  description,\n  type,\n  data,\n  xKey,\n  yKeys,\n  height = 300,\n  loading = false,\n  error = null,\n  colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'],\n  showLegend = true,\n  showGrid = true,\n  enableBrush = true,\n  enableZoom = true,\n  tooltipFormatter,\n  getTooltipData,\n  onClick\n}) => {\n  const theme = useTheme();\n\n  // State for zoom\n  const [zoomState, setZoomState] = useState<{\n    refAreaLeft: string | null;\n    refAreaRight: string | null;\n    zoomed: boolean;\n    zoomDomain: { x: [number, number] } | null;\n  }>({\n    refAreaLeft: null,\n    refAreaRight: null,\n    zoomed: false,\n    zoomDomain: null\n  });\n\n  // Refs for chart components\n  const chartRef = useRef<any>(null);\n\n  // Format date for display\n  const formatDateDisplay = (dateStr: string) => {\n    try {\n      // Check if dateStr is a valid string\n      if (!dateStr || typeof dateStr !== 'string') {\n        return String(dateStr || '');\n      }\n\n      // Check if it's an ISO date string\n      if (dateStr.includes('T')) {\n        const date = parseISO(dateStr);\n        // Validate the date is valid before formatting\n        if (isNaN(date.getTime())) {\n          return String(dateStr);\n        }\n        return formatDate(date, 'MMM dd, yyyy');\n      }\n\n      // For non-ISO date strings, just return as is\n      return dateStr;\n    } catch (error) {\n      console.warn('Error formatting date:', error);\n      return String(dateStr || '');\n    }\n  };\n\n  // Custom tooltip content\n  const CustomTooltipContent = ({ active, payload, label }: any) => {\n    if (!active || !payload || payload.length === 0) {\n      return null;\n    }\n\n    // Generate tooltip data\n    let tooltipData: TooltipData;\n\n    if (getTooltipData) {\n      // Use custom function to get tooltip data\n      tooltipData = getTooltipData(payload, label);\n    } else {\n      // Generate default tooltip data\n      tooltipData = {\n        label: formatDateDisplay(label),\n        payload: payload.map((entry: any) => ({\n          name: entry.name,\n          value: entry.value,\n          color: entry.color || entry.fill\n        }))\n      };\n\n      // Add comparison data if available\n      if (payload[0] && payload[0].payload) {\n        const prevValue = payload[0].payload.previousValue;\n        if (prevValue !== undefined) {\n          const currentValue = payload[0].value;\n          const change = currentValue - prevValue;\n          const changePercentage = prevValue !== 0 ? (change / prevValue) * 100 : 0;\n\n          tooltipData.comparison = {\n            label: 'Previous Period',\n            value: prevValue,\n            change,\n            changePercentage\n          };\n        }\n      }\n    }\n\n    return <EnhancedTooltip tooltipData={tooltipData} formatter={tooltipFormatter} />;\n  };\n\n  // Handle mouse down for zoom\n  const handleMouseDown = useCallback((e: any) => {\n    if (!enableZoom || !e) return;\n\n    setZoomState(prev => ({\n      ...prev,\n      refAreaLeft: e.activeLabel\n    }));\n  }, [enableZoom]);\n\n  // Handle mouse move for zoom\n  const handleMouseMove = useCallback((e: any) => {\n    if (!enableZoom || !zoomState.refAreaLeft || !e) return;\n\n    setZoomState(prev => ({\n      ...prev,\n      refAreaRight: e.activeLabel\n    }));\n  }, [enableZoom, zoomState.refAreaLeft]);\n\n  // Handle mouse up for zoom\n  const handleMouseUp = useCallback(() => {\n    if (!enableZoom || !zoomState.refAreaLeft || !zoomState.refAreaRight) {\n      setZoomState(prev => ({\n        ...prev,\n        refAreaLeft: null,\n        refAreaRight: null\n      }));\n      return;\n    }\n\n    // Get indices of selected area\n    let indexLeft = data.findIndex(d => d[xKey] === zoomState.refAreaLeft);\n    let indexRight = data.findIndex(d => d[xKey] === zoomState.refAreaRight);\n\n    // Ensure left is before right\n    if (indexLeft > indexRight) {\n      [indexLeft, indexRight] = [indexRight, indexLeft];\n    }\n\n    // Set zoom domain\n    setZoomState({\n      refAreaLeft: null,\n      refAreaRight: null,\n      zoomed: true,\n      zoomDomain: {\n        x: [indexLeft, indexRight]\n      }\n    });\n  }, [enableZoom, zoomState.refAreaLeft, zoomState.refAreaRight, data, xKey]);\n\n  // Reset zoom\n  const handleResetZoom = useCallback(() => {\n    setZoomState({\n      refAreaLeft: null,\n      refAreaRight: null,\n      zoomed: false,\n      zoomDomain: null\n    });\n  }, []);\n\n  // Handle zoom in\n  const handleZoomIn = useCallback(() => {\n    if (!zoomState.zoomed) {\n      // If not zoomed, zoom to the middle 50%\n      const middleIndex = Math.floor(data.length / 2);\n      const quarterIndex = Math.floor(data.length / 4);\n\n      setZoomState({\n        refAreaLeft: null,\n        refAreaRight: null,\n        zoomed: true,\n        zoomDomain: {\n          x: [middleIndex - quarterIndex, middleIndex + quarterIndex]\n        }\n      });\n    } else if (zoomState.zoomDomain) {\n      // If already zoomed, zoom in further by 25%\n      const [left, right] = zoomState.zoomDomain.x;\n      const range = right - left;\n      const newLeft = Math.max(0, Math.floor(left + range * 0.25));\n      const newRight = Math.min(data.length - 1, Math.floor(right - range * 0.25));\n\n      setZoomState({\n        ...zoomState,\n        zoomDomain: {\n          x: [newLeft, newRight]\n        }\n      });\n    }\n  }, [zoomState, data]);\n\n  // Handle zoom out\n  const handleZoomOut = useCallback(() => {\n    if (zoomState.zoomed && zoomState.zoomDomain) {\n      // Zoom out by 25%\n      const [left, right] = zoomState.zoomDomain.x;\n      const range = right - left;\n      const newLeft = Math.max(0, Math.floor(left - range * 0.25));\n      const newRight = Math.min(data.length - 1, Math.floor(right + range * 0.25));\n\n      // If zoomed out to almost full view, reset zoom\n      if (newLeft <= 1 && newRight >= data.length - 2) {\n        handleResetZoom();\n      } else {\n        setZoomState({\n          ...zoomState,\n          zoomDomain: {\n            x: [newLeft, newRight]\n          }\n        });\n      }\n    }\n  }, [zoomState, data, handleResetZoom]);\n\n  // Get domain for X axis\n  const getXDomain = useCallback(() => {\n    if (zoomState.zoomed && zoomState.zoomDomain) {\n      const [left, right] = zoomState.zoomDomain.x;\n      return [data[left]?.[xKey], data[right]?.[xKey]];\n    }\n    return undefined;\n  }, [zoomState, data, xKey]);\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  // Render error state\n  if (error) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </div>\n    );\n  }\n\n  // Render empty state\n  if (!data || data.length === 0) {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </div>\n    );\n  }\n\n  // Get chart component based on type\n  const getChartComponent = () => {\n    // Common props for all chart types\n    const commonProps = {\n      data,\n      margin: { top: 10, right: 30, left: 0, bottom: 0 },\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp\n    };\n\n    // Domain for X axis when zoomed\n    const xDomain = getXDomain();\n\n    // Common axis props\n    const xAxisProps = {\n      dataKey: xKey,\n      tick: { fill: theme.palette.text.secondary, fontSize: 12 },\n      tickFormatter: (value: any) => {\n        // Ensure we're passing a valid value to formatDateDisplay\n        if (value === undefined || value === null) {\n          return '';\n        }\n        return formatDateDisplay(String(value));\n      },\n      domain: xDomain as [string | number, string | number] | undefined,\n      allowDataOverflow: true\n    };\n\n    const yAxisProps = {\n      tick: { fill: theme.palette.text.secondary, fontSize: 12 },\n      tickFormatter: (value: number) => {\n        if (value >= 1000) {\n          return `${(value / 1000).toFixed(0)}k`;\n        }\n        return value.toString();\n      }\n    };\n\n    switch (type) {\n      case 'area':\n        return (\n          <AreaChart {...commonProps} ref={chartRef}>\n            {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n            <XAxis {...xAxisProps} />\n            <YAxis {...yAxisProps} />\n            <RechartsTooltip content={<CustomTooltipContent />} />\n            {showLegend && <Legend />}\n            {yKeys.map((key, index) => (\n              <Area\n                key={key}\n                type=\"monotone\"\n                dataKey={key}\n                stroke={colors[index % colors.length]}\n                fill={colors[index % colors.length]}\n                fillOpacity={0.3}\n                name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n                activeDot={{ onClick: (e: any, i: number) => onClick && onClick(e.payload, i) }}\n              />\n            ))}\n            {enableBrush && !zoomState.zoomed && (\n              <Brush\n                dataKey={xKey}\n                height={30}\n                stroke={theme.palette.primary.main}\n                tickFormatter={(value: any) => {\n                  if (value === undefined || value === null) {\n                    return '';\n                  }\n                  return formatDateDisplay(String(value));\n                }}\n              />\n            )}\n            {zoomState.refAreaLeft && zoomState.refAreaRight && (\n              <ReferenceArea\n                x1={zoomState.refAreaLeft}\n                x2={zoomState.refAreaRight}\n                strokeOpacity={0.3}\n                fill={theme.palette.primary.main}\n                fillOpacity={0.3}\n              />\n            )}\n          </AreaChart>\n        );\n\n      case 'line':\n        return (\n          <LineChart {...commonProps} ref={chartRef}>\n            {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n            <XAxis {...xAxisProps} />\n            <YAxis {...yAxisProps} />\n            <RechartsTooltip content={<CustomTooltipContent />} />\n            {showLegend && <Legend />}\n            {yKeys.map((key, index) => (\n              <Line\n                key={key}\n                type=\"monotone\"\n                dataKey={key}\n                stroke={colors[index % colors.length]}\n                name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n                activeDot={{ onClick: (e: any, i: number) => onClick && onClick(e.payload, i) }}\n              />\n            ))}\n            {enableBrush && !zoomState.zoomed && (\n              <Brush\n                dataKey={xKey}\n                height={30}\n                stroke={theme.palette.primary.main}\n                tickFormatter={(value: any) => {\n                  if (value === undefined || value === null) {\n                    return '';\n                  }\n                  return formatDateDisplay(String(value));\n                }}\n              />\n            )}\n            {zoomState.refAreaLeft && zoomState.refAreaRight && (\n              <ReferenceArea\n                x1={zoomState.refAreaLeft}\n                x2={zoomState.refAreaRight}\n                strokeOpacity={0.3}\n                fill={theme.palette.primary.main}\n                fillOpacity={0.3}\n              />\n            )}\n          </LineChart>\n        );\n\n      case 'bar':\n        return (\n          <BarChart {...commonProps} ref={chartRef}>\n            {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n            <XAxis {...xAxisProps} />\n            <YAxis {...yAxisProps} />\n            <RechartsTooltip content={<CustomTooltipContent />} />\n            {showLegend && <Legend />}\n            {yKeys.map((key, index) => (\n              <Bar\n                key={key}\n                dataKey={key}\n                fill={colors[index % colors.length]}\n                name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n                onClick={(data: any, index: number) => onClick && onClick(data, index)}\n              />\n            ))}\n            {enableBrush && !zoomState.zoomed && (\n              <Brush\n                dataKey={xKey}\n                height={30}\n                stroke={theme.palette.primary.main}\n                tickFormatter={(value: any) => {\n                  if (value === undefined || value === null) {\n                    return '';\n                  }\n                  return formatDateDisplay(String(value));\n                }}\n              />\n            )}\n            {zoomState.refAreaLeft && zoomState.refAreaRight && (\n              <ReferenceArea\n                x1={zoomState.refAreaLeft}\n                x2={zoomState.refAreaRight}\n                strokeOpacity={0.3}\n                fill={theme.palette.primary.main}\n                fillOpacity={0.3}\n              />\n            )}\n          </BarChart>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div style={{ height, position: 'relative' }}>\n      {/* Zoom controls */}\n      {enableZoom && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 4,\n            backgroundColor: 'rgba(255, 255, 255, 0.7)',\n            borderRadius: 4,\n            padding: 4\n          }}\n        >\n          <Tooltip title=\"Zoom In\">\n            <IconButton size=\"small\" onClick={handleZoomIn}>\n              <ZoomInIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Zoom Out\">\n            <IconButton\n              size=\"small\"\n              onClick={handleZoomOut}\n              disabled={!zoomState.zoomed}\n            >\n              <ZoomOutIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Reset Zoom\">\n            <IconButton\n              size=\"small\"\n              onClick={handleResetZoom}\n              disabled={!zoomState.zoomed}\n            >\n              <RestartAltIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n      )}\n\n      {/* Chart */}\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {getChartComponent()}\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default ZoomableTimeSeriesChart;\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Divider,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingFlatIcon from '@mui/icons-material/TrendingFlat';\nimport { format as formatDate } from 'date-fns';\nimport { BarChart, Bar, Cell, ResponsiveContainer } from 'recharts';\n\n// Tooltip data type\nexport interface TooltipData {\n  label: string;\n  payload: {\n    name: string;\n    value: number;\n    color: string;\n    [key: string]: any;\n  }[];\n  comparison?: {\n    label: string;\n    value: number;\n    change: number;\n    changePercentage: number;\n  };\n  trend?: {\n    data: { value: number }[];\n    color: string;\n  };\n  additionalInfo?: {\n    label: string;\n    value: string | number;\n  }[];\n}\n\n// Enhanced tooltip props\ninterface EnhancedTooltipProps {\n  active?: boolean;\n  payload?: any[];\n  label?: string;\n  tooltipData?: TooltipData;\n  showComparison?: boolean;\n  showTrend?: boolean;\n  showAdditionalInfo?: boolean;\n  formatter?: (value: any, name: string, props: any) => string;\n}\n\n/**\n * EnhancedTooltip component\n * Displays detailed information in chart tooltips\n */\nconst EnhancedTooltip: React.FC<EnhancedTooltipProps> = ({\n  active,\n  payload,\n  label,\n  tooltipData,\n  showComparison = true,\n  showTrend = true,\n  showAdditionalInfo = true,\n  formatter\n}) => {\n  const theme = useTheme();\n\n  // If not active or no payload, return null\n  if (!active || !payload || payload.length === 0) {\n    return null;\n  }\n\n  // Format currency\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Format number\n  const formatNumber = (value: number): string => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n\n  // Format percentage\n  const formatPercentage = (value: number): string => {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`;\n  };\n\n  // Format value based on type\n  const formatValue = (value: any, name: string): string => {\n    if (formatter) {\n      return formatter(value, name, {});\n    }\n\n    if (typeof value !== 'number') {\n      return value?.toString() || '';\n    }\n\n    // Format based on name\n    if (\n      name.toLowerCase().includes('amount') ||\n      name.toLowerCase().includes('revenue') ||\n      name.toLowerCase().includes('deposit') ||\n      name.toLowerCase().includes('withdrawal') ||\n      name.toLowerCase().includes('bet') ||\n      name.toLowerCase().includes('win') ||\n      name.toLowerCase().includes('ggr') ||\n      value >= 1000\n    ) {\n      return formatCurrency(value);\n    } else if (\n      name.toLowerCase().includes('percentage') ||\n      name.toLowerCase().includes('rate') ||\n      name.toLowerCase().includes('ratio')\n    ) {\n      return `${value.toFixed(2)}%`;\n    } else {\n      return formatNumber(value);\n    }\n  };\n\n  // Get trend icon based on change percentage\n  const getTrendIcon = (changePercentage: number) => {\n    if (changePercentage > 0) {\n      return <TrendingUpIcon fontSize=\"small\" sx={{ color: theme.palette.success.main }} />;\n    } else if (changePercentage < 0) {\n      return <TrendingDownIcon fontSize=\"small\" sx={{ color: theme.palette.error.main }} />;\n    } else {\n      return <TrendingFlatIcon fontSize=\"small\" sx={{ color: theme.palette.text.secondary }} />;\n    }\n  };\n\n  // Get trend color based on change percentage\n  const getTrendColor = (changePercentage: number) => {\n    if (changePercentage > 0) {\n      return theme.palette.success.main;\n    } else if (changePercentage < 0) {\n      return theme.palette.error.main;\n    } else {\n      return theme.palette.text.secondary;\n    }\n  };\n\n  // Use tooltipData if provided, otherwise use payload\n  const data: TooltipData = tooltipData || {\n    label: label || '',\n    payload: payload.map(item => ({\n      name: item.name,\n      value: item.value,\n      color: item.color || item.fill || theme.palette.primary.main\n    }))\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        p: 1.5,\n        maxWidth: 300,\n        border: `1px solid ${theme.palette.divider}`,\n        backgroundColor: alpha(theme.palette.background.paper, 0.95)\n      }}\n    >\n      {/* Label */}\n      <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n        {typeof data.label === 'string' && data.label.includes('T')\n          ? formatDate(new Date(data.label), 'MMM dd, yyyy')\n          : data.label}\n      </Typography>\n\n      {/* Main data */}\n      {data.payload.map((entry, index) => (\n        <div key={`item-${index}`} style={{ display: 'flex', alignItems: 'center', marginBottom: '4px' }}>\n          <div\n            style={{\n              width: 12,\n              height: 12,\n              backgroundColor: entry.color,\n              marginRight: 8,\n              borderRadius: '50%'\n            }}\n          />\n          <Typography variant=\"body2\" sx={{ flex: 1 }}>\n            {entry.name}\n          </Typography>\n          <Typography variant=\"body2\" fontWeight=\"medium\">\n            {formatValue(entry.value, entry.name)}\n          </Typography>\n        </div>\n      ))}\n\n      {/* Comparison data */}\n      {showComparison && data.comparison && (\n        <>\n          <Divider sx={{ my: 1 }} />\n          <div style={{ marginBottom: '8px' }}>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {data.comparison.label}\n            </Typography>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n              <Typography variant=\"body2\">\n                {formatValue(data.comparison.value, 'comparison')}\n              </Typography>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                {getTrendIcon(data.comparison.changePercentage)}\n                <Typography\n                  variant=\"body2\"\n                  sx={{ ml: 0.5, color: getTrendColor(data.comparison.changePercentage) }}\n                >\n                  {formatPercentage(data.comparison.changePercentage)}\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Trend mini chart */}\n      {showTrend && data.trend && data.trend.data && (\n        <div style={{ height: 40, marginTop: 8 }}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={data.trend.data}>\n              <Bar dataKey=\"value\" fill={data.trend?.color || '#1976d2'}>\n                {data.trend.data.map((entry: any, index: number) => {\n                  const trendData = data.trend;\n                  if (!trendData) return null;\n                  return (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={trendData.color || '#1976d2'}\n                      fillOpacity={0.6 + (index / trendData.data.length) * 0.4}\n                    />\n                  );\n                })}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n\n      {/* Additional information */}\n      {showAdditionalInfo && data.additionalInfo && data.additionalInfo.length > 0 && (\n        <>\n          <Divider sx={{ my: 1 }} />\n          {data.additionalInfo.map((info: { label: string, value: string | number }, index: number) => (\n            <div key={`info-${index}`} style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 4 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {info.label}\n              </Typography>\n              <Typography variant=\"caption\" fontWeight=\"medium\">\n                {typeof info.value === 'number' ? formatValue(info.value, info.label) : info.value}\n              </Typography>\n            </div>\n          ))}\n        </>\n      )}\n    </Paper>\n  );\n};\n\nexport default EnhancedTooltip;\n","import React from 'react';\nimport { CircularProgress, Typography, useTheme } from '@mui/material';\nimport { ResponsiveContainer, AreaChart, Area, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\nimport { format as formatDate } from 'date-fns';\nimport './ReportCharts.css';\n\n// Chart colors\nconst CHART_COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A569BD', '#5DADE2', '#48C9B0', '#F4D03F'];\n\n// Format currency\nconst formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n};\n\n// Format number\nconst formatNumber = (value: number): string => {\n  return new Intl.NumberFormat('en-US').format(value);\n};\n\n// Format percentage (used in tooltips - keeping for future use)\n// const formatPercentage = (value: number): string => {\n//   return `${value.toFixed(2)}%`;\n// };\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\" style={{\n        backgroundColor: '#fff',\n        padding: '12px',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n      }}>\n        <Typography variant=\"subtitle2\" style={{ marginBottom: '8px' }}>\n          {label}\n        </Typography>\n        {payload.map((entry: any, index: number) => (\n          <div key={`item-${index}`} style={{ display: 'flex', alignItems: 'center', marginBottom: '4px' }}>\n            <span style={{\n              width: '12px',\n              height: '12px',\n              backgroundColor: entry.color,\n              marginRight: '8px',\n              borderRadius: '50%',\n              display: 'inline-block'\n            }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {entry.name}: {entry.value >= 1000 ? formatCurrency(entry.value) : formatNumber(entry.value)}\n            </Typography>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Area Chart Component\ninterface AreaChartProps {\n  data: any[];\n  xKey: string;\n  yKeys: string[];\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  showLegend?: boolean;\n  showGrid?: boolean;\n}\n\nexport const ReportAreaChart: React.FC<AreaChartProps> = ({\n  data,\n  xKey,\n  yKeys,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  showLegend = true,\n  showGrid = true\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <div className=\"chart-loading-container\" style={{ height }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"chart-error-container\" style={{ height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-empty-container\" style={{ height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chart-container\" style={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <AreaChart\n          data={data}\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n        >\n          {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n          <XAxis\n            dataKey={xKey}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            tickFormatter={(value) => {\n              try {\n                if (!value) return '';\n\n                if (typeof value === 'string' && value.includes('T')) {\n                  const date = new Date(value);\n                  // Check if date is valid\n                  if (isNaN(date.getTime())) {\n                    return String(value);\n                  }\n                  return formatDate(date, 'MMM dd');\n                }\n                return String(value);\n              } catch (error) {\n                console.warn('Error formatting date:', error);\n                return String(value || '');\n              }\n            }}\n          />\n          <YAxis\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            tickFormatter={(value) => {\n              if (value >= 1000) {\n                return `${(value / 1000).toFixed(0)}k`;\n              }\n              return value;\n            }}\n          />\n          <RechartsTooltip content={<CustomTooltip />} />\n          {showLegend && <Legend />}\n          {yKeys.map((key, index) => (\n            <Area\n              key={key}\n              type=\"monotone\"\n              dataKey={key}\n              stroke={CHART_COLORS[index % CHART_COLORS.length]}\n              fill={CHART_COLORS[index % CHART_COLORS.length]}\n              fillOpacity={0.3}\n              name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n            />\n          ))}\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Bar Chart Component\ninterface BarChartProps {\n  data: any[];\n  xKey: string;\n  yKeys: string[];\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  showLegend?: boolean;\n  showGrid?: boolean;\n  stacked?: boolean;\n}\n\nexport const ReportBarChart: React.FC<BarChartProps> = ({\n  data,\n  xKey,\n  yKeys,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  showLegend = true,\n  showGrid = true,\n  stacked = false\n}) => {\n  const theme = useTheme();\n\n  if (loading) {\n    return (\n      <div className=\"chart-loading-container\" style={{ height }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"chart-error-container\" style={{ height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-empty-container\" style={{ height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chart-container\" style={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n        >\n          {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n          <XAxis\n            dataKey={xKey}\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            tickFormatter={(value) => {\n              try {\n                if (!value) return '';\n\n                if (typeof value === 'string' && value.includes('T')) {\n                  const date = new Date(value);\n                  // Check if date is valid\n                  if (isNaN(date.getTime())) {\n                    return String(value);\n                  }\n                  return formatDate(date, 'MMM dd');\n                }\n                return String(value);\n              } catch (error) {\n                console.warn('Error formatting date:', error);\n                return String(value || '');\n              }\n            }}\n          />\n          <YAxis\n            tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            tickFormatter={(value) => {\n              if (value >= 1000) {\n                return `${(value / 1000).toFixed(0)}k`;\n              }\n              return value;\n            }}\n          />\n          <RechartsTooltip content={<CustomTooltip />} />\n          {showLegend && <Legend />}\n          {yKeys.map((key, index) => (\n            <Bar\n              key={key}\n              dataKey={key}\n              fill={CHART_COLORS[index % CHART_COLORS.length]}\n              stackId={stacked ? \"stack\" : undefined}\n              name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n            />\n          ))}\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Pie Chart Component\ninterface PieChartProps {\n  data: any[];\n  nameKey: string;\n  valueKey: string;\n  height?: number;\n  loading?: boolean;\n  error?: string | null;\n  title?: string;\n  showLegend?: boolean;\n}\n\nexport const ReportPieChart: React.FC<PieChartProps> = ({\n  data,\n  nameKey,\n  valueKey,\n  height = 300,\n  loading = false,\n  error = null,\n  title,\n  showLegend = true\n}) => {\n  // Theme is not currently used in this component but might be needed for future styling\n  // const theme = useTheme();\n\n  if (loading) {\n    return (\n      <div className=\"chart-loading-container\" style={{ height }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"chart-error-container\" style={{ height }}>\n        <Typography color=\"error\">{error}</Typography>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-empty-container\" style={{ height }}>\n        <Typography color=\"text.secondary\">No data available</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chart-container\" style={{ width: '100%', height }}>\n      {title && (\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {title}\n        </Typography>\n      )}\n      <ResponsiveContainer>\n        <PieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey={valueKey}\n            nameKey={nameKey}\n            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n          >\n            {data.map((_entry, index) => (\n              <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />\n            ))}\n          </Pie>\n          {showLegend && <Legend />}\n          <RechartsTooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  Box,\n  IconButton,\n  Tabs,\n  Tab,\n  Paper,\n  Grid,\n  Divider,\n  useTheme,\n  Tooltip\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport TableChartIcon from '@mui/icons-material/TableChart';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport PieChartIcon from '@mui/icons-material/PieChart';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport { format as formatDate } from 'date-fns';\n\nimport { EnhancedTable } from '../../tables/enhanced';\nimport { ColumnDef } from '../../tables/enhanced/types';\nimport { ReportAreaChart, ReportBarChart, ReportPieChart } from '../charts/ReportCharts';\n\n// Drilldown data type\nexport interface DrilldownData {\n  title: string;\n  description?: string;\n  category: string;\n  value: number;\n  data: any[];\n  metadata?: {\n    [key: string]: any;\n  };\n}\n\n// Drilldown modal props\ninterface DrilldownModalProps {\n  open: boolean;\n  onClose: () => void;\n  drilldownData: DrilldownData | null;\n}\n\n/**\n * DrilldownModal component\n * Displays detailed information about a selected data point\n */\nconst DrilldownModal: React.FC<DrilldownModalProps> = ({\n  open,\n  onClose,\n  drilldownData\n}) => {\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = useState<number>(0);\n\n  // Handle tab change\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  // Format currency\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Format number\n  const formatNumber = (value: number): string => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n\n  // Format percentage\n  const formatPercentage = (value: number): string => {\n    return `${value.toFixed(2)}%`;\n  };\n\n  // Generate columns based on data\n  const generateColumns = (): ColumnDef[] => {\n    if (!drilldownData || !drilldownData.data || drilldownData.data.length === 0) {\n      return [];\n    }\n\n    const firstItem = drilldownData.data[0];\n    return Object.keys(firstItem).map(key => {\n      // Skip id field\n      if (key === 'id') {\n        return {\n          id: key,\n          label: 'ID',\n          sortable: true,\n          hidden: true\n        };\n      }\n\n      // Format date fields\n      if (key.toLowerCase().includes('date') && typeof firstItem[key] === 'string' && firstItem[key].includes('T')) {\n        return {\n          id: key,\n          label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n          sortable: true,\n          format: (value) => formatDate(new Date(value), 'MMM dd, yyyy')\n        };\n      }\n\n      // Format currency fields\n      if (\n        key.toLowerCase().includes('amount') ||\n        key.toLowerCase().includes('revenue') ||\n        key.toLowerCase().includes('deposit') ||\n        key.toLowerCase().includes('withdrawal') ||\n        key.toLowerCase().includes('bet') ||\n        key.toLowerCase().includes('win') ||\n        key.toLowerCase().includes('ggr')\n      ) {\n        return {\n          id: key,\n          label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n          sortable: true,\n          type: 'currency',\n          format: (value) => formatCurrency(value)\n        };\n      }\n\n      // Format percentage fields\n      if (\n        key.toLowerCase().includes('percentage') ||\n        key.toLowerCase().includes('rate') ||\n        key.toLowerCase().includes('ratio')\n      ) {\n        return {\n          id: key,\n          label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n          sortable: true,\n          format: (value) => formatPercentage(value)\n        };\n      }\n\n      // Default format\n      return {\n        id: key,\n        label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n        sortable: true\n      };\n    });\n  };\n\n  // Get summary metrics\n  const getSummaryMetrics = () => {\n    if (!drilldownData || !drilldownData.data || drilldownData.data.length === 0) {\n      return [];\n    }\n\n    const metrics = [];\n    const data = drilldownData.data;\n\n    // Add count metric\n    metrics.push({\n      label: 'Count',\n      value: formatNumber(data.length)\n    });\n\n    // Add sum metrics for numeric fields\n    const firstItem = data[0];\n    Object.keys(firstItem).forEach(key => {\n      if (typeof firstItem[key] === 'number') {\n        // Skip id field\n        if (key === 'id') return;\n\n        const sum = data.reduce((acc, item) => acc + (item[key] || 0), 0);\n        \n        // Format based on field type\n        let formattedValue;\n        if (\n          key.toLowerCase().includes('amount') ||\n          key.toLowerCase().includes('revenue') ||\n          key.toLowerCase().includes('deposit') ||\n          key.toLowerCase().includes('withdrawal') ||\n          key.toLowerCase().includes('bet') ||\n          key.toLowerCase().includes('win') ||\n          key.toLowerCase().includes('ggr')\n        ) {\n          formattedValue = formatCurrency(sum);\n        } else if (\n          key.toLowerCase().includes('percentage') ||\n          key.toLowerCase().includes('rate') ||\n          key.toLowerCase().includes('ratio')\n        ) {\n          // For percentages, calculate average instead of sum\n          const avg = sum / data.length;\n          formattedValue = formatPercentage(avg);\n        } else {\n          formattedValue = formatNumber(sum);\n        }\n\n        metrics.push({\n          label: `Total ${key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}`,\n          value: formattedValue\n        });\n      }\n    });\n\n    return metrics;\n  };\n\n  // Render chart based on data\n  const renderChart = () => {\n    if (!drilldownData || !drilldownData.data || drilldownData.data.length === 0) {\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 300 }}>\n          <Typography color=\"text.secondary\">No data available</Typography>\n        </Box>\n      );\n    }\n\n    const data = drilldownData.data;\n\n    // Determine chart type based on data structure\n    if (activeTab === 1) { // Bar Chart\n      // Find numeric fields for y-axis\n      const firstItem = data[0];\n      const numericFields = Object.keys(firstItem).filter(key => \n        typeof firstItem[key] === 'number' && key !== 'id'\n      );\n\n      // Use date field for x-axis if available, otherwise use first string field\n      let xField = Object.keys(firstItem).find(key => \n        key.toLowerCase().includes('date') && typeof firstItem[key] === 'string'\n      );\n\n      if (!xField) {\n        xField = Object.keys(firstItem).find(key => \n          typeof firstItem[key] === 'string' && key !== 'id'\n        );\n      }\n\n      if (!xField || numericFields.length === 0) {\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 300 }}>\n            <Typography color=\"text.secondary\">Cannot generate chart from this data</Typography>\n          </Box>\n        );\n      }\n\n      return (\n        <ReportBarChart\n          data={data}\n          xKey={xField}\n          yKeys={numericFields.slice(0, 3)} // Limit to 3 metrics for readability\n          height={400}\n        />\n      );\n    } else if (activeTab === 2) { // Pie Chart\n      // Find a categorical field and a numeric field\n      const firstItem = data[0];\n      const categoricalField = Object.keys(firstItem).find(key => \n        typeof firstItem[key] === 'string' && key !== 'id' && !key.toLowerCase().includes('date')\n      );\n\n      const numericField = Object.keys(firstItem).find(key => \n        typeof firstItem[key] === 'number' && key !== 'id'\n      );\n\n      if (!categoricalField || !numericField) {\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 300 }}>\n            <Typography color=\"text.secondary\">Cannot generate pie chart from this data</Typography>\n          </Box>\n        );\n      }\n\n      // Aggregate data by category\n      const aggregatedData = data.reduce((acc, item) => {\n        const category = item[categoricalField] || 'Unknown';\n        if (!acc[category]) {\n          acc[category] = 0;\n        }\n        acc[category] += item[numericField] || 0;\n        return acc;\n      }, {});\n\n      // Convert to array format for pie chart\n      const pieData = Object.entries(aggregatedData).map(([name, value]) => ({\n        name,\n        value\n      }));\n\n      return (\n        <ReportPieChart\n          data={pieData}\n          nameKey=\"name\"\n          valueKey=\"value\"\n          height={400}\n        />\n      );\n    } else if (activeTab === 3) { // Area Chart\n      // Find date field for x-axis\n      const firstItem = data[0];\n      const dateField = Object.keys(firstItem).find(key => \n        key.toLowerCase().includes('date') && typeof firstItem[key] === 'string'\n      );\n\n      // Find numeric fields for y-axis\n      const numericFields = Object.keys(firstItem).filter(key => \n        typeof firstItem[key] === 'number' && key !== 'id'\n      );\n\n      if (!dateField || numericFields.length === 0) {\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 300 }}>\n            <Typography color=\"text.secondary\">Cannot generate area chart from this data</Typography>\n          </Box>\n        );\n      }\n\n      // Sort data by date\n      const sortedData = [...data].sort((a, b) => \n        new Date(a[dateField]).getTime() - new Date(b[dateField]).getTime()\n      );\n\n      return (\n        <ReportAreaChart\n          data={sortedData}\n          xKey={dateField}\n          yKeys={numericFields.slice(0, 3)} // Limit to 3 metrics for readability\n          height={400}\n        />\n      );\n    } else { // Table (default)\n      return (\n        <EnhancedTable\n          columns={generateColumns()}\n          data={data}\n          idField=\"id\"\n          features={{\n            sorting: true,\n            filtering: {\n              enabled: true,\n              quickFilter: true\n            },\n            pagination: {\n              enabled: true,\n              defaultPageSize: 10,\n              pageSizeOptions: [10, 25, 50]\n            },\n            columnManagement: {\n              enabled: true,\n              allowReordering: true,\n              allowHiding: true\n            }\n          }}\n        />\n      );\n    }\n  };\n\n  if (!drilldownData) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"lg\"\n      fullWidth\n      PaperProps={{\n        sx: {\n          minHeight: '80vh',\n          maxHeight: '90vh'\n        }\n      }}\n    >\n      <DialogTitle>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\">\n            {drilldownData.title}\n            {drilldownData.description && (\n              <Tooltip title={drilldownData.description}>\n                <IconButton size=\"small\">\n                  <InfoOutlinedIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Typography>\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{ color: theme.palette.grey[500] }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent dividers>\n        {/* Summary Cards */}\n        <Grid container spacing={2} sx={{ mb: 3 }}>\n          <Grid item xs={12} md={4}>\n            <Paper sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Category\n              </Typography>\n              <Typography variant=\"h5\">\n                {drilldownData.category}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Paper sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Value\n              </Typography>\n              <Typography variant=\"h5\">\n                {typeof drilldownData.value === 'number' && drilldownData.value >= 1000\n                  ? formatCurrency(drilldownData.value)\n                  : formatNumber(drilldownData.value)}\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Paper sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Records\n              </Typography>\n              <Typography variant=\"h5\">\n                {drilldownData.data.length}\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        {/* Additional Metrics */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Summary Metrics\n          </Typography>\n          <Grid container spacing={2}>\n            {getSummaryMetrics().map((metric, index) => (\n              <Grid item xs={6} sm={4} md={3} key={index}>\n                <Box sx={{ p: 1 }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {metric.label}\n                  </Typography>\n                  <Typography variant=\"body1\" fontWeight=\"medium\">\n                    {metric.value}\n                  </Typography>\n                </Box>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        <Divider sx={{ my: 2 }} />\n\n        {/* Tabs for different views */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n          <Tabs value={activeTab} onChange={handleTabChange} aria-label=\"drilldown tabs\">\n            <Tab icon={<TableChartIcon />} label=\"Table\" />\n            <Tab icon={<BarChartIcon />} label=\"Bar Chart\" />\n            <Tab icon={<PieChartIcon />} label=\"Pie Chart\" />\n            <Tab icon={<TimelineIcon />} label=\"Trend\" />\n          </Tabs>\n        </Box>\n\n        {/* Content based on active tab */}\n        <Box sx={{ mt: 2 }}>\n          {renderChart()}\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          startIcon={<DownloadIcon />}\n          onClick={() => {\n            // Export functionality would go here\n            console.log('Export data', drilldownData);\n          }}\n        >\n          Export\n        </Button>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DrilldownModal;\n"],"names":["CHART_COLORS","CustomTooltip","_ref","active","payload","label","length","_jsxs","Box","sx","backgroundColor","p","border","borderColor","borderRadius","boxShadow","children","_jsx","Typography","variant","mb","map","entry","index","display","alignItems","width","height","color","mr","name","value","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","ReportScatterChart","_ref2","data","xKey","yKey","zKey","nameKey","loading","error","title","showLegend","showGrid","theme","useTheme","justifyContent","CircularProgress","gutterBottom","ResponsiveContainer","ScatterChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","charAt","toUpperCase","slice","replace","tick","fill","palette","text","secondary","fontSize","type","YAxis","ZAxis","range","RechartsTooltip","cursor","content","Legend","Scatter","Cell","ReportRadarChart","_ref3","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","ReportTreemapChart","_ref4","Treemap","aspectRatio","ReportGaugeChart","_ref5","startAngle","endAngle","PieChart","Pie","innerRadius","iconSize","layout","verticalAlign","align","ReportHeatmap","_ref6","valueKey","uniqueXValues","Array","from","Set","item","sort","uniqueYValues","cellSize","Math","min","values","minValue","maxValue","max","getColor","overflowX","overflowY","flexDirection","minWidth","ml","x","transform","transformOrigin","whiteSpace","overflow","textOverflow","y","pr","cell","find","background","paper","opacity","fontWeight","id","description","yKeys","colors","enableDrilldown","enableTooltip","enableCrossFiltering","tooltipFormatter","onClick","getTooltipData","getDrilldownData","filters","addFilter","removeFilter","getFiltersForSource","applyFilters","useFilterContext","activeIndex","setActiveIndex","useState","drilldownOpen","setDrilldownOpen","drilldownData","setDrilldownData","activeFilters","useMemo","filteredData","formatCurrency","formatter","formatNumber","handleClick","useCallback","undefined","strValue","String","includes","date","Date","isNaN","getTime","formatDate","console","warn","drillData","drilldownTitle","category","detailData","filter","toLowerCase","filterId","filterValue","filterField","f","field","operator","source","handlePieEnter","_","handlePieLeave","renderActiveShape","props","percent","dy","textAnchor","primary","toFixed","Sector","CustomTooltipContent","tooltipData","prevValue","previousValue","change","changePercentage","comparison","EnhancedTooltip","formatKeyToLabel","key","formatXAxisTick","formatYAxisTick","renderChart","commonChartProps","xAxisProps","tickFormatter","yAxisProps","AreaChart","Area","activeDot","e","i","BarChart","Bar","LineChart","Line","activeShape","onMouseEnter","onMouseLeave","Paper","padding","MuiTooltip","IconButton","size","InfoOutlinedIcon","gap","ZoomInIcon","FilterListIcon","paddingLeft","paddingRight","paddingBottom","flexWrap","Chip","onDelete","handleRemoveFilter","deleteIcon","HighlightOffIcon","flex","DrilldownModal","open","onClose","HeaderContainer","styled","spacing","borderBottom","divider","TitleContainer","ActionsContainer","FiltersContainer","ChartContainer","position","enableZoom","enableLassoSelection","enableAnnotations","enableExport","enableFullscreen","onExport","onShare","getAnnotationsForChart","useAnnotationContext","isFullscreen","setIsFullscreen","menuAnchorEl","setMenuAnchorEl","annotations","handleDrillDown","_data$metadata","metadata","_data$metadata2","handleMenuClose","handleExport","log","commonProps","ZoomableTimeSeriesChart","enableBrush","LassoSelectionScatterChart","InteractiveChart","zIndex","elevation","handleToggleFullscreen","FullscreenIcon","event","currentTarget","MoreVertIcon","Menu","anchorEl","Boolean","_Fragment","MenuItem","ListItemIcon","DownloadIcon","ListItemText","Divider","CommentIcon","handleShare","ShareIcon","isArray","annotation","_annotation$metadata","AnnotationMarker","chartId","dataPointId","dataPointLabel","clearFilters","lassoPoints","setLassoPoints","isSelecting","setIsSelecting","selectedPoints","setSelectedPoints","hoveredPoint","setHoveredPoint","svgRef","useRef","scatterRef","push","additionalInfo","svgToChartCoords","svgX","svgY","current","rect","getBoundingClientRect","chartX","chartY","handleMouseDown","clientX","clientY","chartCoords","handleMouseMove","prev","handleMouseUp","closedLasso","selected","xValue","yValue","xMin","d","xMax","yMin","yMax","isPointInPolygon","newFilter","polygon","inside","j","xi","yi","xj","yj","handleClearSelection","handleSelectAll","handlePointHover","handlePointClick","Tooltip","SelectAllIcon","disabled","ClearAllIcon","Badge","badgeContent","ref","isSelected","some","isHovered","fillColor","main","strokeWidth","pointerEvents","onMouseDown","onMouseMove","onMouseUp","renderLassoPath","svgPoints","point","svg","chartAreaWidth","chartAreaHeight","points","join","strokeLinecap","strokeLinejoin","FilterContext","createContext","FilterContextProvider","setFilters","prevFilters","existingFilterIndex","findIndex","newFilters","updateFilter","filterIndex","getFiltersExceptSource","excludeSource","filtersToApply","every","fieldValue","stringValue","val","itemDate","startDate","endDate","toDateString","Provider","context","useContext","Error","AnnotationContext","AnnotationContextProvider","setAnnotations","addAnnotation","now","toISOString","newAnnotation","random","toString","substring","createdAt","updatedAt","updateAnnotation","deleteAnnotation","getAnnotationsForDataPoint","AnnotationDialog","existingAnnotations","newAnnotationText","setNewAnnotationText","newAnnotationType","setNewAnnotationType","editingAnnotation","setEditingAnnotation","handleCancelEdit","getAnnotationTypeIcon","FlagIcon","AddCommentIcon","Dialog","maxWidth","fullWidth","DialogTitle","grey","CloseIcon","DialogContent","dividers","List","React","ListItem","mt","author","ListItemSecondaryAction","edge","handleEditAnnotation","EditIcon","handleDeleteAnnotation","DeleteIcon","component","py","textAlign","TextField","multiline","rows","placeholder","onChange","target","icon","DialogActions","Button","handleSaveEdit","trim","handleAddAnnotation","setAnchorEl","dialogOpen","setDialogOpen","handlePopoverClose","overlap","Avatar","bgcolor","Popover","anchorOrigin","vertical","horizontal","dense","handleDialogOpen","handleDialogClose","zoomState","setZoomState","refAreaLeft","refAreaRight","zoomed","zoomDomain","chartRef","formatDateDisplay","dateStr","parseISO","activeLabel","indexLeft","indexRight","handleResetZoom","handleZoomIn","newLeft","floor","newRight","middleIndex","quarterIndex","handleZoomOut","getXDomain","_data$left","_data$right","ZoomOutIcon","RestartAltIcon","getChartComponent","xDomain","domain","allowDataOverflow","Brush","ReferenceArea","x1","x2","strokeOpacity","_data$trend","showComparison","showTrend","showAdditionalInfo","formatValue","alpha","marginBottom","marginRight","my","TrendingUpIcon","success","TrendingDownIcon","TrendingFlatIcon","getTrendColor","trend","marginTop","trendData","info","className","ReportAreaChart","ReportBarChart","stacked","stackId","ReportPieChart","labelLine","_entry","activeTab","setActiveTab","formatPercentage","generateColumns","firstItem","Object","keys","sortable","hidden","PaperProps","minHeight","maxHeight","Grid","container","xs","md","getSummaryMetrics","metrics","forEach","sum","reduce","acc","formattedValue","avg","metric","sm","Tabs","handleTabChange","newValue","Tab","TableChartIcon","BarChartIcon","PieChartIcon","TimelineIcon","numericFields","xField","categoricalField","numericField","aggregatedData","pieData","entries","dateField","sortedData","a","b","EnhancedTable","columns","idField","features","sorting","filtering","enabled","quickFilter","pagination","defaultPageSize","pageSizeOptions","columnManagement","allowReordering","allowHiding","startIcon"],"sourceRoot":""}