{"version":3,"file":"static/js/5344.92ee59dd.chunk.js","mappings":"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","sources":["pages/analytics/styles.ts","pages/analytics/AnalyticsPageComponents.tsx","pages/analytics/TabPanel.tsx","store/selectors.ts","pages/analytics/constants.ts","pages/analytics/AnalyticsPage.tsx","pages/analytics/hooks/useDashboardData.ts","pages/analytics/hooks/useTabs.ts","components/common/LoadingOverlay.tsx","components/common/ErrorDisplay.tsx","pages/analytics/components/ErrorBoundary.tsx"],"sourcesContent":["/**\n * Common styles for Analytics components\n */\n\nexport const SPACING = {\n  xs: '4px',\n  sm: '8px',\n  md: '16px',\n  lg: '24px',\n  xl: '32px',\n};\n\nexport const BORDER_RADIUS = {\n  sm: '4px',\n  md: '8px',\n  lg: '12px',\n};\n\nexport const COLORS = {\n  divider: 'rgba(0, 0, 0, 0.12)',\n  placeholder: 'rgba(0, 0, 0, 0.08)',\n};\n\nexport const CARD_STYLE = {\n  padding: SPACING.lg,\n  borderRadius: BORDER_RADIUS.md,\n  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n};\n\nexport const HEADING_STYLE = {\n  marginBottom: SPACING.xs,\n};\n\nexport const SECTION_STYLE = {\n  marginBottom: SPACING.lg,\n};\n\nexport const CHART_CONTAINER_STYLE = {\n  height: 300,\n  border: `1px dashed ${COLORS.divider}`,\n  borderRadius: BORDER_RADIUS.md,\n  padding: SPACING.lg,\n};\n\nexport const TAB_CONTAINER_STYLE = {\n  borderBottom: `1px solid ${COLORS.divider}`,\n  marginBottom: SPACING.lg,\n};\n\nexport const ERROR_CONTAINER_STYLE = {\n  marginBottom: SPACING.lg,\n};\n\nexport const PLACEHOLDER_STYLE = {\n  backgroundColor: COLORS.placeholder,\n  borderRadius: BORDER_RADIUS.md,\n  padding: SPACING.lg,\n  minHeight: 100,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n","import { Box, styled, Theme } from '@mui/material';\nimport { CHART_CONTAINER_STYLE } from './styles';\n\n/**\n * Header flex container component using MUI Box\n * Displays content in a flex layout with space between items\n */\nexport const HeaderFlexContainer = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\n\n/**\n * Chart placeholder container component using MUI Box\n * Displays a placeholder for charts with a dashed border\n */\nexport const ChartPlaceholderContainer = styled(Box)({\n  ...CHART_CONTAINER_STYLE,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n","import React, { memo, Suspense, lazy, useState, useEffect, useMemo } from 'react';\nimport { CircularProgress, styled } from '@mui/material';\nimport { SPACING } from './styles';\n\n/**\n * TabPanel component props\n */\ninterface TabPanelProps {\n  /** Content to display when the tab is active */\n  children?: React.ReactNode;\n  /** The index of this tab panel */\n  index: number;\n  /** The current active tab value */\n  value: number;\n  /** The unique identifier for this tab panel */\n  id: string;\n  /** Whether to lazy load the tab content (default: false) */\n  lazyLoad?: boolean;\n  /** Additional props */\n  [key: string]: any;\n}\n\n// Styled components to avoid complex style objects\nconst TabPanelContainer = styled('div')({\n  width: '100%',\n});\n\nconst TabPanelContent = styled('div')({\n  paddingTop: SPACING.lg,\n});\n\nconst LoadingContainer = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  padding: SPACING.lg,\n});\n\n/**\n * TabPanel component for handling tab content\n * Displays the content only when the tab is active\n * Supports lazy loading of tab content for better performance\n *\n * @param children - The content to display when the tab is active\n * @param value - The current active tab value\n * @param index - The index of this tab panel\n * @param id - The unique identifier for this tab panel\n * @param lazyLoad - Whether to lazy load the tab content (default: false)\n */\nconst TabPanel: React.FC<TabPanelProps> = ({\n  children,\n  value,\n  index,\n  id,\n  lazyLoad = false,\n  ...other\n}) => {\n  const isActive = value === index;\n  const [hasBeenActive, setHasBeenActive] = useState(isActive);\n\n  // Track if this tab has ever been active\n  useEffect(() => {\n    if (isActive && !hasBeenActive) {\n      setHasBeenActive(true);\n    }\n  }, [isActive, hasBeenActive]);\n\n  // If lazy loading is enabled, only render the content if the tab has been active\n  // Memoized to prevent unnecessary recalculations\n  const shouldRenderContent = useMemo(() => !lazyLoad || hasBeenActive, [lazyLoad, hasBeenActive]);\n\n  if (!isActive) {\n    return (\n      <TabPanelContainer\n        role=\"tabpanel\"\n        hidden\n        id={`tabpanel-${id}`}\n        aria-labelledby={`tab-${id}`}\n        aria-hidden=\"true\"\n        {...other}\n      />\n    );\n  }\n\n  return (\n    <TabPanelContainer\n      role=\"tabpanel\"\n      id={`tabpanel-${id}`}\n      aria-labelledby={`tab-${id}`}\n      aria-hidden=\"false\"\n      {...other}\n    >\n      <TabPanelContent>\n        {shouldRenderContent ? (\n          <Suspense fallback={\n            <LoadingContainer>\n              <CircularProgress size={40} />\n            </LoadingContainer>\n          }>\n            {children}\n          </Suspense>\n        ) : (\n          <LoadingContainer>\n            <CircularProgress size={40} />\n          </LoadingContainer>\n        )}\n      </TabPanelContent>\n    </TabPanelContainer>\n  );\n};\n\nexport default memo(TabPanel);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\n// Auth selectors\nexport const selectAuthState = (state: RootState) => state.auth;\n\nexport const selectIsAuthenticated = createSelector(\n  [selectAuthState],\n  (auth) => auth.isAuthenticated\n);\n\nexport const selectCurrentUser = createSelector(\n  [selectAuthState],\n  (auth) => auth.user\n);\n\nexport const selectAuthLoading = createSelector(\n  [selectAuthState],\n  (auth) => auth.loading\n);\n\nexport const selectAuthError = createSelector(\n  [selectAuthState],\n  (auth) => auth.error\n);\n\n// Dashboard selectors\nexport const selectDashboardState = (state: RootState) => state.dashboard;\n\nexport const selectDashboardData = createSelector(\n  [selectDashboardState],\n  (dashboard) => ({\n    summaryStats: dashboard.summaryStats,\n    casinoRevenue: dashboard.casinoRevenue,\n    playerRegistrations: dashboard.playerRegistrations,\n    topGames: dashboard.topGames,\n    recentTransactions: dashboard.recentTransactions,\n    heatmapData: dashboard.heatmapData,\n    playerJourneyData: dashboard.playerJourneyData,\n    segmentComparisonData: dashboard.segmentComparisonData\n  })\n);\n\nexport const selectDashboardLoading = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.isLoading\n);\n\nexport const selectDashboardError = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.error\n);\n\nexport const selectSummaryStats = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.summaryStats\n);\n\nexport const selectCasinoRevenue = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.casinoRevenue\n);\n\nexport const selectPlayerRegistrations = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.playerRegistrations\n);\n\nexport const selectTopGames = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.topGames\n);\n\nexport const selectRecentTransactions = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.recentTransactions\n);\n\nexport const selectHeatmapData = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.heatmapData\n);\n\nexport const selectPlayerJourneyData = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.playerJourneyData\n);\n\nexport const selectSegmentComparisonData = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.segmentComparisonData\n);\n\nexport const selectComponentErrors = createSelector(\n  [selectDashboardState],\n  (dashboard) => dashboard.componentErrors\n);\n\n// Computed selectors that combine data\nexport const selectDashboardSummary = createSelector(\n  [selectSummaryStats, selectDashboardLoading, selectComponentErrors],\n  (summaryStats, loading, errors) => ({\n    data: summaryStats,\n    loading,\n    error: errors?.summary || null\n  })\n);\n\nexport const selectRevenueChartData = createSelector(\n  [selectCasinoRevenue, selectDashboardLoading, selectComponentErrors],\n  (casinoRevenue, loading, errors) => ({\n    data: casinoRevenue,\n    loading,\n    error: errors?.revenue || null\n  })\n);\n\nexport const selectRegistrationsChartData = createSelector(\n  [selectPlayerRegistrations, selectDashboardLoading, selectComponentErrors],\n  (playerRegistrations, loading, errors) => ({\n    data: playerRegistrations,\n    loading,\n    error: errors?.registrations || null\n  })\n);\n\nexport const selectTopGamesChartData = createSelector(\n  [selectTopGames, selectDashboardLoading, selectComponentErrors],\n  (topGames, loading, errors) => ({\n    data: topGames,\n    loading,\n    error: errors?.topGames || null\n  })\n);\n\nexport const selectTransactionsTableData = createSelector(\n  [selectRecentTransactions, selectDashboardLoading, selectComponentErrors],\n  (recentTransactions, loading, errors) => ({\n    data: recentTransactions,\n    loading,\n    error: errors?.transactions || null\n  })\n);\n\n// Reports selectors\nexport const selectReportsState = (state: RootState) => state.reports;\n\nexport const selectReportsData = createSelector(\n  [selectReportsState],\n  (reports) => ({\n    players: reports.players.data,\n    dailyActions: reports.dailyActions.data\n  })\n);\n\nexport const selectReportsLoading = createSelector(\n  [selectReportsState],\n  (reports) => reports.players.loading || reports.dailyActions.loading\n);\n\nexport const selectReportsError = createSelector(\n  [selectReportsState],\n  (reports) => reports.players.error || reports.dailyActions.error\n);\n\n// UI selectors\nexport const selectUIState = (state: RootState) => state.ui;\n\nexport const selectSidebarOpen = createSelector(\n  [selectUIState],\n  (ui) => ui.sidebarOpen\n);\n\nexport const selectDarkMode = createSelector(\n  [selectUIState],\n  (ui) => ui.darkMode\n);\n\nexport const selectActiveTab = createSelector(\n  [selectUIState],\n  (ui) => ui.activeTab\n);\n\n// Combined selectors for components\nexport const selectDashboardTabsProps = createSelector(\n  [selectDashboardData, selectDashboardLoading, selectDashboardError, selectActiveTab],\n  (data, loading, error, activeTab) => ({\n    dashboardData: data,\n    isLoading: loading,\n    error,\n    activeTab\n  })\n);\n","/**\n * Analytics page constants\n */\n\nexport interface TabDefinition {\n  id: string;\n  label: string;\n  ariaControls: string;\n}\n\nexport const ANALYTICS_TABS: TabDefinition[] = [\n  {\n    id: 'overview',\n    label: 'Overview',\n    ariaControls: 'tabpanel-overview'\n  },\n  {\n    id: 'performance',\n    label: 'Performance',\n    ariaControls: 'tabpanel-performance'\n  },\n  {\n    id: 'player-analysis',\n    label: 'Player Analysis',\n    ariaControls: 'tabpanel-player-analysis'\n  },\n  {\n    id: 'game-analysis',\n    label: 'Game Analysis',\n    ariaControls: 'tabpanel-game-analysis'\n  }\n];\n\nexport const DATE_FORMAT_OPTIONS: Intl.DateTimeFormatOptions = {\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit',\n  hour12: true\n};\n","import React, { memo, lazy, Suspense, useCallback, useMemo } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\n// Import common components\r\nimport ErrorDisplay from '../../components/common/ErrorDisplay';\r\nimport LoadingOverlay from '../../components/common/LoadingOverlay';\r\n\r\n// Import custom components for AnalyticsPage\r\nimport { HeaderFlexContainer } from './AnalyticsPageComponents';\r\nimport TabPanel from './TabPanel';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\n// Import custom hooks\r\nimport { useDashboardData, useTabs } from './hooks';\r\n\r\n// Import constants and styles\r\nimport { ANALYTICS_TABS } from './constants';\r\nimport { SECTION_STYLE, ERROR_CONTAINER_STYLE, TAB_CONTAINER_STYLE } from './styles';\r\n\r\n// Lazy load tab components for better performance\r\nconst OverviewTab = lazy(() => import('./tabs/OverviewTab'));\r\nconst PerformanceTab = lazy(() => import('./tabs/PerformanceTab'));\r\nconst PlayerAnalysisTab = lazy(() => import('./tabs/PlayerAnalysisTab'));\r\nconst GameAnalysisTab = lazy(() => import('./tabs/GameAnalysisTab'));\r\n\r\n/**\r\n * AnalyticsPage component\r\n * Provides a comprehensive analytics dashboard with multiple visualizations and insights\r\n */\r\nconst AnalyticsPage: React.FC = () => {\r\n  // Use custom hooks for dashboard data and tab management\r\n  const {\r\n    summaryStats,\r\n    recentTransactions,\r\n    isLoading,\r\n    error,\r\n    formattedLastUpdated,\r\n    refreshData\r\n  } = useDashboardData();\r\n\r\n  const {\r\n    activeTab,\r\n    handleTabChange\r\n    // tabs variable is not used but is available from useTabs if needed\r\n  } = useTabs({\r\n    tabs: ANALYTICS_TABS,\r\n    initialTab: 0\r\n  });\r\n\r\n  /**\r\n   * Handle refresh button click\r\n   * Refreshes dashboard data\r\n   */\r\n  const handleRefresh = useCallback((): void => {\r\n    refreshData();\r\n  }, [refreshData]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Analytics Dashboard | PPrePorter</title>\r\n        <meta name=\"description\" content=\"Analytics dashboard with comprehensive data visualizations and insights\" />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\">\r\n        {/* Dashboard Header */}\r\n        <header style={SECTION_STYLE}>\r\n          <HeaderFlexContainer>\r\n            <div>\r\n              <Typography variant=\"h4\" component=\"h1\" style={{ marginBottom: '4px' }}>\r\n                Analytics Dashboard\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Last updated: {formattedLastUpdated}\r\n              </Typography>\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<RefreshIcon />}\r\n              onClick={handleRefresh}\r\n              aria-label=\"Refresh dashboard data\"\r\n            >\r\n              Refresh Data\r\n            </Button>\r\n          </HeaderFlexContainer>\r\n        </header>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div style={ERROR_CONTAINER_STYLE}>\r\n            <ErrorDisplay\r\n              error={error}\r\n              title=\"Failed to load dashboard data\"\r\n              onRetry={handleRefresh}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Loading Overlay */}\r\n        {isLoading && <LoadingOverlay />}\r\n\r\n        {/* Dashboard Tabs */}\r\n        <div style={TAB_CONTAINER_STYLE}>\r\n          <Tabs\r\n            value={activeTab}\r\n            onChange={handleTabChange}\r\n            aria-label=\"analytics dashboard tabs\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            {ANALYTICS_TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.id}\r\n                label={tab.label}\r\n                id={`tab-${tab.id}`}\r\n                aria-controls={tab.ariaControls}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <main>\r\n          <ErrorBoundary onReset={handleRefresh}>\r\n            <Suspense fallback={\r\n              <div style={{ display: 'flex', justifyContent: 'center', padding: '32px' }}>\r\n                <CircularProgress size={40} />\r\n              </div>\r\n            }>\r\n              {useMemo(() => (\r\n                <>\r\n                  <TabPanel value={activeTab} index={0} id={ANALYTICS_TABS[0].id} lazyLoad>\r\n                    <OverviewTab\r\n                      summaryStats={summaryStats}\r\n                      recentTransactions={recentTransactions}\r\n                      isLoading={isLoading}\r\n                      error={error}\r\n                    />\r\n                  </TabPanel>\r\n\r\n                  <TabPanel value={activeTab} index={1} id={ANALYTICS_TABS[1].id} lazyLoad>\r\n                    <PerformanceTab />\r\n                  </TabPanel>\r\n\r\n                  <TabPanel value={activeTab} index={2} id={ANALYTICS_TABS[2].id} lazyLoad>\r\n                    <PlayerAnalysisTab />\r\n                  </TabPanel>\r\n\r\n                  <TabPanel value={activeTab} index={3} id={ANALYTICS_TABS[3].id} lazyLoad>\r\n                    <GameAnalysisTab />\r\n                  </TabPanel>\r\n                </>\r\n              ), [activeTab, summaryStats, recentTransactions, isLoading, error])}\r\n            </Suspense>\r\n          </ErrorBoundary>\r\n        </main>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AnalyticsPage);\r\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../../../store/store';\nimport {\n  fetchDashboardSummary,\n  fetchRevenueChart,\n  fetchTopGames,\n  fetchRecentTransactions\n} from '../../../store/slices/dashboardSlice';\nimport {\n  selectSummaryStats,\n  selectRecentTransactions,\n  selectDashboardLoading,\n  selectDashboardError\n} from '../../../store/selectors';\nimport { DATE_FORMAT_OPTIONS } from '../constants';\n\n/**\n * Custom hook for managing dashboard data\n * Handles loading, refreshing, and formatting dashboard data\n * \n * @returns Dashboard data, loading state, error state, and utility functions\n */\nexport const useDashboardData = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  \n  // Redux state\n  const summaryStats = useSelector(selectSummaryStats);\n  const recentTransactions = useSelector(selectRecentTransactions);\n  const isLoading = useSelector(selectDashboardLoading);\n  const error = useSelector(selectDashboardError);\n  \n  // Local state\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  \n  // Function to load all dashboard data\n  const loadDashboardData = useCallback(() => {\n    dispatch(fetchDashboardSummary());\n    dispatch(fetchRevenueChart());\n    dispatch(fetchTopGames());\n    dispatch(fetchRecentTransactions());\n    \n    setLastUpdated(new Date());\n  }, [dispatch]);\n  \n  // Load dashboard data on mount\n  useEffect(() => {\n    loadDashboardData();\n  }, [loadDashboardData]);\n  \n  // Format the last updated time\n  const formattedLastUpdated = lastUpdated.toLocaleTimeString(undefined, DATE_FORMAT_OPTIONS);\n  \n  return {\n    // Data\n    summaryStats,\n    recentTransactions,\n    \n    // State\n    isLoading,\n    error,\n    lastUpdated,\n    formattedLastUpdated,\n    \n    // Actions\n    loadDashboardData,\n    refreshData: loadDashboardData\n  };\n};\n","import { useState, useCallback, SyntheticEvent } from 'react';\nimport { TabDefinition } from '../constants';\n\ninterface UseTabsOptions {\n  initialTab?: number;\n  onTabChange?: (index: number) => void;\n  tabs: TabDefinition[];\n}\n\n/**\n * Custom hook for managing tabs\n * Handles tab selection and navigation\n * \n * @param options - Configuration options for the tabs\n * @returns Tab state and handlers\n */\nexport const useTabs = (options: UseTabsOptions) => {\n  const { initialTab = 0, onTabChange, tabs } = options;\n  \n  // Tab state\n  const [activeTab, setActiveTab] = useState<number>(initialTab);\n  \n  // Handle tab change\n  const handleTabChange = useCallback((_event: SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n    \n    if (onTabChange) {\n      onTabChange(newValue);\n    }\n  }, [onTabChange]);\n  \n  // Get the current tab\n  const currentTab = tabs[activeTab];\n  \n  // Navigate to a specific tab\n  const navigateToTab = useCallback((index: number) => {\n    if (index >= 0 && index < tabs.length) {\n      setActiveTab(index);\n      \n      if (onTabChange) {\n        onTabChange(index);\n      }\n    }\n  }, [tabs, onTabChange]);\n  \n  // Navigate to a tab by ID\n  const navigateToTabById = useCallback((id: string) => {\n    const index = tabs.findIndex(tab => tab.id === id);\n    if (index !== -1) {\n      navigateToTab(index);\n    }\n  }, [tabs, navigateToTab]);\n  \n  return {\n    activeTab,\n    currentTab,\n    handleTabChange,\n    navigateToTab,\n    navigateToTabById,\n    tabs\n  };\n};\n","import React from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { LoadingOverlayProps } from '../../types/loadingOverlay';\n\n/**\n * LoadingOverlay component\n * Displays a loading spinner with an optional message\n */\nconst LoadingOverlay: React.FC<LoadingOverlayProps> = ({ \n  loading = true, \n  message = 'Loading...', \n  sx = {},\n  size = 40,\n  color = 'primary',\n  backgroundColor = 'rgba(255, 255, 255, 0.7)',\n  zIndex = 1000\n}) => {\n  if (!loading) return null;\n  \n  return (\n    <Box \n      sx={{ \n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor,\n        zIndex,\n        ...sx\n      }}\n    >\n      <CircularProgress size={size} color={color} />\n      {message && (\n        <Typography \n          variant=\"body2\" \n          color=\"text.secondary\" \n          sx={{ mt: 2 }}\n        >\n          {message}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default LoadingOverlay;\n","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { ErrorDisplayProps, ErrorObject } from '../../types/errorDisplay';\n\n/**\n * Error component for displaying user-friendly error messages\n */\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({ \n  error, \n  title = 'Something went wrong', \n  onRetry = null,\n  sx,\n  showRetry = true,\n  retryText = 'Try Again'\n}) => {\n  let errorMessage = 'An unexpected error occurred. Please try again later.';\n  \n  // Extract error message from different response formats\n  if (typeof error === 'string') {\n    errorMessage = error;\n  } else if (error?.message) {\n    errorMessage = error.message;\n  } else if ((error as ErrorObject)?.statusText) {\n    errorMessage = (error as ErrorObject).statusText || '';\n  } else if ((error as ErrorObject)?.data?.message) {\n    errorMessage = (error as ErrorObject).data?.message || '';\n  }\n\n  return (\n    <Paper \n      elevation={2} \n      sx={{ \n        p: 3, \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        textAlign: 'center',\n        border: '1px solid #e0e0e0',\n        borderRadius: 2,\n        backgroundColor: '#fff9f9',\n        width: '100%',\n        ...sx\n      }}\n    >\n      <ErrorOutlineIcon color=\"error\" sx={{ fontSize: 48, mb: 2 }} />\n      \n      <Typography variant=\"h6\" gutterBottom color=\"error\">\n        {title}\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 3 }}>\n        {errorMessage}\n      </Typography>\n      \n      {showRetry && onRetry && (\n        <Button \n          variant=\"outlined\" \n          color=\"primary\" \n          startIcon={<RefreshIcon />}\n          onClick={onRetry}\n        >\n          {retryText}\n        </Button>\n      )}\n    </Paper>\n  );\n};\n\nexport default ErrorDisplay;\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Button, Paper, Typography, styled } from '@mui/material';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onReset?: () => void;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nconst ErrorContainer = styled(Paper)(({ theme }) => ({\n  padding: '24px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n  borderRadius: '8px',\n  margin: '16px 0',\n}));\n\nconst ErrorIcon = styled(ErrorOutlineIcon)(({ theme }) => ({\n  fontSize: 48,\n  color: theme.palette.error.main,\n  marginBottom: '16px',\n}));\n\n/**\n * ErrorBoundary component\n * Catches JavaScript errors in child components and displays a fallback UI\n */\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log the error to an error reporting service\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n  }\n\n  handleReset = (): void => {\n    this.setState({\n      hasError: false,\n      error: null,\n    });\n    \n    if (this.props.onReset) {\n      this.props.onReset();\n    }\n  };\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // Render custom fallback UI if provided\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Render default fallback UI\n      return (\n        <ErrorContainer>\n          <ErrorIcon />\n          <Typography variant=\"h6\" gutterBottom>\n            Something went wrong\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            {this.state.error?.message || 'An unexpected error occurred'}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<RefreshIcon />}\n            onClick={this.handleReset}\n          >\n            Try Again\n          </Button>\n        </ErrorContainer>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"names":["SPACING","xs","sm","md","lg","xl","BORDER_RADIUS","COLORS","CARD_STYLE","padding","borderRadius","boxShadow","HEADING_STYLE","marginBottom","SECTION_STYLE","CHART_CONTAINER_STYLE","height","border","TAB_CONTAINER_STYLE","borderBottom","ERROR_CONTAINER_STYLE","PLACEHOLDER_STYLE","backgroundColor","minHeight","display","alignItems","justifyContent","HeaderFlexContainer","styled","Box","ChartPlaceholderContainer","flexDirection","TabPanelContainer","width","TabPanelContent","paddingTop","LoadingContainer","TabPanel","_ref","children","value","index","id","lazyLoad","other","isActive","hasBeenActive","setHasBeenActive","useState","useEffect","shouldRenderContent","useMemo","_jsx","role","Suspense","fallback","CircularProgress","size","hidden","memo","selectAuthState","state","auth","selectDashboardState","createSelector","isAuthenticated","user","loading","error","dashboard","selectDashboardData","summaryStats","casinoRevenue","playerRegistrations","topGames","recentTransactions","heatmapData","playerJourneyData","segmentComparisonData","selectDashboardLoading","isLoading","selectDashboardError","selectSummaryStats","selectCasinoRevenue","selectPlayerRegistrations","selectTopGames","selectRecentTransactions","selectComponentErrors","componentErrors","selectReportsState","errors","data","summary","revenue","registrations","transactions","reports","selectUIState","players","dailyActions","ui","selectActiveTab","sidebarOpen","darkMode","activeTab","ANALYTICS_TABS","dashboardData","label","ariaControls","DATE_FORMAT_OPTIONS","hour","minute","second","hour12","OverviewTab","lazy","PerformanceTab","PlayerAnalysisTab","GameAnalysisTab","AnalyticsPage","formattedLastUpdated","refreshData","useDashboardData","dispatch","useDispatch","useSelector","lastUpdated","setLastUpdated","Date","loadDashboardData","useCallback","fetchDashboardSummary","fetchRevenueChart","fetchTopGames","fetchRecentTransactions","toLocaleTimeString","undefined","handleTabChange","options","initialTab","onTabChange","tabs","setActiveTab","_event","newValue","currentTab","navigateToTab","length","navigateToTabById","findIndex","tab","useTabs","handleRefresh","_jsxs","_Fragment","Helmet","name","content","Container","maxWidth","style","Typography","variant","component","color","Button","startIcon","RefreshIcon","onClick","ErrorDisplay","title","onRetry","LoadingOverlay","Tabs","onChange","scrollButtons","map","Tab","ErrorBoundary","onReset","message","sx","zIndex","position","top","left","right","bottom","mt","_data","showRetry","retryText","errorMessage","statusText","_data2","Paper","elevation","p","textAlign","ErrorOutlineIcon","fontSize","mb","gutterBottom","ErrorContainer","theme","margin","ErrorIcon","_ref2","palette","main","Component","constructor","props","super","handleReset","this","setState","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","_this$state$error","paragraph"],"sourceRoot":""}