{"version":3,"file":"static/js/912.bf7de990.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Download.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","components/reports/DailyActionsAdvancedReport.tsx","containers/DailyActionsAdvancedReportContainer.jsx","pages/showcase/reports/DailyActionsAdvancedPage.tsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Button,\n  Divider,\n  CircularProgress,\n  Alert,\n  Tabs,\n  Tab,\n  Menu,\n  MenuItem,\n  IconButton,\n  Tooltip,\n  Paper,\n  TextField,\n  InputAdornment\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport InfoIcon from '@mui/icons-material/Info';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DateRangePicker from '../common/DateRangePicker';\nimport { MultiSelect } from '../common';\nimport { DateRange } from '../../types/dateRangePicker';\nimport { format, subDays, startOfDay, endOfDay } from 'date-fns';\n\n// Define interfaces\ninterface DailyActionsAdvancedReportProps {\n  /**\n   * Metadata for filters\n   */\n  metadata: any;\n\n  /**\n   * Report data\n   */\n  data: any;\n\n  /**\n   * Loading state\n   */\n  loading: boolean;\n\n  /**\n   * Error message\n   */\n  error: string | null;\n\n  /**\n   * Handler for filter changes\n   */\n  onFilterChange: (filters: any) => void;\n\n  /**\n   * Handler for refreshing data\n   */\n  onRefresh: (filters: any) => void;\n\n  /**\n   * Handler for exporting data\n   */\n  onExport: (filters: any, format: string) => void;\n}\n\n/**\n * Advanced daily actions report component\n */\nconst DailyActionsAdvancedReport: React.FC<DailyActionsAdvancedReportProps> = ({\n  metadata,\n  data,\n  loading,\n  error,\n  onFilterChange,\n  onRefresh,\n  onExport\n}) => {\n  // State\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [exportAnchorEl, setExportAnchorEl] = useState<null | HTMLElement>(null);\n  const [showFilters, setShowFilters] = useState<boolean>(false);\n  const [filters, setFilters] = useState({\n    startDate: startOfDay(subDays(new Date(), 30)),\n    endDate: endOfDay(new Date()),\n    gameCategories: [] as string[],\n    playerStatuses: [] as string[],\n    countries: [] as string[],\n    whiteLabels: [] as string[],\n    minAmount: '',\n    maxAmount: '',\n    searchTerm: ''\n  });\n\n  // Prepare options for select components\n  const [gameCategories, setGameCategories] = useState<Array<{ value: string, label: string }>>([]);\n  const [playerStatuses, setPlayerStatuses] = useState<Array<{ value: string, label: string }>>([]);\n  const [countries, setCountries] = useState<Array<{ value: string, label: string }>>([]);\n  const [whiteLabels, setWhiteLabels] = useState<Array<{ value: string, label: string }>>([]);\n\n  // Extract options from metadata when it changes\n  useEffect(() => {\n    if (metadata) {\n      // Extract game categories\n      const gameCategoryFilter = metadata.filters?.find((filter: any) => filter.id === 'gameCategory');\n      if (gameCategoryFilter?.options) {\n        setGameCategories(gameCategoryFilter.options);\n      } else {\n        // Default game categories if not found in metadata\n        setGameCategories([\n          { value: 'slots', label: 'Slots' },\n          { value: 'table', label: 'Table Games' },\n          { value: 'live', label: 'Live Casino' },\n          { value: 'poker', label: 'Poker' },\n          { value: 'sports', label: 'Sports' },\n          { value: 'arcade', label: 'Arcade' }\n        ]);\n      }\n\n      // Extract player statuses\n      const playerStatusFilter = metadata.filters?.find((filter: any) => filter.id === 'playerStatus');\n      if (playerStatusFilter?.options) {\n        setPlayerStatuses(playerStatusFilter.options);\n      } else {\n        // Default player statuses if not found in metadata\n        setPlayerStatuses([\n          { value: 'active', label: 'Active' },\n          { value: 'inactive', label: 'Inactive' },\n          { value: 'suspended', label: 'Suspended' },\n          { value: 'new', label: 'New' },\n          { value: 'vip', label: 'VIP' }\n        ]);\n      }\n\n      // Extract countries\n      const countryFilter = metadata.filters?.find((filter: any) => filter.id === 'country');\n      if (countryFilter?.options) {\n        setCountries(countryFilter.options);\n      } else {\n        // Default countries if not found in metadata\n        setCountries([\n          { value: 'us', label: 'United States' },\n          { value: 'uk', label: 'United Kingdom' },\n          { value: 'ca', label: 'Canada' },\n          { value: 'de', label: 'Germany' },\n          { value: 'fr', label: 'France' },\n          { value: 'es', label: 'Spain' },\n          { value: 'it', label: 'Italy' },\n          { value: 'au', label: 'Australia' }\n        ]);\n      }\n\n      // Extract white labels\n      const whiteLabelFilter = metadata.filters?.find((filter: any) => filter.id === 'whiteLabel');\n      if (whiteLabelFilter?.options) {\n        setWhiteLabels(whiteLabelFilter.options);\n      } else if (metadata.whiteLabels) {\n        // Try to get white labels from metadata.whiteLabels\n        setWhiteLabels(metadata.whiteLabels.map((wl: any) => ({\n          value: wl.id,\n          label: wl.name\n        })));\n      } else {\n        // Default white labels if not found in metadata\n        setWhiteLabels([\n          { value: 'casino-royale', label: 'Casino Royale' },\n          { value: 'lucky-spin', label: 'Lucky Spin' },\n          { value: 'golden-bet', label: 'Golden Bet' },\n          { value: 'diamond-play', label: 'Diamond Play' },\n          { value: 'royal-flush', label: 'Royal Flush' }\n        ]);\n      }\n    }\n  }, [metadata]);\n\n  // Handle tab change\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  // Handle export menu\n  const handleExportClick = (event: React.MouseEvent<HTMLElement>) => {\n    setExportAnchorEl(event.currentTarget);\n  };\n\n  const handleExportClose = () => {\n    setExportAnchorEl(null);\n  };\n\n  // Handle export format selection\n  const handleExportFormat = (format: string) => {\n    onExport(filters, format);\n    handleExportClose();\n  };\n\n  // Handle filter toggle\n  const handleToggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  // Handle filter change\n  const handleFilterChange = (field: string, value: any) => {\n    const newFilters = {\n      ...filters,\n      [field]: value\n    };\n\n    setFilters(newFilters);\n    onFilterChange(newFilters);\n  };\n\n  // Handle multi-select change\n  const handleMultiSelectChange = (field: string, value: (string | number)[]) => {\n    handleFilterChange(field, value);\n  };\n\n  // Handle search term change\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleFilterChange('searchTerm', event.target.value);\n  };\n\n  // Handle date range change\n  const handleDateRangeChange = (range: DateRange) => {\n    if (range.start && range.end) {\n      const newFilters = {\n        ...filters,\n        startDate: range.start,\n        endDate: range.end\n      };\n\n      setFilters(newFilters);\n      onFilterChange(newFilters);\n    }\n  };\n\n  // Handle refresh\n  const handleRefresh = () => {\n    onRefresh(filters);\n  };\n\n  // Render placeholder content when no data\n  const renderPlaceholder = () => (\n    <Box sx={{ p: 4, textAlign: 'center' }}>\n      <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n        No data available\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        Try adjusting your filters or select a different date range.\n      </Typography>\n      <Button\n        variant=\"outlined\"\n        startIcon={<RefreshIcon />}\n        onClick={handleRefresh}\n        sx={{ mt: 2 }}\n      >\n        Refresh Data\n      </Button>\n    </Box>\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        {/* Report Header */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n          <Typography variant=\"h5\">\n            Advanced Daily Actions Report\n          </Typography>\n          <Box>\n            <Tooltip title=\"Refresh data\">\n              <IconButton onClick={handleRefresh} disabled={loading}>\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Filter data\">\n              <IconButton onClick={handleToggleFilters} color={showFilters ? 'primary' : 'default'}>\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Export data\">\n              <IconButton onClick={handleExportClick} disabled={loading || !data}>\n                <DownloadIcon />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={exportAnchorEl}\n              open={Boolean(exportAnchorEl)}\n              onClose={handleExportClose}\n            >\n              <MenuItem onClick={() => handleExportFormat('csv')}>Export as CSV</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('xlsx')}>Export as Excel</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('pdf')}>Export as PDF</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('json')}>Export as JSON</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n\n        {/* Error Alert */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Filters Section */}\n        {showFilters && (\n          <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Filters\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <DateRangePicker\n                  startDate={filters.startDate}\n                  endDate={filters.endDate}\n                  onChange={handleDateRangeChange}\n                  buttonLabel=\"Date Range\"\n                />\n              </Grid>\n\n              {/* Search */}\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  size=\"small\"\n                  label=\"Search\"\n                  placeholder=\"Search by player, game, etc.\"\n                  value={filters.searchTerm}\n                  onChange={handleSearchChange}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon fontSize=\"small\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              {/* Game Categories */}\n              <Grid item xs={12} md={6}>\n                <MultiSelect\n                  label=\"Game Categories\"\n                  options={gameCategories}\n                  value={filters.gameCategories}\n                  onChange={(value) => handleMultiSelectChange('gameCategories', value)}\n                  placeholder=\"Select game categories\"\n                  searchable\n                  showSelectAllOption\n                />\n              </Grid>\n\n              {/* Player Statuses */}\n              <Grid item xs={12} md={6}>\n                <MultiSelect\n                  label=\"Player Statuses\"\n                  options={playerStatuses}\n                  value={filters.playerStatuses}\n                  onChange={(value) => handleMultiSelectChange('playerStatuses', value)}\n                  placeholder=\"Select player statuses\"\n                  searchable\n                  showSelectAllOption\n                />\n              </Grid>\n\n              {/* Countries */}\n              <Grid item xs={12} md={6}>\n                <MultiSelect\n                  label=\"Countries\"\n                  options={countries}\n                  value={filters.countries}\n                  onChange={(value) => handleMultiSelectChange('countries', value)}\n                  placeholder=\"Select countries\"\n                  searchable\n                  showSelectAllOption\n                />\n              </Grid>\n\n              {/* White Labels */}\n              <Grid item xs={12} md={6}>\n                <MultiSelect\n                  label=\"White Labels\"\n                  options={whiteLabels}\n                  value={filters.whiteLabels}\n                  onChange={(value) => handleMultiSelectChange('whiteLabels', value)}\n                  placeholder=\"Select white labels\"\n                  searchable\n                  showSelectAllOption\n                />\n              </Grid>\n\n              {/* Amount Range */}\n              <Grid item xs={12} md={6}>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      label=\"Min Amount\"\n                      type=\"number\"\n                      placeholder=\"0\"\n                      value={filters.minAmount}\n                      onChange={(e) => handleFilterChange('minAmount', e.target.value)}\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      label=\"Max Amount\"\n                      type=\"number\"\n                      placeholder=\"1000\"\n                      value={filters.maxAmount}\n                      onChange={(e) => handleFilterChange('maxAmount', e.target.value)}\n                      InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  // Reset filters logic\n                  const resetFilters = {\n                    startDate: startOfDay(subDays(new Date(), 30)),\n                    endDate: endOfDay(new Date()),\n                    gameCategories: [],\n                    playerStatuses: [],\n                    countries: [],\n                    whiteLabels: [],\n                    minAmount: '',\n                    maxAmount: '',\n                    searchTerm: ''\n                  };\n                  setFilters(resetFilters);\n                  onFilterChange(resetFilters);\n                }}\n                sx={{ mr: 1 }}\n              >\n                Reset\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleRefresh}\n              >\n                Apply Filters\n              </Button>\n            </Box>\n          </Paper>\n        )}\n\n        {/* Date Range Display */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Showing data from {format(filters.startDate, 'MMM d, yyyy')} to {format(filters.endDate, 'MMM d, yyyy')}\n          </Typography>\n        </Box>\n\n        {/* Loading Indicator */}\n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n            <CircularProgress />\n          </Box>\n        )}\n\n        {/* Report Content */}\n        {!loading && data && (\n          <>\n            {/* Report Tabs */}\n            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n              <Tabs value={activeTab} onChange={handleTabChange}>\n                <Tab label=\"Summary\" />\n                <Tab label=\"Detailed View\" />\n                <Tab label=\"Charts\" />\n              </Tabs>\n            </Box>\n\n            {/* Tab Content */}\n            <Box role=\"tabpanel\" hidden={activeTab !== 0}>\n              {activeTab === 0 && (\n                <Typography variant=\"body1\">\n                  Summary content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n            <Box role=\"tabpanel\" hidden={activeTab !== 1}>\n              {activeTab === 1 && (\n                <Typography variant=\"body1\">\n                  Detailed view content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n            <Box role=\"tabpanel\" hidden={activeTab !== 2}>\n              {activeTab === 2 && (\n                <Typography variant=\"body1\">\n                  Charts content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n          </>\n        )}\n\n        {/* No Data Placeholder */}\n        {!loading && !data && renderPlaceholder()}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DailyActionsAdvancedReport;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Alert, CircularProgress } from '@mui/material';\nimport DailyActionsAdvancedReport from '../components/reports/DailyActionsAdvancedReport';\nimport dailyActionsService from '../services/api/dailyActionsService';\nimport { saveAs } from 'file-saver';\nimport { format } from 'date-fns';\nimport { FEATURES } from '../config/constants';\n\n/**\n * Container component for DailyActionsAdvancedReport\n * Handles API calls and data management\n */\nconst DailyActionsAdvancedReportContainer = () => {\n  // State\n  const [metadata, setMetadata] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [metadataLoading, setMetadataLoading] = useState(false);\n  const [metadataError, setMetadataError] = useState(null);\n\n  const navigate = useNavigate();\n\n  // Load metadata on mount\n  useEffect(() => {\n    fetchMetadata();\n  }, []);\n\n  // Fetch metadata for filters\n  const fetchMetadata = async () => {\n    try {\n      setMetadataLoading(true);\n      setMetadataError(null);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for metadata');\n\n        // Import mock data dynamically\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock metadata\n        const mockMetadata = mockDataService.getMockData('/reports/daily-actions/metadata');\n\n        if (mockMetadata) {\n          console.log('[DAILY ACTIONS ADVANCED] Got mock metadata:', mockMetadata);\n          setMetadata(mockMetadata);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Fetching metadata from service');\n      const response = await dailyActionsService.getMetadata();\n      setMetadata(response);\n    } catch (err) {\n      console.error('Error fetching metadata:', err);\n      setMetadataError(err.message || 'Failed to load filter options');\n    } finally {\n      setMetadataLoading(false);\n    }\n  };\n\n  // Fetch report data based on filters\n  const fetchData = async (filters) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Convert dates to ISO strings\n      const apiFilters = {\n        ...filters,\n        startDate: filters.startDate ? format(new Date(filters.startDate), 'yyyy-MM-dd') : null,\n        endDate: filters.endDate ? format(new Date(filters.endDate), 'yyyy-MM-dd') : null\n      };\n\n      console.log('[DAILY ACTIONS ADVANCED] Fetching data with filters:', apiFilters);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for report');\n\n        // Import mock data dynamically\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock data\n        const mockData = mockDataService.getMockData('/reports/daily-actions/data', apiFilters);\n\n        if (mockData) {\n          console.log('[DAILY ACTIONS ADVANCED] Got mock data:', mockData);\n          setData(mockData);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Fetching data from service');\n      const response = await dailyActionsService.getFilteredData(apiFilters);\n      setData(response);\n    } catch (err) {\n      console.error('Error fetching report data:', err);\n      setError(err.message || 'Failed to load report data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle filter changes\n  const handleFilterChange = (filters) => {\n    // Log the filters\n    console.log('Filters changed:', filters);\n\n    // If we have search term or multi-select filters, we might want to fetch data\n    if (\n      filters.searchTerm ||\n      (filters.gameCategories && filters.gameCategories.length > 0) ||\n      (filters.playerStatuses && filters.playerStatuses.length > 0) ||\n      (filters.countries && filters.countries.length > 0)\n    ) {\n      // Optionally fetch data with the new filters\n      // Uncomment the line below to automatically fetch data when filters change\n      // fetchData(filters);\n    }\n  };\n\n  // Handle export\n  const handleExport = async (filters, exportFormat) => {\n    try {\n      setLoading(true);\n\n      // Convert dates to ISO strings\n      const apiFilters = {\n        ...filters,\n        startDate: filters.startDate ? format(new Date(filters.startDate), 'yyyy-MM-dd') : null,\n        endDate: filters.endDate ? format(new Date(filters.endDate), 'yyyy-MM-dd') : null\n      };\n\n      console.log('[DAILY ACTIONS ADVANCED] Exporting data with filters:', apiFilters, 'format:', exportFormat);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for export');\n\n        // For mock data, we'll just create a simple text file with JSON data\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock data\n        const mockData = mockDataService.getMockData('/reports/daily-actions/data', apiFilters);\n\n        if (mockData) {\n          console.log('[DAILY ACTIONS ADVANCED] Creating mock export file');\n          // Create a blob with the JSON data\n          const blob = new Blob([JSON.stringify(mockData, null, 2)], { type: 'application/json' });\n          const fileName = `daily-actions-report-${format(new Date(), 'yyyy-MM-dd')}.json`;\n          saveAs(blob, fileName);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Exporting data from service');\n      const blob = await dailyActionsService.exportFilteredReport(apiFilters, exportFormat);\n      const fileName = `daily-actions-report-${format(new Date(), 'yyyy-MM-dd')}.${exportFormat}`;\n      saveAs(blob, fileName);\n    } catch (err) {\n      console.error('Error exporting report:', err);\n      setError(err.message || 'Failed to export report');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show loading state while fetching metadata\n  if (metadataLoading && !metadata) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  // Show error if metadata fetch failed\n  if (metadataError && !metadata) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ mt: 4 }}>\n          <Alert severity=\"error\">\n            {metadataError}\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body2\">\n                Please try refreshing the page or contact support if the problem persists.\n              </Typography>\n            </Box>\n          </Alert>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <DailyActionsAdvancedReport\n          metadata={metadata}\n          data={data}\n          loading={loading}\n          error={error}\n          onFilterChange={handleFilterChange}\n          onRefresh={fetchData}\n          onExport={handleExport}\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default DailyActionsAdvancedReportContainer;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Link, Typography } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport DailyActionsAdvancedReportContainer from '../../../containers/DailyActionsAdvancedReportContainer';\n\n/**\n * DailyActionsAdvancedPage - Page component for the advanced daily actions report\n */\nconst DailyActionsAdvancedPage: React.FC = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Advanced Daily Actions Report | PPrePorter</title>\n      </Helmet>\n\n      <Box sx={{ p: 3 }}>\n        {/* Breadcrumbs */}\n        <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\n          <Link component={RouterLink} to=\"/\" color=\"inherit\">\n            Dashboard\n          </Link>\n          <Link component={RouterLink} to=\"/reports\" color=\"inherit\">\n            Reports\n          </Link>\n          <Typography color=\"text.primary\">Advanced Daily Actions</Typography>\n        </Breadcrumbs>\n\n        {/* Page Title */}\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Advanced Daily Actions Report\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" paragraph>\n          Comprehensive analysis of daily player actions with advanced filtering options.\n        </Typography>\n\n        {/* Report Container */}\n        <DailyActionsAdvancedReportContainer />\n      </Box>\n    </>\n  );\n};\n\nexport default DailyActionsAdvancedPage;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","_jsx","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","_ref","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","Typography","name","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","BreadcrumbCollapsed","onClick","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter","metadata","data","loading","error","onFilterChange","onRefresh","onExport","activeTab","setActiveTab","useState","exportAnchorEl","setExportAnchorEl","showFilters","setShowFilters","filters","setFilters","startDate","startOfDay","subDays","Date","endDate","endOfDay","gameCategories","playerStatuses","countries","whiteLabels","minAmount","maxAmount","searchTerm","setGameCategories","setPlayerStatuses","setCountries","setWhiteLabels","useEffect","_metadata$filters","_metadata$filters2","_metadata$filters3","_metadata$filters4","gameCategoryFilter","find","id","options","value","label","playerStatusFilter","countryFilter","whiteLabelFilter","wl","handleExportClose","handleExportFormat","format","handleFilterChange","field","newFilters","handleMultiSelectChange","handleRefresh","Card","_jsxs","CardContent","Box","sx","justifyContent","mb","variant","Tooltip","title","IconButton","disabled","RefreshIcon","handleToggleFilters","FilterListIcon","event","currentTarget","DownloadIcon","Menu","anchorEl","open","Boolean","onClose","MenuItem","Alert","severity","Paper","p","gutterBottom","Grid","container","item","xs","DateRangePicker","onChange","range","start","end","buttonLabel","TextField","fullWidth","size","placeholder","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","fontSize","md","MultiSelect","searchable","showSelectAllOption","type","e","mt","Button","resetFilters","mr","my","CircularProgress","_Fragment","borderBottom","borderColor","Tabs","handleTabChange","newValue","Tab","role","hidden","textAlign","startIcon","DailyActionsAdvancedReportContainer","setMetadata","setData","setLoading","setError","metadataLoading","setMetadataLoading","metadataError","setMetadataError","useNavigate","fetchMetadata","async","FEATURES","USE_MOCK_DATA_FOR_UI_TESTING","localStorage","getItem","console","log","mockDataModule","mockMetadata","getMockData","response","dailyActionsService","getMetadata","err","message","Container","maxWidth","DailyActionsAdvancedReport","apiFilters","mockData","getFilteredData","exportFormat","blob","Blob","JSON","stringify","fileName","saveAs","exportFilteredReport","DailyActionsAdvancedPage","Helmet","Breadcrumbs","Link","RouterLink","to","paragraph","b","a","autoBom","warn","test","c","XMLHttpRequest","responseType","onload","g","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module"],"sourceRoot":""}