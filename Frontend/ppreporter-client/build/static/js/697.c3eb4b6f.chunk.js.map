{"version":3,"file":"static/js/697.c3eb4b6f.chunk.js","mappings":"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","sources":["pages/auth/ForgotPasswordPage.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/icons-material/Email.js","../node_modules/@mui/system/esm/styled.js"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  Alert,\n  Link,\n  CircularProgress,\n  InputAdornment\n} from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { useAuth } from '../../hooks/useAuth';\nimport { PasswordResetRequest } from '../../types/auth';\n\n/**\n * Forgot password page component\n */\nconst ForgotPasswordPage: React.FC = () => {\n  const { forgotPassword } = useAuth();\n  const [email, setEmail] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n\n  /**\n   * Handle form submission\n   * @param e - Form event\n   */\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const resetRequest: PasswordResetRequest = { email };\n      await forgotPassword(resetRequest);\n      setSuccess(true);\n    } catch (err) {\n      console.error('Password reset request error:', err);\n      const error = err as Error;\n      setError(error.message || 'Failed to send password reset email. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle email input change\n   * @param e - Change event\n   */\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEmail(e.target.value);\n    setError('');\n  };\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"xs\"\n      sx={{\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        py: 4\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            maxWidth: 450,\n            width: '100%',\n            p: 4,\n            borderRadius: 2\n          }}\n        >\n          {success ? (\n            <Box sx={{ textAlign: 'center' }}>\n              <img\n                src=\"/email-sent.png\"\n                alt=\"Email Sent\"\n                style={{ height: 100, width: 'auto', marginBottom: 16 }}\n                onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n              />\n              <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                Check your email\n              </Typography>\n              <Typography variant=\"body1\" sx={{ mb: 3 }}>\n                We've sent password reset instructions to:\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 'bold', mb: 3 }}>\n                {email}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                If you don't see the email in your inbox, please check your spam folder.\n              </Typography>\n              <Button\n                component={RouterLink}\n                to=\"/login\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                Back to Login\n              </Button>\n            </Box>\n          ) : (\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ width: '100%' }}>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <img\n                  src=\"/logo.png\"\n                  alt=\"Logo\"\n                  style={{ height: 60, width: 'auto', marginBottom: 16 }}\n                  onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n                />\n                <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                  Forgot Password\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Enter your email and we'll send you instructions to reset your password\n                </Typography>\n              </Box>\n\n              {/* Error Message */}\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3 }}>\n                  {error}\n                </Alert>\n              )}\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={handleEmailChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <EmailIcon color=\"action\" />\n                    </InputAdornment>\n                  ),\n                }}\n                disabled={loading}\n                sx={{ mb: 3 }}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                sx={{\n                  py: 1.5,\n                  mb: 2\n                }}\n              >\n                {loading ? (\n                  <CircularProgress size={24} color=\"inherit\" />\n                ) : (\n                  'Send Reset Link'\n                )}\n              </Button>\n\n              <Box sx={{ textAlign: 'center', mt: 2 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\" component=\"span\">\n                  Remember your password?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"body2\"\n                    underline=\"hover\"\n                    sx={{ fontWeight: 'medium' }}\n                  >\n                    Back to Login\n                  </Link>\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ForgotPasswordPage;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;"],"names":["ForgotPasswordPage","forgotPassword","useAuth","email","setEmail","useState","error","setError","loading","setLoading","success","setSuccess","_jsx","Container","component","maxWidth","sx","minHeight","display","flexDirection","justifyContent","py","children","Box","alignItems","Paper","elevation","width","p","borderRadius","_jsxs","textAlign","src","alt","style","height","marginBottom","onError","e","target","Typography","variant","gutterBottom","fontWeight","mb","color","Button","RouterLink","to","fullWidth","mt","onSubmit","async","preventDefault","test","resetRequest","err","console","message","Alert","severity","TextField","margin","required","id","label","name","autoComplete","autoFocus","value","onChange","InputProps","startAdornment","InputAdornment","position","EmailIcon","disabled","type","size","CircularProgress","Link","underline","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","React","ref","className","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createStyled"],"sourceRoot":""}