{"version":3,"file":"static/js/6440.723ada95.chunk.js","mappings":"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","sources":["components/auth/LogoTitleContainer.tsx","components/auth/RegisterForm.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","pages/auth/RegisterPageComponents.tsx","pages/auth/RegisterPage.tsx"],"sourcesContent":["import React from 'react';\nimport { SxProps, Theme } from '@mui/material/styles';\nimport './RegisterForm.css';\n\ninterface ContainerProps {\n  sx?: SxProps<Theme>;\n  children: React.ReactNode;\n}\n\n// Simple wrapper component for logo title to avoid TypeScript complexity\nexport const LogoTitleContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"logo-title-container\" style={sx ? { marginBottom: '8px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for terms and conditions to avoid TypeScript complexity\nexport const TermsContainer: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <div className=\"terms-container\">\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for login link to avoid TypeScript complexity\nexport const LoginLinkContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"login-link-container\" style={sx ? { textAlign: 'center', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for social divider to avoid TypeScript complexity\nexport const SocialDividerContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"social-divider-container\" style={sx ? { display: 'flex', alignItems: 'center', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for social buttons to avoid TypeScript complexity\nexport const SocialButtonsContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"social-buttons-container\" style={sx ? { display: 'flex', gap: '16px', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// For backward compatibility\nexport default LogoTitleContainer;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  IconButton,\n  Link,\n  Alert,\n  CircularProgress,\n  Paper,\n  Divider,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText\n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport PersonIcon from '@mui/icons-material/Person';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport MicrosoftIcon from '@mui/icons-material/Microsoft';\nimport { CommonProps } from '../../types/common';\n\n// Import CSS and custom components\nimport './RegisterForm.css';\nimport {\n  LogoTitleContainer,\n  TermsContainer,\n  LoginLinkContainer,\n  SocialDividerContainer,\n  SocialButtonsContainer\n} from './LogoTitleContainer';\n\ninterface RegisterFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  agreeToTerms: boolean;\n}\n\ninterface RegisterFormErrors {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  agreeToTerms?: string;\n}\n\ninterface RegisterFormProps extends CommonProps {\n  onSubmit?: (data: RegisterFormData) => void;\n  onGoogleRegister?: () => void;\n  onMicrosoftRegister?: () => void;\n  error?: string | null;\n  loading?: boolean;\n  showSocialLogin?: boolean;\n  loginLink?: string;\n  logoUrl?: string;\n}\n\n/**\n * Registration form component for new user sign-up\n */\nconst RegisterForm: React.FC<RegisterFormProps> = ({\n  onSubmit,\n  onGoogleRegister,\n  onMicrosoftRegister,\n  error,\n  loading = false,\n  showSocialLogin = true,\n  loginLink = '/login',\n  logoUrl = '/logo.png',\n  sx\n}) => {\n  const [formData, setFormData] = useState<RegisterFormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agreeToTerms: false\n  });\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\n  const [formErrors, setFormErrors] = useState<RegisterFormErrors>({});\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value, checked, type } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n\n    // Clear validation error when field is edited\n    if (formErrors[name as keyof RegisterFormErrors]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: undefined\n      });\n    }\n  };\n\n  const toggleShowPassword = (): void => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleShowConfirmPassword = (): void => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const validate = (): RegisterFormErrors => {\n    const errors: RegisterFormErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!formData.firstName.trim()) {\n      errors.firstName = 'First name is required';\n    }\n\n    if (!formData.lastName.trim()) {\n      errors.lastName = 'Last name is required';\n    }\n\n    if (!formData.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      errors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      errors.password = 'Password must be at least 8 characters long';\n    }\n\n    if (!formData.confirmPassword) {\n      errors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n\n    if (!formData.agreeToTerms) {\n      errors.agreeToTerms = 'You must agree to the terms and conditions';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    const errors = validate();\n\n    if (Object.keys(errors).length === 0) {\n      if (onSubmit) {\n        onSubmit(formData);\n      }\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const handleGoogleRegister = (): void => {\n    if (onGoogleRegister) {\n      onGoogleRegister();\n    }\n  };\n\n  const handleMicrosoftRegister = (): void => {\n    if (onMicrosoftRegister) {\n      onMicrosoftRegister();\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        maxWidth: 600,\n        width: '100%',\n        p: 3, // Reduced padding from 4 to 3\n        borderRadius: 2,\n        ...sx\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2 // Reduced gap from 3 to 2\n        }}\n      >\n        {/* Logo and Title */}\n        <LogoTitleContainer sx={{ mb: 1 }}> {/* Reduced margin from 2 to 1 */}\n          {logoUrl && logoUrl.trim() !== '' && (\n            <img\n              src={logoUrl}\n              alt=\"Logo\"\n              style={{ height: 60, width: 'auto', marginBottom: 8 }} /* Reduced margin from 16 to 8 */\n              onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n            />\n          )}\n          {/* Title and subtitle removed as requested */}\n        </LogoTitleContainer>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Name Fields */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"First Name\"\n              name=\"firstName\"\n              value={formData.firstName}\n              onChange={handleChange}\n              fullWidth\n              error={!!formErrors.firstName}\n              helperText={formErrors.firstName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n              disabled={loading}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"Last Name\"\n              name=\"lastName\"\n              value={formData.lastName}\n              onChange={handleChange}\n              fullWidth\n              error={!!formErrors.lastName}\n              helperText={formErrors.lastName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n              disabled={loading}\n              required\n            />\n          </Grid>\n        </Grid>\n\n        {/* Email Field */}\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.email}\n          helperText={formErrors.email}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon color=\"action\" />\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Password Field */}\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.password}\n          helperText={formErrors.password || 'Password must be at least 8 characters long'}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={toggleShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Confirm Password Field */}\n        <TextField\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          type={showConfirmPassword ? 'text' : 'password'}\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.confirmPassword}\n          helperText={formErrors.confirmPassword}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle confirm password visibility\"\n                  onClick={toggleShowConfirmPassword}\n                  edge=\"end\"\n                >\n                  {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Terms and Conditions */}\n        <TermsContainer>\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"agreeToTerms\"\n                checked={formData.agreeToTerms}\n                onChange={handleChange}\n                color=\"primary\"\n                disabled={loading}\n              />\n            }\n            label={\n              <Typography variant=\"body2\">\n                I agree to the{' '}\n                <Link href=\"#\" underline=\"hover\" color=\"primary\">\n                  Terms of Service\n                </Link>{' '}\n                and{' '}\n                <Link href=\"#\" underline=\"hover\" color=\"primary\">\n                  Privacy Policy\n                </Link>\n              </Typography>\n            }\n          />\n          {formErrors.agreeToTerms && (\n            <FormHelperText error>{formErrors.agreeToTerms}</FormHelperText>\n          )}\n        </TermsContainer>\n\n        {/* Submit Button */}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          disabled={loading}\n          sx={{ mt: 2 }}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Create Account'}\n        </Button>\n\n        {/* Login Link */}\n        <LoginLinkContainer sx={{ mt: 2 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Already have an account?{' '}\n            <Link\n              component={RouterLink}\n              to={loginLink}\n              color=\"primary\"\n              underline=\"hover\"\n            >\n              Sign in\n            </Link>\n          </Typography>\n        </LoginLinkContainer>\n\n        {/* Social Registration Options */}\n        {showSocialLogin && (\n          <>\n            <SocialDividerContainer sx={{ mt: 2 }}>\n              <Divider sx={{ flex: 1 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mx: 2 }}>\n                or sign up with\n              </Typography>\n              <Divider sx={{ flex: 1 }} />\n            </SocialDividerContainer>\n\n            <SocialButtonsContainer sx={{ mt: 2 }}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<GoogleIcon />}\n                onClick={handleGoogleRegister}\n                disabled={loading}\n              >\n                Google\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<MicrosoftIcon />}\n                onClick={handleMicrosoftRegister}\n                disabled={loading}\n              >\n                Microsoft\n              </Button>\n            </SocialButtonsContainer>\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RegisterForm;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import React from 'react';\nimport { SxProps, Theme } from '@mui/material/styles';\nimport './RegisterPage.css';\n\ninterface ContainerProps {\n  sx?: SxProps<Theme>;\n  children: React.ReactNode;\n}\n\n// Box container component\nexport const BoxContainer: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <div className=\"box-container\">\n      {children}\n    </div>\n  );\n};\n\n// Logo container component\nexport const LogoContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"logo-container\" style={sx ? { marginBottom: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Terms container component\nexport const TermsContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"terms-container\" style={sx ? { marginTop: '16px', padding: '8px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\r\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Alert\r\n} from '@mui/material';\r\nimport RegisterForm from '../../components/auth/RegisterForm';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { RegistrationData } from '../../types/auth';\r\n\r\n// Import CSS and custom components for RegisterPage\r\nimport './RegisterPage.css';\r\nimport { BoxContainer, LogoContainer, TermsContainer } from './RegisterPageComponents';\r\n\r\n// Define RegisterFormData interface to match the component's expected props\r\ninterface RegisterFormData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  agreeToTerms: boolean;\r\n}\r\n\r\n/**\r\n * Registration page component\r\n */\r\nconst RegisterPage: React.FC = () => {\r\n  const { register, loginWithGoogle, loginWithMicrosoft } = useAuth();\r\n  const [error, setError] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const navigate: NavigateFunction = useNavigate();\r\n\r\n  /**\r\n   * Handle registration form submission\r\n   * @param formData - Registration form data\r\n   */\r\n  const handleRegister = async (formData: RegisterFormData): Promise<void> => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await register({\r\n        username: formData.email.split('@')[0], // Generate username from email\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        confirmPassword: formData.confirmPassword,\r\n        acceptTerms: formData.agreeToTerms\r\n      });\r\n\r\n      // Navigate to login page upon successful registration\r\n      navigate('/login', {\r\n        state: {\r\n          message: 'Registration successful! Please log in with your new account.'\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      const error = err as Error;\r\n      setError(error.message || 'Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle Google OAuth registration\r\n   */\r\n  const handleGoogleRegister = async (): Promise<void> => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      await loginWithGoogle();\r\n      // Navigate to dashboard upon successful registration\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error('Google registration error:', err);\r\n      const error = err as Error;\r\n      setError(error.message || 'Google sign up failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle Microsoft OAuth registration\r\n   */\r\n  const handleMicrosoftRegister = async (): Promise<void> => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      await loginWithMicrosoft();\r\n      // Navigate to dashboard upon successful registration\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error('Microsoft registration error:', err);\r\n      const error = err as Error;\r\n      setError(error.message || 'Microsoft sign up failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"sm\"\r\n      // Use inline sx prop with direct object\r\n      sx={{\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        py: 2 // Reduced padding from 4 to 2\r\n      }}\r\n    >\r\n      <BoxContainer>\r\n        {/* Logo */}\r\n        <LogoContainer sx={{ mb: 2 }}> {/* Reduced from 6 to 2 to bring form closer to logo */}\r\n          <img\r\n            src=\"/assets/preplogo.png\"\r\n            alt=\"PPrePorter Logo\"\r\n            style={{\r\n              height: 500, // Increased from 400 to 500\r\n              width: 'auto',\r\n              pointerEvents: 'none', // Prevent cursor changes on click\r\n            }}\r\n            onError={(e) => {\r\n              console.error('Failed to load logo from /assets/preplogo.png');\r\n              (e.target as HTMLImageElement).src = '/logo.png'; // Fallback to default logo\r\n            }}\r\n            draggable=\"false\" // Prevent dragging\r\n          />\r\n        </LogoContainer>\r\n\r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Alert\r\n            severity=\"error\"\r\n            style={{ width: '100%' }}\r\n            sx={{ mb: 3 }}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <RegisterForm\r\n          onSubmit={handleRegister}\r\n          onGoogleRegister={handleGoogleRegister}\r\n          onMicrosoftRegister={handleMicrosoftRegister}\r\n          logoUrl=\"\" // We're showing the logo above the form\r\n          error={error}\r\n          loading={loading}\r\n          showSocialLogin={true}\r\n          loginLink=\"/login\"\r\n        />\r\n\r\n        {/* Terms & Support Section */}\r\n        <TermsContainer\r\n          sx={{\r\n            mt: 2, // Reduced from 4 to 2\r\n            p: 1 // Reduced from 2 to 1\r\n          }}\r\n        >\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            By creating an account, you agree to our{' '}\r\n            <a href=\"/terms\">Terms of Service</a> and{' '}\r\n            <a href=\"/privacy\">Privacy Policy</a>.\r\n            {' '}Need help? <a href=\"/support\">Contact Support</a>\r\n          </Typography>\r\n        </TermsContainer>\r\n      </BoxContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["LogoTitleContainer","_ref","children","sx","_jsx","className","style","marginBottom","undefined","TermsContainer","_ref2","LoginLinkContainer","_ref3","textAlign","marginTop","SocialDividerContainer","_ref4","display","alignItems","SocialButtonsContainer","_ref5","gap","onSubmit","onGoogleRegister","onMicrosoftRegister","error","loading","showSocialLogin","loginLink","logoUrl","formData","setFormData","useState","firstName","lastName","email","password","confirmPassword","agreeToTerms","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","formErrors","setFormErrors","handleChange","e","name","value","checked","type","target","Paper","elevation","maxWidth","width","p","borderRadius","_jsxs","Box","component","preventDefault","errors","validate","trim","test","length","Object","keys","flexDirection","mb","src","alt","height","onError","Alert","severity","Grid","container","spacing","item","xs","sm","TextField","label","onChange","fullWidth","helperText","InputProps","startAdornment","InputAdornment","position","PersonIcon","color","disabled","required","EmailIcon","LockIcon","endAdornment","IconButton","onClick","toggleShowPassword","edge","VisibilityOff","Visibility","toggleShowConfirmPassword","FormControlLabel","control","Checkbox","Typography","variant","Link","href","underline","FormHelperText","Button","size","mt","CircularProgress","RouterLink","to","_Fragment","Divider","flex","mx","startIcon","GoogleIcon","handleGoogleRegister","MicrosoftIcon","handleMicrosoftRegister","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx","BoxContainer","LogoContainer","padding","RegisterPage","register","loginWithGoogle","loginWithMicrosoft","useAuth","setError","setLoading","navigate","useNavigate","Container","justifyContent","py","console","draggable","RegisterForm","async","username","split","acceptTerms","state","message","err"],"sourceRoot":""}