{"version":3,"file":"static/js/697.946d87ba.chunk.js","mappings":"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","sources":["pages/auth/ForgotPasswordPage.tsx","../node_modules/@mui/icons-material/Email.js"],"sourcesContent":["import React, { useState, FormEvent, ChangeEvent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  Alert,\n  Link,\n  CircularProgress,\n  InputAdornment\n} from '@mui/material';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { useAuth } from '../../hooks/useAuth';\nimport { PasswordResetRequest } from '../../types/auth';\n\n/**\n * Forgot password page component\n */\nconst ForgotPasswordPage: React.FC = () => {\n  const { forgotPassword } = useAuth();\n  const [email, setEmail] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [success, setSuccess] = useState<boolean>(false);\n\n  /**\n   * Handle form submission\n   * @param e - Form event\n   */\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const resetRequest: PasswordResetRequest = { email };\n      await forgotPassword(resetRequest);\n      setSuccess(true);\n    } catch (err) {\n      console.error('Password reset request error:', err);\n      const error = err as Error;\n      setError(error.message || 'Failed to send password reset email. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle email input change\n   * @param e - Change event\n   */\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEmail(e.target.value);\n    setError('');\n  };\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"xs\"\n      sx={{\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        py: 4\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            maxWidth: 450,\n            width: '100%',\n            p: 4,\n            borderRadius: 2\n          }}\n        >\n          {success ? (\n            <Box sx={{ textAlign: 'center' }}>\n              <img\n                src=\"/email-sent.png\"\n                alt=\"Email Sent\"\n                style={{ height: 100, width: 'auto', marginBottom: 16 }}\n                onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n              />\n              <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                Check your email\n              </Typography>\n              <Typography variant=\"body1\" sx={{ mb: 3 }}>\n                We've sent password reset instructions to:\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 'bold', mb: 3 }}>\n                {email}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                If you don't see the email in your inbox, please check your spam folder.\n              </Typography>\n              <Button\n                component={RouterLink}\n                to=\"/login\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                Back to Login\n              </Button>\n            </Box>\n          ) : (\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ width: '100%' }}>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <img\n                  src=\"/logo.png\"\n                  alt=\"Logo\"\n                  style={{ height: 60, width: 'auto', marginBottom: 16 }}\n                  onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n                />\n                <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n                  Forgot Password\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Enter your email and we'll send you instructions to reset your password\n                </Typography>\n              </Box>\n\n              {/* Error Message */}\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3 }}>\n                  {error}\n                </Alert>\n              )}\n\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={handleEmailChange}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <EmailIcon color=\"action\" />\n                    </InputAdornment>\n                  ),\n                }}\n                disabled={loading}\n                sx={{ mb: 3 }}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                sx={{\n                  py: 1.5,\n                  mb: 2\n                }}\n              >\n                {loading ? (\n                  <CircularProgress size={24} color=\"inherit\" />\n                ) : (\n                  'Send Reset Link'\n                )}\n              </Button>\n\n              <Box sx={{ textAlign: 'center', mt: 2 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\" component=\"span\">\n                  Remember your password?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"body2\"\n                    underline=\"hover\"\n                    sx={{ fontWeight: 'medium' }}\n                  >\n                    Back to Login\n                  </Link>\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ForgotPasswordPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');"],"names":["ForgotPasswordPage","forgotPassword","useAuth","email","setEmail","useState","error","setError","loading","setLoading","success","setSuccess","_jsx","Container","component","maxWidth","sx","minHeight","display","flexDirection","justifyContent","py","children","Box","alignItems","Paper","elevation","width","p","borderRadius","_jsxs","textAlign","src","alt","style","height","marginBottom","onError","e","target","Typography","variant","gutterBottom","fontWeight","mb","color","Button","RouterLink","to","fullWidth","mt","onSubmit","async","preventDefault","test","resetRequest","err","console","message","Alert","severity","TextField","margin","required","id","label","name","autoComplete","autoFocus","value","onChange","InputProps","startAdornment","InputAdornment","position","EmailIcon","disabled","type","size","CircularProgress","Link","underline","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}