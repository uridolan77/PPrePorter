{"version":3,"file":"static/js/748.903aa7b7.chunk.js","mappings":"sQA0BA,MAiJA,EAjJ+BA,KAC7B,MAAM,SAAEC,EAAQ,gBAAEC,EAAe,mBAAEC,IAAuBC,EAAAA,EAAAA,MACnDC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,GAC1CG,GAA6BC,EAAAA,EAAAA,MA0EnC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,UAAW,QACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,GAAI,GACJC,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFR,GAAI,CACFE,QAAS,OACTC,cAAe,SACfM,WAAY,UACZH,SAAA,CAGDjB,IACCO,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACJC,SAAS,QACTX,GAAI,CACFY,MAAO,OACPC,GAAI,GACJP,SAEDjB,KAILO,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,CACXC,SArGeC,UACrBvB,GAAW,GACXH,EAAS,IAET,UACQL,EAAS,CACbgC,SAAUC,EAASC,MAAMC,MAAM,KAAK,GACpCC,UAAWH,EAASG,UACpBC,SAAUJ,EAASI,SACnBH,MAAOD,EAASC,MAChBI,SAAUL,EAASK,SACnBC,gBAAiBN,EAASM,gBAC1BC,YAAaP,EAASQ,eAIxBhC,EAAS,SAAU,CACjBiC,MAAO,CACLC,QAAS,kEAGf,CAAE,MAAOC,GACPC,QAAQzC,MAAM,sBAAuBwC,GAErCvC,EADcuC,EACCD,SAAW,yCAC5B,CAAC,QACCnC,GAAW,EACb,GA2EMsC,iBArEqBf,UAC3BvB,GAAW,GACXH,EAAS,IACT,UACQJ,IAENQ,EAAS,aACX,CAAE,MAAOmC,GACPC,QAAQzC,MAAM,6BAA8BwC,GAE5CvC,EADcuC,EACCD,SAAW,2CAC5B,CAAC,QACCnC,GAAW,EACb,GAyDMuC,oBAnDwBhB,UAC9BvB,GAAW,GACXH,EAAS,IACT,UACQH,IAENO,EAAS,aACX,CAAE,MAAOmC,GACPC,QAAQzC,MAAM,gCAAiCwC,GAE/CvC,EADcuC,EACCD,SAAW,8CAC5B,CAAC,QACCnC,GAAW,EACb,GAuCMwC,QAAQ,YACR5C,MAAOA,EACPG,QAASA,EACT0C,iBAAiB,EACjBC,UAAU,YAIZ5B,EAAAA,EAAAA,MAAC6B,EAAAA,EAAK,CACJC,UAAW,EACXrC,GAAI,CACFsC,GAAI,EACJC,EAAG,EACHC,UAAW,SACXC,gBAAiB,eACjBnC,SAAA,EAEFC,EAAAA,EAAAA,MAACmC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBtC,SAAA,CAAC,2CACR,KACzCV,EAAAA,EAAAA,KAAA,KAAGiD,KAAK,SAAQvC,SAAC,qBAAoB,OAAK,KAC1CV,EAAAA,EAAAA,KAAA,KAAGiD,KAAK,WAAUvC,SAAC,mBAAkB,QAEvCC,EAAAA,EAAAA,MAACmC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiB5C,GAAI,CAAEsC,GAAI,GAAIhC,SAAA,CAAC,eACrDV,EAAAA,EAAAA,KAAA,KAAGiD,KAAK,WAAUvC,SAAC,8BAI1B,C","sources":["pages/auth/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, NavigateFunction } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  Paper,\n  Alert\n} from '@mui/material';\nimport RegisterForm from '../../components/auth/RegisterForm';\nimport { useAuth } from '../../hooks/useAuth';\nimport { RegistrationData } from '../../types/auth';\n\n// Define RegisterFormData interface to match the component's expected props\ninterface RegisterFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  agreeToTerms: boolean;\n}\n\n/**\n * Registration page component\n */\nconst RegisterPage: React.FC = () => {\n  const { register, loginWithGoogle, loginWithMicrosoft } = useAuth();\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate: NavigateFunction = useNavigate();\n\n  /**\n   * Handle registration form submission\n   * @param formData - Registration form data\n   */\n  const handleRegister = async (formData: RegisterFormData): Promise<void> => {\n    setLoading(true);\n    setError('');\n\n    try {\n      await register({\n        username: formData.email.split('@')[0], // Generate username from email\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password,\n        confirmPassword: formData.confirmPassword,\n        acceptTerms: formData.agreeToTerms\n      });\n\n      // Navigate to login page upon successful registration\n      navigate('/login', {\n        state: {\n          message: 'Registration successful! Please log in with your new account.'\n        }\n      });\n    } catch (err) {\n      console.error('Registration error:', err);\n      const error = err as Error;\n      setError(error.message || 'Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle Google OAuth registration\n   */\n  const handleGoogleRegister = async (): Promise<void> => {\n    setLoading(true);\n    setError('');\n    try {\n      await loginWithGoogle();\n      // Navigate to dashboard upon successful registration\n      navigate('/dashboard');\n    } catch (err) {\n      console.error('Google registration error:', err);\n      const error = err as Error;\n      setError(error.message || 'Google sign up failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Handle Microsoft OAuth registration\n   */\n  const handleMicrosoftRegister = async (): Promise<void> => {\n    setLoading(true);\n    setError('');\n    try {\n      await loginWithMicrosoft();\n      // Navigate to dashboard upon successful registration\n      navigate('/dashboard');\n    } catch (err) {\n      console.error('Microsoft registration error:', err);\n      const error = err as Error;\n      setError(error.message || 'Microsoft sign up failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"sm\"\n      sx={{\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        py: 4\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        {/* Error Alert */}\n        {error && (\n          <Alert\n            severity=\"error\"\n            sx={{\n              width: '100%',\n              mb: 3\n            }}\n          >\n            {error}\n          </Alert>\n        )}\n\n        <RegisterForm\n          onSubmit={handleRegister}\n          onGoogleRegister={handleGoogleRegister}\n          onMicrosoftRegister={handleMicrosoftRegister}\n          logoUrl=\"/logo.png\"\n          error={error}\n          loading={loading}\n          showSocialLogin={true}\n          loginLink=\"/login\"\n        />\n\n        {/* Terms & Support Section */}\n        <Paper\n          elevation={0}\n          sx={{\n            mt: 4,\n            p: 2,\n            textAlign: 'center',\n            backgroundColor: 'transparent'\n          }}\n        >\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            By creating an account, you agree to our{' '}\n            <a href=\"/terms\">Terms of Service</a> and{' '}\n            <a href=\"/privacy\">Privacy Policy</a>.\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            Need help? <a href=\"/support\">Contact Support</a>\n          </Typography>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterPage","register","loginWithGoogle","loginWithMicrosoft","useAuth","error","setError","useState","loading","setLoading","navigate","useNavigate","_jsx","Container","component","maxWidth","sx","minHeight","display","flexDirection","justifyContent","py","children","_jsxs","Box","alignItems","Alert","severity","width","mb","RegisterForm","onSubmit","async","username","formData","email","split","firstName","lastName","password","confirmPassword","acceptTerms","agreeToTerms","state","message","err","console","onGoogleRegister","onMicrosoftRegister","logoUrl","showSocialLogin","loginLink","Paper","elevation","mt","p","textAlign","backgroundColor","Typography","variant","color","href"],"sourceRoot":""}