{"version":3,"file":"static/js/942.79537a5d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/Close.js","services/api/dailyActionGamesService.ts","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js","store/slices/dailyActionGamesSlice.ts","pages/reports/DailyActionGamesPage.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import apiClient from './apiClient';\nimport { DailyActionGamesResponse, DailyActionGame } from '../../types/reports';\n// Import from TypeScript version of constants\nimport { API_ENDPOINTS } from '../../config/constants';\n\n// Fallback endpoint in case the import structure is different\nconst DAILY_ACTION_GAMES_ENDPOINT = '/api/reports/daily-action-games';\n\n/**\n * Query parameters for daily action games\n */\nexport interface DailyActionGamesQueryParams {\n  /**\n   * Start date (YYYY-MM-DD)\n   */\n  startDate?: string;\n\n  /**\n   * End date (YYYY-MM-DD)\n   */\n  endDate?: string;\n\n  /**\n   * Player ID\n   */\n  playerId?: number;\n\n  /**\n   * Game ID\n   */\n  gameId?: number;\n\n  /**\n   * API version\n   */\n  'api-version'?: string;\n}\n\n/**\n * Service for Daily Action Games API integration\n */\nclass DailyActionGamesService {\n  /**\n   * Get daily action games data\n   * @param params Query parameters\n   * @returns Promise with daily action games data\n   */\n  async getData(params: DailyActionGamesQueryParams = {}): Promise<DailyActionGamesResponse> {\n    try {\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Fetching data with params:', params);\n\n      // Try to get the endpoint from the TypeScript structure, fall back to direct path if not available\n      let endpoint;\n      try {\n        // Check if the nested structure exists\n        if (API_ENDPOINTS.REPORTS && API_ENDPOINTS.REPORTS.DAILY_ACTION_GAMES) {\n          endpoint = API_ENDPOINTS.REPORTS.DAILY_ACTION_GAMES + '/data';\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using TypeScript structure endpoint');\n        } else if ((API_ENDPOINTS as any).DAILY_ACTION_GAMES) {\n          // Try the JavaScript structure\n          endpoint = (API_ENDPOINTS as any).DAILY_ACTION_GAMES.GET_DATA;\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using JavaScript structure endpoint');\n        } else {\n          // Fall back to hardcoded endpoint\n          endpoint = DAILY_ACTION_GAMES_ENDPOINT + '/data';\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using fallback endpoint');\n        }\n      } catch (error) {\n        // If any error occurs during endpoint resolution, use the fallback\n        console.error('[DAILY_ACTION_GAMES_SERVICE] Error resolving endpoint:', error);\n        endpoint = DAILY_ACTION_GAMES_ENDPOINT + '/data';\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Using fallback endpoint after error');\n      }\n\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Using API endpoint:', endpoint);\n      const response = await apiClient.get<any>(\n        endpoint,\n        { params }\n      );\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Raw response data:', response.data);\n\n      // Based on the screenshot, the response appears to be an array of objects with properties like\n      // id, gameDate, playerId, gameId, platform, etc.\n\n      // Check if the response has the expected structure\n      if (response.data && Array.isArray(response.data)) {\n        // If the response is an array, wrap it in the expected structure\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Converting array response to expected format');\n\n        // Map the response data to our expected format\n        const mappedData = response.data.map((item: any, index: number) => {\n          // Create a game object with default values\n          const game: DailyActionGame = {\n            id: item.id || index + 1,\n            gameDate: item.gameDate || new Date().toISOString(),\n            playerId: typeof item.playerId === 'number' ? item.playerId : 0,\n            gameId: typeof item.gameId === 'number' ? item.gameId : 0,\n            platform: item.platform || 'Unknown',\n            realBetAmount: typeof item.realBetAmount === 'number' ? item.realBetAmount : 0,\n            realWinAmount: typeof item.realWinAmount === 'number' ? item.realWinAmount : 0,\n            bonusBetAmount: typeof item.bonusBetAmount === 'number' ? item.bonusBetAmount : 0,\n            bonusWinAmount: typeof item.bonusWinAmount === 'number' ? item.bonusWinAmount : 0,\n            netGamingRevenue: typeof item.netGamingRevenue === 'number' ? item.netGamingRevenue : 0,\n            numberOfRealBets: typeof item.numberOfRealBets === 'number' ? item.numberOfRealBets : 0,\n            numberOfBonusBets: typeof item.numberOfBonusBets === 'number' ? item.numberOfBonusBets : 0,\n            numberOfSessions: typeof item.numberOfSessions === 'number' ? item.numberOfSessions : 0,\n            numberOfRealWins: typeof item.numberOfRealWins === 'number' ? item.numberOfRealWins : 0,\n            numberOfBonusWins: typeof item.numberOfBonusWins === 'number' ? item.numberOfBonusWins : 0,\n            realBetAmountOriginal: typeof item.realBetAmountOriginal === 'number' ? item.realBetAmountOriginal : 0,\n            realWinAmountOriginal: typeof item.realWinAmountOriginal === 'number' ? item.realWinAmountOriginal : 0,\n            bonusBetAmountOriginal: typeof item.bonusBetAmountOriginal === 'number' ? item.bonusBetAmountOriginal : 0,\n            bonusWinAmountOriginal: typeof item.bonusWinAmountOriginal === 'number' ? item.bonusWinAmountOriginal : 0,\n            netGamingRevenueOriginal: typeof item.netGamingRevenueOriginal === 'number' ? item.netGamingRevenueOriginal : 0,\n            updateDate: item.updateDate || new Date().toISOString()\n          };\n\n          console.log(`[DAILY_ACTION_GAMES_SERVICE] Mapped game ${index}:`, game);\n          return game;\n        });\n\n        const formattedResponse: DailyActionGamesResponse = {\n          data: mappedData,\n          totalCount: mappedData.length,\n          startDate: params.startDate || new Date().toISOString().split('T')[0],\n          endDate: params.endDate || new Date().toISOString().split('T')[0]\n        };\n\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Formatted response:', formattedResponse);\n        return formattedResponse;\n      } else if (response.data && response.data.data && Array.isArray(response.data.data)) {\n        // If the response already has the expected structure\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Response already in expected format');\n        return response.data as DailyActionGamesResponse;\n      } else if (response.data && typeof response.data === 'object') {\n        // If the response is an object but not in the expected format,\n        // try to extract data from it\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Response is an object, trying to extract data');\n\n        // Create an array from the object values if possible\n        const extractedData = Object.values(response.data).filter(item => item && typeof item === 'object');\n\n        if (extractedData.length > 0) {\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Extracted data from object:', extractedData);\n\n          // Map the extracted data to our expected format\n          const mappedData = extractedData.map((item: any, index: number) => {\n            // Create a game object with default values\n            const game: DailyActionGame = {\n              id: item.id || index + 1,\n              gameDate: item.gameDate || new Date().toISOString(),\n              playerId: typeof item.playerId === 'number' ? item.playerId : 0,\n              gameId: typeof item.gameId === 'number' ? item.gameId : 0,\n              platform: item.platform || 'Unknown',\n              realBetAmount: typeof item.realBetAmount === 'number' ? item.realBetAmount : 0,\n              realWinAmount: typeof item.realWinAmount === 'number' ? item.realWinAmount : 0,\n              bonusBetAmount: typeof item.bonusBetAmount === 'number' ? item.bonusBetAmount : 0,\n              bonusWinAmount: typeof item.bonusWinAmount === 'number' ? item.bonusWinAmount : 0,\n              netGamingRevenue: typeof item.netGamingRevenue === 'number' ? item.netGamingRevenue : 0,\n              numberOfRealBets: typeof item.numberOfRealBets === 'number' ? item.numberOfRealBets : 0,\n              numberOfBonusBets: typeof item.numberOfBonusBets === 'number' ? item.numberOfBonusBets : 0,\n              numberOfSessions: typeof item.numberOfSessions === 'number' ? item.numberOfSessions : 0,\n              numberOfRealWins: typeof item.numberOfRealWins === 'number' ? item.numberOfRealWins : 0,\n              numberOfBonusWins: typeof item.numberOfBonusWins === 'number' ? item.numberOfBonusWins : 0,\n              realBetAmountOriginal: typeof item.realBetAmountOriginal === 'number' ? item.realBetAmountOriginal : 0,\n              realWinAmountOriginal: typeof item.realWinAmountOriginal === 'number' ? item.realWinAmountOriginal : 0,\n              bonusBetAmountOriginal: typeof item.bonusBetAmountOriginal === 'number' ? item.bonusBetAmountOriginal : 0,\n              bonusWinAmountOriginal: typeof item.bonusWinAmountOriginal === 'number' ? item.bonusWinAmountOriginal : 0,\n              netGamingRevenueOriginal: typeof item.netGamingRevenueOriginal === 'number' ? item.netGamingRevenueOriginal : 0,\n              updateDate: item.updateDate || new Date().toISOString()\n            };\n\n            return game;\n          });\n\n          const formattedResponse: DailyActionGamesResponse = {\n            data: mappedData,\n            totalCount: mappedData.length,\n            startDate: params.startDate || new Date().toISOString().split('T')[0],\n            endDate: params.endDate || new Date().toISOString().split('T')[0]\n          };\n\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Formatted response from extracted data:', formattedResponse);\n          return formattedResponse;\n        }\n      }\n\n      // If we couldn't extract data in any way, return an empty response\n      console.warn('[DAILY_ACTION_GAMES_SERVICE] Unexpected response format, returning empty data');\n      return {\n        data: [],\n        totalCount: 0,\n        startDate: params.startDate || new Date().toISOString().split('T')[0],\n        endDate: params.endDate || new Date().toISOString().split('T')[0]\n      };\n    } catch (error) {\n      console.error('[DAILY_ACTION_GAMES_SERVICE] Error fetching data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Export daily action games data\n   * @param params Query parameters\n   * @param format Export format (csv, excel, pdf)\n   * @returns Promise with blob data\n   */\n  async exportData(\n    params: DailyActionGamesQueryParams = {},\n    format: 'csv' | 'excel' | 'pdf' = 'csv'\n  ): Promise<Blob> {\n    try {\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Exporting data with params:', { ...params, format });\n\n      const exportParams = {\n        ...params,\n        format\n      };\n\n      // Try to get the endpoint from the TypeScript structure, fall back to direct path if not available\n      let endpoint;\n      try {\n        // Check if the nested structure exists\n        if (API_ENDPOINTS.REPORTS && API_ENDPOINTS.REPORTS.DAILY_ACTION_GAMES) {\n          endpoint = API_ENDPOINTS.REPORTS.DAILY_ACTION_GAMES + '/export';\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using TypeScript structure endpoint for export');\n        } else if ((API_ENDPOINTS as any).DAILY_ACTION_GAMES) {\n          // Try the JavaScript structure\n          endpoint = (API_ENDPOINTS as any).DAILY_ACTION_GAMES.EXPORT;\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using JavaScript structure endpoint for export');\n        } else {\n          // Fall back to hardcoded endpoint\n          endpoint = DAILY_ACTION_GAMES_ENDPOINT + '/export';\n          console.log('[DAILY_ACTION_GAMES_SERVICE] Using fallback endpoint for export');\n        }\n      } catch (error) {\n        // If any error occurs during endpoint resolution, use the fallback\n        console.error('[DAILY_ACTION_GAMES_SERVICE] Error resolving export endpoint:', error);\n        endpoint = DAILY_ACTION_GAMES_ENDPOINT + '/export';\n        console.log('[DAILY_ACTION_GAMES_SERVICE] Using fallback endpoint for export after error');\n      }\n\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Using API endpoint for export:', endpoint);\n      const response = await apiClient.get(endpoint, {\n        params: exportParams,\n        responseType: 'blob'\n      });\n\n      console.log('[DAILY_ACTION_GAMES_SERVICE] Export response received');\n      return response.data;\n    } catch (error) {\n      console.error('[DAILY_ACTION_GAMES_SERVICE] Error exporting data:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new DailyActionGamesService();\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useSlot from '../utils/useSlot';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(([, value]) => value.main && value.light).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(([, value]) => value.main && value.dark).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: _extends({\n        fontWeight: theme.typography.fontWeightMedium\n      }, theme.vars ? {\n        color: theme.vars.palette.Alert[`${color}FilledColor`],\n        backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n      } : {\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n        color: theme.palette.getContrastText(theme.palette[color].main)\n      })\n    }))]\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: _extends({\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon\n    }, slots),\n    slotProps: _extends({}, componentsProps, slotProps)\n  };\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(CloseIconSlot, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { AxiosError } from 'axios';\nimport dailyActionGamesService, { DailyActionGamesQueryParams } from '../../services/api/dailyActionGamesService';\nimport { DailyActionGame, DailyActionGamesResponse } from '../../types/reports';\nimport { RootState } from '../../types/redux';\n\n// Define the state interface\nexport interface DailyActionGamesState {\n  data: DailyActionGame[];\n  totalCount: number;\n  startDate: string | null;\n  endDate: string | null;\n  loading: boolean;\n  error: string | null;\n  filters: DailyActionGamesQueryParams;\n}\n\n// Initial state\nconst initialState: DailyActionGamesState = {\n  data: [],\n  totalCount: 0,\n  startDate: null,\n  endDate: null,\n  loading: false,\n  error: null,\n  filters: {\n    startDate: new Date(new Date().setDate(new Date().getDate() - 1)).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0]\n  }\n};\n\n// Async thunk for fetching daily action games data\nexport const fetchDailyActionGames = createAsyncThunk<\n  DailyActionGamesResponse,\n  DailyActionGamesQueryParams | undefined,\n  { rejectValue: string }\n>(\n  'dailyActionGames/fetchData',\n  async (params = {}, { rejectWithValue }) => {\n    try {\n      // Use default filters if no params provided\n      const queryParams = {\n        ...params\n      };\n\n      const response = await dailyActionGamesService.getData(queryParams);\n      return response;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n      return rejectWithValue(\n        axiosError.message || 'Failed to fetch daily action games data'\n      );\n    }\n  }\n);\n\n// Create the slice\nconst dailyActionGamesSlice = createSlice({\n  name: 'dailyActionGames',\n  initialState,\n  reducers: {\n    setFilters: (state, action: PayloadAction<DailyActionGamesQueryParams>) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    clearFilters: (state) => {\n      state.filters = {\n        startDate: new Date(new Date().setDate(new Date().getDate() - 1)).toISOString().split('T')[0],\n        endDate: new Date().toISOString().split('T')[0]\n      };\n    },\n    clearError: (state) => {\n      state.error = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      // fetchDailyActionGames\n      .addCase(fetchDailyActionGames.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchDailyActionGames.fulfilled, (state, action) => {\n        console.log('Daily Action Games API Response:', action.payload);\n        state.loading = false;\n\n        // Ensure we have valid data\n        if (action.payload && action.payload.data) {\n          // If the response has the expected structure with a data property\n          state.data = action.payload.data;\n          state.totalCount = action.payload.totalCount || action.payload.data.length;\n          state.startDate = action.payload.startDate || null;\n          state.endDate = action.payload.endDate || null;\n          console.log('Daily Action Games Data processed from payload.data:', state.data);\n        } else if (action.payload && Array.isArray(action.payload)) {\n          // If the response is an array directly\n          state.data = action.payload;\n          state.totalCount = action.payload.length;\n          state.startDate = null;\n          state.endDate = null;\n          console.log('Daily Action Games Data processed from array payload:', state.data);\n        } else {\n          console.warn('Invalid data format received from API');\n          state.data = [];\n          state.totalCount = 0;\n        }\n      })\n      .addCase(fetchDailyActionGames.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload || 'Failed to fetch daily action games data';\n      });\n  }\n});\n\n// Export actions\nexport const { setFilters, clearFilters, clearError } = dailyActionGamesSlice.actions;\n\n// Export selectors\nexport const selectDailyActionGames = (state: RootState) => state.dailyActionGames?.data || [];\nexport const selectDailyActionGamesLoading = (state: RootState) => state.dailyActionGames?.loading || false;\nexport const selectDailyActionGamesError = (state: RootState) => state.dailyActionGames?.error || null;\nexport const selectDailyActionGamesFilters = (state: RootState) => state.dailyActionGames?.filters || {};\nexport const selectDailyActionGamesTotalCount = (state: RootState) => state.dailyActionGames?.totalCount || 0;\nexport const selectDailyActionGamesDateRange = (state: RootState) => ({\n  startDate: state.dailyActionGames?.startDate || null,\n  endDate: state.dailyActionGames?.endDate || null\n});\n\n// Export reducer\nexport default dailyActionGamesSlice.reducer;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Grid,\n  Button,\n  Alert,\n  Card,\n  CardContent,\n  TextField\n} from '@mui/material';\nimport SimpleBox from '../../components/common/SimpleBox';\nimport { EnhancedTable } from '../../components/tables/enhanced';\nimport { ColumnDef, ExportFormat } from '../../components/tables/enhanced/types';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format as formatDate, parseISO } from 'date-fns';\n\n// Import icons\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TableChartIcon from '@mui/icons-material/TableChart';\n\n// Import Redux actions and selectors\nimport {\n  fetchDailyActionGames,\n  setFilters,\n  selectDailyActionGames,\n  selectDailyActionGamesLoading,\n  selectDailyActionGamesError,\n  selectDailyActionGamesFilters,\n  selectDailyActionGamesTotalCount\n} from '../../store/slices/dailyActionGamesSlice';\nimport { AppDispatch } from '../../store/store';\nimport { DailyActionGame } from '../../types/reports';\n\n/**\n * DailyActionGamesPage component\n * Displays a comprehensive report of daily action games data\n */\nconst DailyActionGamesPage: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  // Redux state\n  const games = useSelector(selectDailyActionGames);\n  const loading = useSelector(selectDailyActionGamesLoading);\n  const error = useSelector(selectDailyActionGamesError);\n  const filters = useSelector(selectDailyActionGamesFilters);\n  const totalCount = useSelector(selectDailyActionGamesTotalCount);\n\n  // Local state\n  const [startDate, setStartDate] = useState<Date | null>(\n    filters?.startDate ? parseISO(filters.startDate) : new Date(new Date().setDate(new Date().getDate() - 1))\n  );\n  const [endDate, setEndDate] = useState<Date | null>(\n    filters?.endDate ? parseISO(filters.endDate) : new Date()\n  );\n  const [playerId, setPlayerId] = useState<string>(filters?.playerId?.toString() || '');\n  const [gameId, setGameId] = useState<string>(filters?.gameId?.toString() || '');\n  const [mockDataEnabled, setMockDataEnabled] = useState<boolean>(false);\n  const [localGamesData, setLocalGamesData] = useState<DailyActionGame[]>([]);\n\n  /**\n   * Define table columns - memoized to prevent unnecessary re-renders\n   */\n  const columns = useMemo<ColumnDef[]>(() => [\n    {\n      id: 'gameDate',\n      label: 'Date',\n      format: (value) => formatDate(new Date(value), 'MMM dd, yyyy'),\n      sortable: true,\n      width: 120,\n    },\n    {\n      id: 'gameId',\n      label: 'Game ID',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'playerId',\n      label: 'Player ID',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'platform',\n      label: 'Platform',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'realBetAmount',\n      label: 'Real Bet Amount',\n      type: 'currency',\n      sortable: true,\n      width: 150,\n    },\n    {\n      id: 'realWinAmount',\n      label: 'Real Win Amount',\n      type: 'currency',\n      sortable: true,\n      width: 150,\n    },\n    {\n      id: 'bonusBetAmount',\n      label: 'Bonus Bet Amount',\n      type: 'currency',\n      sortable: true,\n      width: 150,\n    },\n    {\n      id: 'bonusWinAmount',\n      label: 'Bonus Win Amount',\n      type: 'currency',\n      sortable: true,\n      width: 150,\n    },\n    {\n      id: 'netGamingRevenue',\n      label: 'Net Gaming Revenue',\n      type: 'currency',\n      sortable: true,\n      width: 150,\n    },\n    {\n      id: 'numberOfRealBets',\n      label: 'Real Bets',\n      type: 'number',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'numberOfBonusBets',\n      label: 'Bonus Bets',\n      type: 'number',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'numberOfSessions',\n      label: 'Sessions',\n      type: 'number',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'numberOfRealWins',\n      label: 'Real Wins',\n      type: 'number',\n      sortable: true,\n      width: 100,\n    },\n    {\n      id: 'numberOfBonusWins',\n      label: 'Bonus Wins',\n      type: 'number',\n      sortable: true,\n      width: 100,\n    }\n  ], []);\n\n  /**\n   * Helper function to format currency\n   */\n  const formatCurrency = useMemo(() => {\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n\n    return (amount: number): string => formatter.format(amount);\n  }, []);\n\n  /**\n   * Prepare query parameters for API calls\n   */\n  const getQueryParams = useCallback(() => ({\n    startDate: startDate ? formatDate(startDate, 'yyyy-MM-dd') : undefined,\n    endDate: endDate ? formatDate(endDate, 'yyyy-MM-dd') : undefined,\n    playerId: playerId && playerId.trim() !== '' ? parseInt(playerId, 10) : undefined,\n    gameId: gameId && gameId.trim() !== '' ? parseInt(gameId, 10) : undefined\n  }), [startDate, endDate, playerId, gameId]);\n\n  /**\n   * Fetch data with current filters\n   */\n  const fetchData = useCallback(() => {\n    const queryParams = getQueryParams();\n    dispatch(setFilters(queryParams));\n    dispatch(fetchDailyActionGames(queryParams));\n  }, [dispatch, getQueryParams]);\n\n  /**\n   * Handle apply filters\n   */\n  const handleApplyFilters = useCallback(() => {\n    fetchData();\n  }, [fetchData]);\n\n  /**\n   * Handle export\n   */\n  const handleExport = useCallback(async (format: ExportFormat, exportData: any[]): Promise<void> => {\n    try {\n      // Convert format to service format\n      const serviceFormat = format.toLowerCase() as 'csv' | 'excel' | 'pdf';\n      const queryParams = getQueryParams();\n\n      // Import the service\n      const dailyActionGamesService = (await import('../../services/api/dailyActionGamesService')).default;\n\n      // Call the export function\n      const blob = await dailyActionGamesService.exportData(queryParams, serviceFormat);\n\n      // Create a download link\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `daily-action-games-${formatDate(new Date(), 'yyyy-MM-dd')}.${serviceFormat}`;\n      document.body.appendChild(a);\n      a.click();\n\n      // Clean up\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Error exporting data:', error);\n    }\n  }, [getQueryParams]);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  /**\n   * Process games data to ensure it's in the correct format\n   */\n  const processGamesData = useCallback((rawGames: any): DailyActionGame[] => {\n    // Ensure games is an array\n    let gamesArray: DailyActionGame[] = [];\n\n    // If mock data is enabled, use local games data\n    if (mockDataEnabled && localGamesData.length > 0) {\n      gamesArray = localGamesData;\n    } else if (Array.isArray(rawGames)) {\n      // If games is already an array, use it directly\n      gamesArray = rawGames as DailyActionGame[];\n    } else if (rawGames && typeof rawGames === 'object') {\n      // If games is an object, try to extract an array from it\n      const gamesObj = rawGames as Record<string, any>;\n      if (gamesObj.data && Array.isArray(gamesObj.data)) {\n        // If games has a data property that is an array\n        gamesArray = gamesObj.data as DailyActionGame[];\n      } else {\n        // Try to convert the object to an array\n        const extractedArray = Object.values(gamesObj).filter(item => item && typeof item === 'object');\n        if (extractedArray.length > 0) {\n          gamesArray = extractedArray as DailyActionGame[];\n        }\n      }\n    }\n\n    // Transform the data to ensure it matches the expected format\n    return gamesArray.map((game: any, index: number) => ({\n      id: game.id || index + 1,\n      gameDate: game.gameDate || new Date().toISOString(),\n      playerId: typeof game.playerId === 'number' ? game.playerId : 0,\n      gameId: typeof game.gameId === 'number' ? game.gameId : 0,\n      platform: game.platform || 'Unknown',\n      realBetAmount: typeof game.realBetAmount === 'number' ? game.realBetAmount : 0,\n      realWinAmount: typeof game.realWinAmount === 'number' ? game.realWinAmount : 0,\n      bonusBetAmount: typeof game.bonusBetAmount === 'number' ? game.bonusBetAmount : 0,\n      bonusWinAmount: typeof game.bonusWinAmount === 'number' ? game.bonusWinAmount : 0,\n      netGamingRevenue: typeof game.netGamingRevenue === 'number' ? game.netGamingRevenue : 0,\n      numberOfRealBets: typeof game.numberOfRealBets === 'number' ? game.numberOfRealBets : 0,\n      numberOfBonusBets: typeof game.numberOfBonusBets === 'number' ? game.numberOfBonusBets : 0,\n      numberOfSessions: typeof game.numberOfSessions === 'number' ? game.numberOfSessions : 0,\n      numberOfRealWins: typeof game.numberOfRealWins === 'number' ? game.numberOfRealWins : 0,\n      numberOfBonusWins: typeof game.numberOfBonusWins === 'number' ? game.numberOfBonusWins : 0,\n      realBetAmountOriginal: typeof game.realBetAmountOriginal === 'number' ? game.realBetAmountOriginal : 0,\n      realWinAmountOriginal: typeof game.realWinAmountOriginal === 'number' ? game.realWinAmountOriginal : 0,\n      bonusBetAmountOriginal: typeof game.bonusBetAmountOriginal === 'number' ? game.bonusBetAmountOriginal : 0,\n      bonusWinAmountOriginal: typeof game.bonusWinAmountOriginal === 'number' ? game.bonusWinAmountOriginal : 0,\n      netGamingRevenueOriginal: typeof game.netGamingRevenueOriginal === 'number' ? game.netGamingRevenueOriginal : 0,\n      updateDate: game.updateDate || new Date().toISOString()\n    }));\n  }, [mockDataEnabled, localGamesData]);\n\n  /**\n   * Calculate summary statistics from games data\n   */\n  const calculateSummary = useCallback((gamesData: DailyActionGame[]) => ({\n    totalRealBets: gamesData.reduce((sum, g) => sum + (g.numberOfRealBets || 0), 0),\n    totalBonusBets: gamesData.reduce((sum, g) => sum + (g.numberOfBonusBets || 0), 0),\n    totalRealBetAmount: gamesData.reduce((sum, g) => sum + (g.realBetAmount || 0), 0),\n    totalBonusBetAmount: gamesData.reduce((sum, g) => sum + (g.bonusBetAmount || 0), 0),\n    totalNetGamingRevenue: gamesData.reduce((sum, g) => sum + (g.netGamingRevenue || 0), 0),\n    totalSessions: gamesData.reduce((sum, g) => sum + (g.numberOfSessions || 0), 0)\n  }), []);\n\n  // Process games data\n  const gamesArray = useMemo(() => processGamesData(games), [games, processGamesData]);\n\n  // Calculate summary\n  const summary = useMemo(() => calculateSummary(gamesArray), [gamesArray, calculateSummary]);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <SimpleBox sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n        <SimpleBox>\n          <Typography variant=\"h4\" gutterBottom>\n            Games Report\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            View and analyze daily game activity, bets, and revenue metrics\n          </Typography>\n        </SimpleBox>\n      </SimpleBox>\n\n      {/* Filters */}\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <SimpleBox sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <FilterListIcon sx={{ mr: 1 }} />\n          <Typography variant=\"h6\">Filters</Typography>\n        </SimpleBox>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"Start Date\"\n                value={startDate}\n                onChange={(newValue) => setStartDate(newValue)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </LocalizationProvider>\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"End Date\"\n                value={endDate}\n                onChange={(newValue) => setEndDate(newValue)}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n            </LocalizationProvider>\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <TextField\n              label=\"Player ID\"\n              fullWidth\n              value={playerId}\n              onChange={(e) => setPlayerId(e.target.value)}\n              type=\"number\"\n              placeholder=\"Filter by Player ID\"\n            />\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <TextField\n              label=\"Game ID\"\n              fullWidth\n              value={gameId}\n              onChange={(e) => setGameId(e.target.value)}\n              type=\"number\"\n              placeholder=\"Filter by Game ID\"\n            />\n          </Grid>\n        </Grid>\n\n        {/* Action Buttons */}\n        <SimpleBox sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<RefreshIcon />}\n            onClick={handleApplyFilters}\n            disabled={loading}\n          >\n            Apply Filters\n          </Button>\n        </SimpleBox>\n      </Paper>\n\n      {/* Summary Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Total Sessions\n              </Typography>\n              <Typography variant=\"h5\">\n                {summary.totalSessions.toLocaleString()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Total Real Bets\n              </Typography>\n              <Typography variant=\"h5\">\n                {summary.totalRealBets.toLocaleString()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Total Bonus Bets\n              </Typography>\n              <Typography variant=\"h5\">\n                {summary.totalBonusBets.toLocaleString()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Real Bet Amount\n              </Typography>\n              <Typography variant=\"h5\">\n                {formatCurrency(summary.totalRealBetAmount)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Bonus Bet Amount\n              </Typography>\n              <Typography variant=\"h5\">\n                {formatCurrency(summary.totalBonusBetAmount)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={2}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n                Net Gaming Revenue\n              </Typography>\n              <Typography variant=\"h5\">\n                {formatCurrency(summary.totalNetGamingRevenue)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Data Table */}\n      <Paper sx={{ p: 3 }}>\n        <SimpleBox sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <TableChartIcon sx={{ mr: 1 }} />\n          <Typography variant=\"h6\">Games Data</Typography>\n        </SimpleBox>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Debug information - only shown in development */}\n        {process.env.NODE_ENV === 'development' && (\n          <SimpleBox sx={{ mb: 2, p: 2, bgcolor: '#f5f5f5', borderRadius: 1, display: 'none' }}>\n            <Typography variant=\"subtitle2\" gutterBottom>Debug Info:</Typography>\n            <Typography variant=\"body2\">Data type: {typeof games}</Typography>\n            <Typography variant=\"body2\">Is Array: {Array.isArray(games) ? 'Yes' : 'No'}</Typography>\n            <Typography variant=\"body2\">Length: {Array.isArray(games) ? games.length : 'N/A'}</Typography>\n            <Typography variant=\"body2\">Games Array Length: {gamesArray.length}</Typography>\n            <Typography variant=\"body2\" color=\"error\" sx={{ mt: 1 }}>\n              {error ? `Error: ${error}` : 'No error'}\n            </Typography>\n            <SimpleBox sx={{ mt: 2, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={() => console.log('Games data:', games)}\n              >\n                Log Games Data\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={() => console.log('Games array:', gamesArray)}\n              >\n                Log Games Array\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={fetchData}\n              >\n                Fetch Data\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => {\n                  const mockData = Array.from({ length: 10 }, (_, i) => ({\n                    id: i + 1,\n                    gameDate: new Date().toISOString(),\n                    playerId: 1000 + i,\n                    gameId: 2000 + i,\n                    platform: 'Web',\n                    realBetAmount: 100 + i * 10,\n                    realWinAmount: 50 + i * 5,\n                    bonusBetAmount: 20 + i * 2,\n                    bonusWinAmount: 10 + i,\n                    netGamingRevenue: 60 + i * 5,\n                    numberOfRealBets: 5 + i,\n                    numberOfBonusBets: 2 + i,\n                    numberOfSessions: 1,\n                    numberOfRealWins: 3 + i,\n                    numberOfBonusWins: 1 + i,\n                    realBetAmountOriginal: 100 + i * 10,\n                    realWinAmountOriginal: 50 + i * 5,\n                    bonusBetAmountOriginal: 20 + i * 2,\n                    bonusWinAmountOriginal: 10 + i,\n                    netGamingRevenueOriginal: 60 + i * 5,\n                    updateDate: new Date().toISOString()\n                  }));\n                  setLocalGamesData(mockData);\n                  setMockDataEnabled(true);\n                  console.log('Generated and applied mock data:', mockData);\n                }}\n              >\n                Use Mock Data\n              </Button>\n              {mockDataEnabled && (\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"error\"\n                  onClick={() => {\n                    setMockDataEnabled(false);\n                    console.log('Disabled mock data, reverting to API data');\n                  }}\n                >\n                  Disable Mock Data\n                </Button>\n              )}\n            </SimpleBox>\n          </SimpleBox>\n        )}\n\n        <EnhancedTable\n          columns={columns}\n          data={gamesArray}\n          loading={loading}\n          title=\"Daily Action Games\"\n          emptyMessage=\"No games data available\"\n          idField=\"id\"\n          onExport={handleExport}\n          features={{\n            sorting: true,\n            filtering: {\n              enabled: true,\n              quickFilter: true,\n              advancedFilter: true\n            },\n            pagination: {\n              enabled: true,\n              defaultPageSize: 10,\n              pageSizeOptions: [10, 25, 50, 100]\n            },\n            columnManagement: {\n              enabled: true,\n              allowReordering: true,\n              allowHiding: true,\n              allowResizing: true\n            },\n            export: {\n              enabled: true,\n              formats: [ExportFormat.CSV, ExportFormat.EXCEL, ExportFormat.PDF]\n            }\n          }}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default DailyActionGamesPage;\n"],"names":["createSvgIcon","_jsx","d","DAILY_ACTION_GAMES_ENDPOINT","getData","params","arguments","length","undefined","endpoint","console","log","API_ENDPOINTS","REPORTS","DAILY_ACTION_GAMES","GET_DATA","error","response","apiClient","get","data","Array","isArray","mappedData","map","item","index","game","id","gameDate","Date","toISOString","playerId","gameId","platform","realBetAmount","realWinAmount","bonusBetAmount","bonusWinAmount","netGamingRevenue","numberOfRealBets","numberOfBonusBets","numberOfSessions","numberOfRealWins","numberOfBonusWins","realBetAmountOriginal","realWinAmountOriginal","bonusBetAmountOriginal","bonusWinAmountOriginal","netGamingRevenueOriginal","updateDate","formattedResponse","totalCount","startDate","split","endDate","extractedData","Object","values","filter","warn","exportData","format","exportParams","EXPORT","responseType","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","severity","_ref","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","display","padding","variants","entries","_ref2","value","main","light","_ref3","colorSeverity","style","vars","Alert","alertClasses","icon","_ref4","_ref5","border","_ref6","dark","_ref7","fontWeight","fontWeightMedium","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","minWidth","overflow","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","useDefaultProps","children","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","slots","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseIcon","CloseButtonSlot","closeButtonProps","useSlot","elementType","IconButton","CloseIconSlot","closeIconProps","_jsxs","elevation","clsx","size","title","onClick","initialState","loading","filters","setDate","getDate","fetchDailyActionGames","createAsyncThunk","async","rejectWithValue","queryParams","dailyActionGamesService","dailyActionGamesSlice","createSlice","reducers","setFilters","state","payload","clearFilters","clearError","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectDailyActionGames","_state$dailyActionGam","dailyActionGames","selectDailyActionGamesLoading","_state$dailyActionGam2","selectDailyActionGamesError","_state$dailyActionGam3","selectDailyActionGamesFilters","_state$dailyActionGam4","selectDailyActionGamesTotalCount","_state$dailyActionGam5","DailyActionGamesPage","_filters$playerId","_filters$gameId","dispatch","useDispatch","games","useSelector","setStartDate","useState","parseISO","setEndDate","setPlayerId","toString","setGameId","mockDataEnabled","setMockDataEnabled","localGamesData","setLocalGamesData","columns","useMemo","label","formatDate","sortable","width","type","formatCurrency","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","amount","getQueryParams","useCallback","trim","parseInt","fetchData","handleApplyFilters","handleExport","serviceFormat","toLowerCase","default","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","useEffect","processGamesData","rawGames","gamesArray","gamesObj","extractedArray","calculateSummary","gamesData","totalRealBets","reduce","sum","g","totalBonusBets","totalRealBetAmount","totalBonusBetAmount","totalNetGamingRevenue","totalSessions","summary","Container","maxWidth","SimpleBox","sx","mb","justifyContent","Typography","gutterBottom","p","FilterListIcon","mr","Grid","container","spacing","xs","md","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","onChange","newValue","textField","fullWidth","TextField","e","target","placeholder","mt","Button","startIcon","RefreshIcon","disabled","sm","Card","CardContent","toLocaleString","TableChartIcon","process","EnhancedTable","emptyMessage","idField","onExport","features","sorting","filtering","enabled","quickFilter","advancedFilter","pagination","defaultPageSize","pageSizeOptions","columnManagement","allowReordering","allowHiding","allowResizing","export","formats","ExportFormat","CSV","EXCEL","PDF"],"sourceRoot":""}