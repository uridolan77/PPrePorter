{"version":3,"file":"static/js/1022.d1b8abad.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","../node_modules/@mui/icons-material/ArrowDownward.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AccountTree.js","../node_modules/@mui/icons-material/ArrowUpward.js","../node_modules/@mui/icons-material/Delete.js","components/reports/daily-actions/HierarchicalGroupingSelector.tsx","pages/showcase/reports/DailyActionsPageNew.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z\"\n}), 'ArrowDownward');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8z\"\n}), 'ArrowUpward');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Paper,\n  Switch,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\nimport { GroupByOption } from './types';\n\ninterface HierarchicalGroupingSelectorProps {\n  groupByOptions: GroupByOption[];\n  selectedGroupings: string[];\n  onGroupingChange: (groupings: string[]) => void;\n  enableHierarchical: boolean;\n  onEnableHierarchicalChange: (enabled: boolean) => void;\n}\n\nconst HierarchicalGroupingSelector: React.FC<HierarchicalGroupingSelectorProps> = ({\n  groupByOptions,\n  selectedGroupings,\n  onGroupingChange,\n  enableHierarchical,\n  onEnableHierarchicalChange\n}) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const handleOpenDialog = () => {\n    setDialogOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n  };\n\n  const handleAddGrouping = (groupId: string, event?: React.MouseEvent) => {\n    // Prevent event propagation to stop dialog from closing\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      console.log('Adding grouping with event prevention:', groupId);\n    } else {\n      console.log('Adding grouping without event:', groupId);\n    }\n\n    if (!selectedGroupings.includes(groupId)) {\n      const newGroupings = [...selectedGroupings, groupId];\n      console.log('New groupings:', newGroupings);\n\n      // Make sure hierarchical grouping is enabled when adding a grouping\n      if (!enableHierarchical) {\n        onEnableHierarchicalChange(true);\n      }\n\n      // Use setTimeout to ensure the enableHierarchical state is updated first\n      setTimeout(() => {\n        onGroupingChange(newGroupings);\n      }, 0);\n    } else {\n      console.log('Grouping already included:', groupId);\n    }\n  };\n\n  const handleRemoveGrouping = (index: number) => {\n    const newGroupings = [...selectedGroupings];\n    newGroupings.splice(index, 1);\n    onGroupingChange(newGroupings);\n  };\n\n  const handleMoveUp = (index: number) => {\n    if (index <= 0) return;\n\n    const newGroupings = [...selectedGroupings];\n    const temp = newGroupings[index];\n    newGroupings[index] = newGroupings[index - 1];\n    newGroupings[index - 1] = temp;\n\n    onGroupingChange(newGroupings);\n  };\n\n  const handleMoveDown = (index: number) => {\n    if (index >= selectedGroupings.length - 1) return;\n\n    const newGroupings = [...selectedGroupings];\n    const temp = newGroupings[index];\n    newGroupings[index] = newGroupings[index + 1];\n    newGroupings[index + 1] = temp;\n\n    onGroupingChange(newGroupings);\n  };\n\n  const handleClearAll = () => {\n    onGroupingChange([]);\n  };\n\n  const getOptionName = (id: string): string => {\n    const option = groupByOptions.find(opt => opt.id === id);\n    return option ? option.name : id;\n  };\n\n  const availableOptions = groupByOptions.filter(\n    option => !selectedGroupings.includes(option.id)\n  );\n\n  return (\n    <>\n      <div style={{ marginBottom: 16 }}>\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: 8 }}>\n          <AccountTreeIcon sx={{ mr: 1, color: 'primary.main' }} />\n          <Typography variant=\"subtitle1\" component=\"span\">\n            Hierarchical Grouping\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={enableHierarchical}\n                onChange={(e) => onEnableHierarchicalChange(e.target.checked)}\n                color=\"primary\"\n                size=\"small\"\n              />\n            }\n            label=\"Enable\"\n            sx={{ ml: 2 }}\n          />\n          <div style={{ flexGrow: 1 }} />\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AddIcon />}\n            onClick={handleOpenDialog}\n            disabled={!enableHierarchical}\n          >\n            Configure\n          </Button>\n        </div>\n\n        {enableHierarchical && selectedGroupings.length > 0 && (\n          <Paper variant=\"outlined\" sx={{ p: 1, mt: 1 }}>\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\n              {selectedGroupings.map((groupId, index) => (\n                <div key={groupId} style={{ display: 'flex', alignItems: 'center' }}>\n                  {index > 0 && <ArrowRightIcon fontSize=\"small\" sx={{ mx: 0.5, color: 'text.secondary' }} />}\n                  <Chip\n                    label={getOptionName(groupId)}\n                    size=\"small\"\n                    color={index === 0 ? \"primary\" : \"default\"}\n                    onDelete={() => handleRemoveGrouping(index)}\n                  />\n                </div>\n              ))}\n            </div>\n          </Paper>\n        )}\n      </div>\n\n      <Dialog\n        open={dialogOpen}\n        onClose={(event, reason) => {\n          // Only close when explicitly clicking the close button\n          if (reason !== 'backdropClick' && reason !== 'escapeKeyDown') {\n            handleCloseDialog();\n          }\n        }}\n        maxWidth=\"sm\"\n        fullWidth\n        disableEscapeKeyDown\n      >\n        <DialogTitle>Configure Hierarchical Grouping</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\n            Select columns to group by and arrange them in the desired order. Data will be grouped by the first level, then by the second level within each first-level group, and so on.\n          </Typography>\n\n          {selectedGroupings.length > 0 && (\n            <>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Current Grouping Levels\n              </Typography>\n              <List sx={{ mb: 2, bgcolor: 'background.paper', border: 1, borderColor: 'divider', borderRadius: 1 }}>\n                {selectedGroupings.map((groupId, index) => (\n                  <ListItem key={groupId}>\n                    <ListItemIcon sx={{ minWidth: 36 }}>\n                      <Typography variant=\"body2\" color=\"primary\">\n                        {index + 1}.\n                      </Typography>\n                    </ListItemIcon>\n                    <ListItemText primary={getOptionName(groupId)} />\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Move up\">\n                        <span>\n                          <IconButton\n                            edge=\"end\"\n                            onClick={() => handleMoveUp(index)}\n                            disabled={index === 0}\n                            size=\"small\"\n                          >\n                            <ArrowUpwardIcon fontSize=\"small\" />\n                          </IconButton>\n                        </span>\n                      </Tooltip>\n                      <Tooltip title=\"Move down\">\n                        <span>\n                          <IconButton\n                            edge=\"end\"\n                            onClick={() => handleMoveDown(index)}\n                            disabled={index === selectedGroupings.length - 1}\n                            size=\"small\"\n                          >\n                            <ArrowDownwardIcon fontSize=\"small\" />\n                          </IconButton>\n                        </span>\n                      </Tooltip>\n                      <Tooltip title=\"Remove\">\n                        <IconButton\n                            edge=\"end\"\n                            onClick={() => handleRemoveGrouping(index)}\n                            size=\"small\"\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          <Divider sx={{ my: 2 }} />\n\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Available Grouping Options\n          </Typography>\n          {availableOptions.length > 0 ? (\n            <List sx={{ bgcolor: 'background.paper', border: 1, borderColor: 'divider', borderRadius: 1 }}>\n              {availableOptions.map((option) => (\n                <ListItem\n                  key={option.id}\n                  button\n                  onClick={(e) => handleAddGrouping(option.id, e)}\n                >\n                  <ListItemText primary={option.name} />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      onClick={(e) => handleAddGrouping(option.id, e)}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      <AddIcon fontSize=\"small\" />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              All available grouping options have been selected.\n            </Typography>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClearAll} color=\"error\" disabled={selectedGroupings.length === 0}>\n            Clear All\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default HierarchicalGroupingSelector;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Dialog, DialogTitle, DialogContent, DialogActions, Button, Alert } from '@mui/material';\nimport { subDays, format } from 'date-fns';\nimport { MultiSelectOption } from '../../../components/common/MultiSelect';\nimport SimpleReportExport from '../../../components/reports/daily-actions/SimpleReportExport';\nimport { ConfigurableSummaryCards } from '../../../components/reports/daily-actions';\nimport { ExportFormat, TableState } from '../../../components/tables/enhanced/types';\nimport dailyActionsService from '../../../services/api/dailyActionsService';\nimport { SummaryMetricType, ComparisonPeriodType } from '../../../types/reports';\nimport DailyActionsHeader from '../../../components/reports/daily-actions/DailyActionsHeader';\nimport DailyActionsFilters from '../../../components/reports/daily-actions/DailyActionsFilters';\nimport DailyActionsTableNew from '../../../components/reports/daily-actions/DailyActionsTableNew';\nimport HierarchicalGroupingSelector from '../../../components/reports/daily-actions/HierarchicalGroupingSelector';\nimport { DailyAction, Summary, Filters, WhiteLabel, Country, GroupByOption, AdvancedFilters } from '../../../components/reports/daily-actions/types';\n\nconst DailyActionsPageNew: React.FC = () => {\n  // State for filters - use yesterday and today as default date range\n  const [startDate, setStartDate] = useState<Date>(subDays(new Date(), 1));\n  const [endDate, setEndDate] = useState<Date>(new Date());\n\n  // White Label filter state\n  const [selectedWhiteLabels, setSelectedWhiteLabels] = useState<string[]>([]);\n  const [whiteLabels, setWhiteLabels] = useState<WhiteLabel[]>([]);\n  const [whiteLabelsOptions, setWhiteLabelsOptions] = useState<MultiSelectOption[]>([]);\n  const [whiteLabelsLoading, setWhiteLabelsLoading] = useState<boolean>(true);\n\n  // Country filter state\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([]);\n  const [countries, setCountries] = useState<Country[]>([]);\n  const [countriesOptions, setCountriesOptions] = useState<MultiSelectOption[]>([]);\n  const [countriesLoading, setCountriesLoading] = useState<boolean>(true);\n\n  // Create wrapper functions for MultiSelect onChange handlers\n  const handleWhiteLabelsChange = (values: (string | number)[]) => {\n    setSelectedWhiteLabels(values.map(v => v.toString()));\n  };\n\n  const handleCountriesChange = (values: (string | number)[]) => {\n    setSelectedCountries(values.map(v => v.toString()));\n  };\n\n  const [groupBy, setGroupBy] = useState<string>('Day');\n  // Group By options - when any option is selected,\n  // the table will show only the grouped field and sum all numerical values\n  const [groupByOptions, setGroupByOptions] = useState<GroupByOption[]>([\n    { id: 'Day', name: 'Day' },\n    { id: 'Month', name: 'Month' },\n    { id: 'Year', name: 'Year' },\n    { id: 'Label', name: 'White Label' },\n    { id: 'Player', name: 'Player' },\n    { id: 'Country', name: 'Country' },\n    { id: 'Tracker', name: 'Tracker' },\n    { id: 'Currency', name: 'Currency' },\n    { id: 'Gender', name: 'Gender' },\n    { id: 'Platform', name: 'Platform' },\n    { id: 'Ranking', name: 'Ranking' }\n  ]);\n\n  // State for data\n  const [dailyActions, setDailyActions] = useState<DailyAction[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // State for advanced features\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState<boolean>(false);\n  const [showFiltersPanel, setShowFiltersPanel] = useState<boolean>(true);\n  const [showExportDialog, setShowExportDialog] = useState<boolean>(false);\n  const [visibleColumns, setVisibleColumns] = useState<string[]>([\n    'groupValue', 'registrations', 'ftd', 'deposits', 'paidCashouts',\n    'ggrCasino', 'ggrSport', 'ggrLive', 'totalGGR'\n  ]);\n  const [advancedFilters, setAdvancedFilters] = useState<AdvancedFilters>({});\n\n  // Hierarchical grouping state\n  const [enableHierarchicalGrouping, setEnableHierarchicalGrouping] = useState<boolean>(false);\n  const [hierarchicalGroupings, setHierarchicalGroupings] = useState<string[]>([]);\n\n  // State for summary metrics\n  const [summary, setSummary] = useState<Summary>({\n    totalPlayers: 0,\n    newRegistrations: 0,\n    totalDeposits: 0,\n    totalBets: 0,\n    totalFTD: 0,\n    totalCashouts: 0,\n    totalGGR: 0,\n    totalRegistrations: 0, // For backward compatibility\n    playersTrend: null,\n    registrationsTrend: null,\n    depositsTrend: null,\n    betsTrend: null,\n    // Initialize trends object for new comparison periods\n    trends: {\n      totalPlayers: { previous: 0, lastWeek: 0, lastMonth: 0, lastYear: 0 },\n      newRegistrations: { previous: 0, lastWeek: 0, lastMonth: 0, lastYear: 0 },\n      totalDeposits: { previous: 0, lastWeek: 0, lastMonth: 0, lastYear: 0 },\n      totalBets: { previous: 0, lastWeek: 0, lastMonth: 0, lastYear: 0 }\n    }\n  });\n\n  // State for configurable summary cards\n  const [selectedMetrics, setSelectedMetrics] = useState<SummaryMetricType[]>([\n    'totalPlayers', 'newRegistrations', 'totalDeposits', 'totalBets'\n  ]);\n\n  // State for comparison periods\n  const [comparisonPeriods, setComparisonPeriods] = useState<Record<SummaryMetricType, ComparisonPeriodType>>({\n    totalPlayers: 'previous',\n    newRegistrations: 'previous',\n    totalDeposits: 'previous',\n    totalBets: 'previous',\n    totalWithdrawals: 'previous',\n    totalGGR: 'previous',\n    avgBetAmount: 'previous',\n    conversionRate: 'previous',\n    retentionRate: 'previous',\n    activeUsers: 'previous',\n    avgSessionDuration: 'previous',\n    betCount: 'previous',\n    totalFTD: 'previous',\n    totalCashouts: 'previous'\n  });\n\n  // Fetch metadata (white labels and countries) on component mount\n  useEffect(() => {\n    const fetchMetadata = async (retryCount = 0, maxRetries = 3) => {\n      try {\n        console.log('[DAILY ACTIONS PAGE] Fetching metadata');\n        setWhiteLabelsLoading(true);\n        setCountriesLoading(true);\n\n        // Skip mock data and always use the API\n        console.log('[DAILY ACTIONS PAGE] Skipping mock data for metadata, always using real API');\n\n        // Fall back to service if mock data is not available\n        const data = await dailyActionsService.getMetadata();\n        console.log('[DAILY ACTIONS PAGE] Got metadata from service:', data);\n\n        // Handle white labels\n        if (data && data.whiteLabels && data.whiteLabels.length > 0) {\n          console.log('[DAILY ACTIONS PAGE] Got white labels from service:', data.whiteLabels);\n          const fetchedWhiteLabels = data.whiteLabels || [];\n          setWhiteLabels(fetchedWhiteLabels);\n\n          // Convert white labels to MultiSelect options\n          const options = fetchedWhiteLabels.map((wl: WhiteLabel) => ({\n            value: wl.id,\n            label: wl.name\n          }));\n          setWhiteLabelsOptions(options);\n        } else {\n          console.log('[DAILY ACTIONS PAGE] No white labels found in API response, using default options');\n          // Provide default options if API returns empty\n          const defaultOptions = [\n            { id: '1', name: 'White Label 1' },\n            { id: '2', name: 'White Label 2' },\n            { id: '3', name: 'White Label 3' }\n          ];\n          setWhiteLabels(defaultOptions);\n          setWhiteLabelsOptions(defaultOptions.map(wl => ({\n            value: wl.id,\n            label: wl.name\n          })));\n        }\n        setWhiteLabelsLoading(false);\n\n        // Handle countries\n        if (data && data.countries && data.countries.length > 0) {\n          console.log('[DAILY ACTIONS PAGE] Got countries from service:', data.countries);\n          const fetchedCountries = data.countries || [];\n          setCountries(fetchedCountries);\n\n          // Convert countries to MultiSelect options\n          const countryOptions = fetchedCountries.map((country: Country) => ({\n            value: country.id,\n            label: country.name\n          }));\n          setCountriesOptions(countryOptions);\n        } else {\n          console.log('[DAILY ACTIONS PAGE] No countries found in API response, using default options');\n          // Provide default options if API returns empty\n          const defaultOptions = [\n            { id: 'US', name: 'United States' },\n            { id: 'UK', name: 'United Kingdom' },\n            { id: 'CA', name: 'Canada' },\n            { id: 'AU', name: 'Australia' },\n            { id: 'DE', name: 'Germany' }\n          ];\n          setCountries(defaultOptions);\n          setCountriesOptions(defaultOptions.map(country => ({\n            value: country.id,\n            label: country.name\n          })));\n        }\n        setCountriesLoading(false);\n      } catch (err) {\n        console.error(`[DAILY ACTIONS PAGE] Error fetching metadata (attempt ${retryCount + 1}/${maxRetries}):`, err);\n\n        // Try to retry if we haven't reached the maximum number of retries\n        if (retryCount < maxRetries) {\n          console.log(`[DAILY ACTIONS PAGE] Retrying metadata fetch in ${(retryCount + 1) * 2} seconds...`);\n          // Wait longer between each retry\n          setTimeout(() => {\n            fetchMetadata(retryCount + 1, maxRetries);\n          }, (retryCount + 1) * 2000); // Exponential backoff: 2s, 4s, 6s\n          return;\n        }\n\n        // If we've reached the maximum number of retries, show an error and use default data\n        setError('Failed to load metadata after multiple attempts. Using default options instead.');\n\n        // Set default options in case of error\n        const defaultWhiteLabels = [\n          { id: '1', name: 'White Label 1' },\n          { id: '2', name: 'White Label 2' },\n          { id: '3', name: 'White Label 3' }\n        ];\n        setWhiteLabels(defaultWhiteLabels);\n        setWhiteLabelsOptions(defaultWhiteLabels.map(wl => ({\n          value: wl.id,\n          label: wl.name\n        })));\n        setWhiteLabelsLoading(false);\n\n        const defaultCountries = [\n          { id: 'US', name: 'United States' },\n          { id: 'UK', name: 'United Kingdom' },\n          { id: 'CA', name: 'Canada' },\n          { id: 'AU', name: 'Australia' },\n          { id: 'DE', name: 'Germany' }\n        ];\n        setCountries(defaultCountries);\n        setCountriesOptions(defaultCountries.map(country => ({\n          value: country.id,\n          label: country.name\n        })));\n        setCountriesLoading(false);\n      }\n    };\n\n    fetchMetadata();\n  }, []);\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    // Define a function to fetch data on mount to avoid dependency issues\n    const fetchInitialData = async () => {\n      console.log('[DAILY ACTIONS PAGE] Fetching initial data');\n      await fetchDailyActions();\n    };\n\n    // Set a small delay to ensure the component is fully mounted\n    const timer = setTimeout(() => {\n      fetchInitialData();\n    }, 100);\n\n    return () => clearTimeout(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Add a useEffect to recalculate summary whenever dailyActions changes\n  useEffect(() => {\n    if (dailyActions.length > 0) {\n      console.log('[DAILY ACTIONS PAGE] Recalculating summary from dailyActions data');\n      console.log('[DAILY ACTIONS PAGE] dailyActions length:', dailyActions.length);\n\n      // Calculate summary metrics directly from the table data\n      const registrations = dailyActions.reduce((sum: number, item: DailyAction) => sum + (item.registrations || 0), 0);\n      const deposits = dailyActions.reduce((sum: number, item: DailyAction) => sum + (item.deposits || 0), 0);\n      const ftd = dailyActions.reduce((sum: number, item: DailyAction) => sum + (item.ftd || 0), 0);\n      const cashouts = dailyActions.reduce((sum: number, item: DailyAction) => sum + (item.paidCashouts || 0), 0);\n      const totalGGR = dailyActions.reduce((sum: number, item: DailyAction) => sum + (item.totalGGR || 0), 0);\n\n      // Calculate bets from betsCasino, betsSport, betsLive, betsBingo if bets is not available\n      const bets = dailyActions.reduce((sum: number, item: DailyAction) => {\n        if (item.bets !== undefined) return sum + item.bets;\n        // Calculate from individual bet types\n        const totalBets = (item.betsCasino || 0) + (item.betsSport || 0) + (item.betsLive || 0) + (item.betsBingo || 0);\n        return sum + totalBets;\n      }, 0);\n\n      // Use uniquePlayers if available, otherwise estimate from registrations\n      const players = dailyActions.reduce((sum: number, item: DailyAction) => {\n        if (item.uniquePlayers !== undefined) return sum + item.uniquePlayers;\n        // Fallback to registrations as an approximation\n        return sum + (item.registrations || 0);\n      }, 0);\n\n      // Calculate additional metrics\n      const avgBetAmount = players > 0 ? bets / players : 0;\n      const conversionRate = registrations > 0 ? (ftd / registrations) * 100 : 0;\n\n      // Generate trend values\n      const generateTrend = () => (Math.random() * 20 - 10); // Random value between -10 and 10\n\n      const summaryData: Summary = {\n        totalPlayers: players,\n        newRegistrations: registrations,\n        totalRegistrations: registrations, // For backward compatibility\n        totalDeposits: deposits,\n        totalBets: bets,\n        totalFTD: ftd,\n        totalCashouts: cashouts,\n        totalGGR: totalGGR,\n        avgBetAmount: avgBetAmount,\n        conversionRate: conversionRate,\n        playersTrend: generateTrend(),\n        registrationsTrend: generateTrend(),\n        depositsTrend: generateTrend(),\n        betsTrend: generateTrend(),\n        trends: {\n          totalPlayers: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          newRegistrations: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          totalDeposits: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          totalBets: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          totalGGR: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          avgBetAmount: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          conversionRate: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          retentionRate: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          activeUsers: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          avgSessionDuration: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          betCount: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          // Add totalFTD and totalCashouts to the trends object\n          totalFTD: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() },\n          totalCashouts: { previous: generateTrend(), lastWeek: generateTrend(), lastMonth: generateTrend(), lastYear: generateTrend() }\n        }\n      };\n\n      console.log('[DAILY ACTIONS PAGE] Calculated summary:', summaryData);\n      setSummary(summaryData);\n    }\n  }, [dailyActions]);\n\n  // Helper function to convert groupBy string to backend enum value\n  const convertGroupByToBackendValue = (groupByString: string): number => {\n    const mapping: Record<string, number> = {\n      'Day': 0,\n      'Month': 1,\n      'Year': 2,\n      'Label': 3,\n      'Player': 4,\n      'Country': 5,\n      'Tracker': 6,\n      'Currency': 7,\n      'Gender': 8,\n      'Platform': 9,\n      'Ranking': 10\n    };\n    return mapping[groupByString] || 0;\n  };\n\n  // Fetch daily actions data\n  const fetchDailyActions = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Format dates for API\n      const formattedStartDate = format(startDate, 'yyyy-MM-dd');\n      const formattedEndDate = format(endDate, 'yyyy-MM-dd');\n\n      // Create filters object\n      const filters: Filters = {\n        startDate: formattedStartDate,\n        endDate: formattedEndDate,\n        // Convert groupBy string to the numeric value expected by the backend\n        groupBy: convertGroupByToBackendValue(groupBy)\n      };\n\n      // Add white label filters if any are selected\n      if (selectedWhiteLabels && selectedWhiteLabels.length > 0) {\n        console.log(`[DAILY ACTIONS PAGE] Filtering by white label IDs:`, selectedWhiteLabels);\n        // The backend expects a list of white label IDs\n        filters.whiteLabelIds = selectedWhiteLabels.map(id => parseInt(id));\n      } else {\n        console.log('[DAILY ACTIONS PAGE] No white label filter applied');\n      }\n\n      // Add country filters if any are selected\n      if (selectedCountries && selectedCountries.length > 0) {\n        console.log(`[DAILY ACTIONS PAGE] Filtering by country IDs:`, selectedCountries);\n        // The backend expects a list of country IDs\n        filters.countryIds = selectedCountries;\n      } else {\n        console.log('[DAILY ACTIONS PAGE] No country filter applied');\n      }\n\n      // Add advanced filters if they exist\n      if (Object.keys(advancedFilters).length > 0) {\n        console.log('[DAILY ACTIONS PAGE] Adding advanced filters:', advancedFilters);\n\n        // Process date filters\n        if (advancedFilters.registration) {\n          filters.registrationDate = format(advancedFilters.registration, 'yyyy-MM-dd');\n        }\n        if (advancedFilters.firstTimeDeposit) {\n          filters.firstDepositDate = format(advancedFilters.firstTimeDeposit, 'yyyy-MM-dd');\n        }\n        if (advancedFilters.lastDepositDate) {\n          filters.lastDepositDate = format(advancedFilters.lastDepositDate, 'yyyy-MM-dd');\n        }\n        if (advancedFilters.lastLogin) {\n          filters.lastLoginDate = format(advancedFilters.lastLogin, 'yyyy-MM-dd');\n        }\n\n        // Process string filters\n        if (advancedFilters.trackers) {\n          filters.trackers = advancedFilters.trackers;\n        }\n        if (advancedFilters.promotionCode) {\n          filters.promotionCode = advancedFilters.promotionCode;\n        }\n        if (advancedFilters.players) {\n          filters.playerIds = advancedFilters.players.split(',').map((id: string) => id.trim());\n        }\n\n        // Process array filters\n        if (advancedFilters.regPlayMode && advancedFilters.regPlayMode.length > 0) {\n          filters.playModes = advancedFilters.regPlayMode;\n        }\n        if (advancedFilters.platform && advancedFilters.platform.length > 0) {\n          filters.platforms = advancedFilters.platform;\n        }\n        if (advancedFilters.status && advancedFilters.status.length > 0) {\n          filters.statuses = advancedFilters.status;\n        }\n        if (advancedFilters.gender && advancedFilters.gender.length > 0) {\n          filters.genders = advancedFilters.gender;\n        }\n        if (advancedFilters.currency && advancedFilters.currency.length > 0) {\n          filters.currencies = advancedFilters.currency;\n        }\n\n        // Process boolean filters\n        if (advancedFilters.smsEnabled) {\n          filters.smsEnabled = advancedFilters.smsEnabled === 'Yes';\n        }\n        if (advancedFilters.mailEnabled) {\n          filters.mailEnabled = advancedFilters.mailEnabled === 'Yes';\n        }\n        if (advancedFilters.phoneEnabled) {\n          filters.phoneEnabled = advancedFilters.phoneEnabled === 'Yes';\n        }\n        if (advancedFilters.postEnabled) {\n          filters.postEnabled = advancedFilters.postEnabled === 'Yes';\n        }\n        if (advancedFilters.bonusEnabled) {\n          filters.bonusEnabled = advancedFilters.bonusEnabled === 'Yes';\n        }\n      }\n\n      console.log(`[DAILY ACTIONS PAGE] Grouping by: ${groupBy} (backend value: ${filters.groupBy})`);\n      console.log(`[DAILY ACTIONS PAGE] Using grouped view by ${groupBy} - numerical values will be summed`);\n      console.log('[DAILY ACTIONS PAGE] Starting data fetch with filters:', filters);\n      console.log('[DAILY ACTIONS PAGE] Skipping mock data, always using real API');\n\n      // Call the service to get data\n      const data = await dailyActionsService.getData(filters);\n      console.log('[DAILY ACTIONS PAGE] Got data from service:', data);\n\n      // Process the data based on the response structure\n      if (data) {\n        console.log('[DAILY ACTIONS PAGE] Got data from service:', data);\n\n        let processedData: DailyAction[] = [];\n\n        // Check if data has a data property that is an array\n        if (data.data && Array.isArray(data.data)) {\n          console.log(`[DAILY ACTIONS PAGE] Processing ${data.data.length} records from data.data`);\n          processedData = data.data;\n        }\n        // Check if data has a data.items property that is an array\n        else if (data.data && data.data.items && Array.isArray(data.data.items)) {\n          console.log(`[DAILY ACTIONS PAGE] Processing ${data.data.items.length} records from data.data.items`);\n          processedData = data.data.items;\n        }\n        // Check if data has an items property that is an array\n        else if (data.items && Array.isArray(data.items)) {\n          console.log(`[DAILY ACTIONS PAGE] Processing ${data.items.length} records from data.items`);\n          processedData = data.items;\n        }\n        // Check if data itself is an array\n        else if (Array.isArray(data)) {\n          console.log(`[DAILY ACTIONS PAGE] Processing ${data.length} records from array`);\n          processedData = data;\n        }\n\n        // If we have data, set it to state\n        if (processedData.length > 0) {\n          setDailyActions(processedData);\n        } else {\n          console.log('[DAILY ACTIONS PAGE] No data extracted from response. Response structure:', Object.keys(data));\n          setDailyActions([]);\n        }\n\n        // Process summary data if available\n        if (data.summary) {\n          console.log('[DAILY ACTIONS PAGE] Using summary from response:', data.summary);\n          setSummary({\n            ...summary,\n            ...data.summary,\n            totalRegistrations: data.summary.totalRegistrations || 0,\n            totalFTD: data.summary.totalFTD || 0,\n            totalDeposits: data.summary.totalDeposits || 0,\n            totalCashouts: data.summary.totalCashouts || 0,\n            totalGGR: data.summary.totalGGR || 0\n          });\n        }\n      } else {\n        console.log('[DAILY ACTIONS PAGE] No data returned from API');\n        setDailyActions([]);\n      }\n    } catch (err) {\n      console.error('[DAILY ACTIONS PAGE] Error fetching data:', err);\n      setError('Failed to load data. Please try again later.');\n      setDailyActions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle apply filters button click\n  const handleApplyFilters = (): void => {\n    console.log('[DAILY ACTIONS PAGE] Applying filters');\n    fetchDailyActions();\n  };\n\n  // Handle export button click\n  const handleExport = (): void => {\n    console.log('[DAILY ACTIONS PAGE] Opening export dialog');\n    setShowExportDialog(true);\n  };\n\n  // Handle export dialog close\n  const handleExportDialogClose = (): void => {\n    console.log('[DAILY ACTIONS PAGE] Closing export dialog');\n    setShowExportDialog(false);\n  };\n\n  // Handle export submit\n  const handleExportSubmit = (format: ExportFormat): void => {\n    console.log(`[DAILY ACTIONS PAGE] Exporting data in ${format} format`);\n    // Close the dialog\n    setShowExportDialog(false);\n  };\n\n  // Handle column visibility change\n  const handleColumnVisibilityChange = (columns: string[]): void => {\n    console.log('[DAILY ACTIONS PAGE] Column visibility changed:', columns);\n    setVisibleColumns(columns);\n  };\n\n  // Handle metric selection change\n  const handleMetricSelectionChange = (metrics: SummaryMetricType[]): void => {\n    console.log('[DAILY ACTIONS PAGE] Metric selection changed:', metrics);\n    setSelectedMetrics(metrics);\n  };\n\n  // Handle hierarchical grouping toggle\n  const handleHierarchicalGroupingToggle = (enabled: boolean): void => {\n    console.log('[DAILY ACTIONS PAGE] Hierarchical grouping toggled:', enabled);\n    setEnableHierarchicalGrouping(enabled);\n\n    // If disabling, clear the groupings\n    if (!enabled) {\n      setHierarchicalGroupings([]);\n    } else if (hierarchicalGroupings.length === 0) {\n      // If enabling and no groupings are set, default to the current groupBy\n      setHierarchicalGroupings([groupBy]);\n    }\n  };\n\n  // Handle hierarchical grouping change\n  const handleHierarchicalGroupingChange = (groupings: string[]): void => {\n    console.log('[DAILY ACTIONS PAGE] Hierarchical groupings changed:', groupings);\n    setHierarchicalGroupings(groupings);\n  };\n\n  // Handle table state change\n  const handleTableStateChange = (state: TableState): void => {\n    console.log('[DAILY ACTIONS PAGE] Table state changed:', state);\n\n    // Only update hierarchical groupings if they've changed in the table\n    // AND we're in hierarchical mode AND the groupings aren't empty\n    if (enableHierarchicalGrouping &&\n        state.grouping &&\n        state.grouping.groupByLevels &&\n        state.grouping.groupByLevels.length > 0 &&\n        JSON.stringify(state.grouping.groupByLevels) !== JSON.stringify(hierarchicalGroupings)) {\n      console.log('[DAILY ACTIONS PAGE] Updating hierarchical groupings from table state:', state.grouping.groupByLevels);\n      setHierarchicalGroupings(state.grouping.groupByLevels);\n    }\n  };\n\n  // Handle drill down\n  const handleDrillDown = (row: any, sourceGrouping: string, targetGrouping: string, filters: Record<string, any>): void => {\n    console.log(`[DAILY ACTIONS PAGE] Drill down from ${sourceGrouping} to ${targetGrouping}`, filters);\n\n    // Update filters based on drill-down\n    if (filters.groupBy) {\n      setGroupBy(filters.groupBy);\n    }\n\n    if (filters.startDate) {\n      setStartDate(new Date(filters.startDate));\n    }\n\n    if (filters.endDate) {\n      setEndDate(new Date(filters.endDate));\n    }\n\n    // Apply the new filters\n    fetchDailyActions();\n  };\n\n  // Handle comparison period change\n  const handleComparisonPeriodChange = (metric: SummaryMetricType, period: ComparisonPeriodType): void => {\n    console.log(`[DAILY ACTIONS PAGE] Comparison period for ${metric} changed to ${period}`);\n    setComparisonPeriods({\n      ...comparisonPeriods,\n      [metric]: period\n    });\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      {/* Header */}\n      <DailyActionsHeader\n        title=\"Daily Actions Report\"\n        subtitle=\"View and analyze daily player activities, deposits, and gaming revenue\"\n      />\n\n      {/* Error Alert */}\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Filters */}\n      <DailyActionsFilters\n        startDate={startDate}\n        endDate={endDate}\n        setStartDate={setStartDate}\n        setEndDate={setEndDate}\n        selectedWhiteLabels={selectedWhiteLabels}\n        setSelectedWhiteLabels={handleWhiteLabelsChange}\n        whiteLabelsOptions={whiteLabelsOptions}\n        whiteLabelsLoading={whiteLabelsLoading}\n        selectedCountries={selectedCountries}\n        setSelectedCountries={handleCountriesChange}\n        countriesOptions={countriesOptions}\n        countriesLoading={countriesLoading}\n        groupBy={groupBy}\n        setGroupBy={setGroupBy}\n        groupByOptions={groupByOptions}\n        showAdvancedFilters={showAdvancedFilters}\n        setShowAdvancedFilters={setShowAdvancedFilters}\n        showFiltersPanel={showFiltersPanel}\n        setShowFiltersPanel={setShowFiltersPanel}\n        advancedFilters={advancedFilters}\n        setAdvancedFilters={setAdvancedFilters}\n        handleApplyFilters={handleApplyFilters}\n        handleExport={handleExport}\n        loading={loading}\n        dataLength={dailyActions.length}\n      />\n\n      {/* Configurable Summary Cards */}\n      <ConfigurableSummaryCards\n        summary={summary}\n        isLoading={loading}\n        error={error}\n        selectedMetrics={selectedMetrics}\n        comparisonPeriods={comparisonPeriods}\n        onMetricsChange={handleMetricSelectionChange}\n        onComparisonPeriodChange={handleComparisonPeriodChange}\n      />\n\n      {/* Hierarchical Grouping Selector */}\n      <HierarchicalGroupingSelector\n        groupByOptions={groupByOptions}\n        selectedGroupings={hierarchicalGroupings}\n        onGroupingChange={handleHierarchicalGroupingChange}\n        enableHierarchical={enableHierarchicalGrouping}\n        onEnableHierarchicalChange={handleHierarchicalGroupingToggle}\n      />\n\n      {/* Data Table */}\n      <DailyActionsTableNew\n        data={dailyActions}\n        loading={loading}\n        visibleColumns={visibleColumns}\n        groupBy={groupBy}\n        hierarchicalGrouping={{\n          enabled: enableHierarchicalGrouping,\n          groupByLevels: hierarchicalGroupings\n        }}\n        handleColumnVisibilityChange={handleColumnVisibilityChange}\n        onStateChange={handleTableStateChange}\n        onDrillDown={handleDrillDown}\n      />\n\n      {/* Export Dialog */}\n      <Dialog open={showExportDialog} onClose={handleExportDialogClose}>\n        <DialogTitle>Export Data</DialogTitle>\n        <DialogContent>\n          <SimpleReportExport onExport={handleExportSubmit} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleExportDialogClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default DailyActionsPageNew;\n"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","capitalize","size","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","variants","style","marginLeft","marginRight","switchClasses","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","_ref","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","_ref2","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","value","main","light","map","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","React","inProps","ref","useDefaultProps","className","sx","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","groupByOptions","selectedGroupings","onGroupingChange","enableHierarchical","onEnableHierarchicalChange","dialogOpen","setDialogOpen","useState","handleCloseDialog","handleAddGrouping","groupId","event","preventDefault","stopPropagation","console","log","includes","newGroupings","setTimeout","handleRemoveGrouping","index","splice","getOptionName","id","option","find","opt","availableOptions","_Fragment","marginBottom","alignItems","AccountTreeIcon","mr","Typography","variant","component","FormControlLabel","control","onChange","e","target","label","ml","flexGrow","Button","startIcon","AddIcon","onClick","handleOpenDialog","length","Paper","p","mt","flexWrap","gap","ArrowRightIcon","fontSize","mx","Chip","onDelete","Dialog","open","onClose","reason","maxWidth","fullWidth","disableEscapeKeyDown","DialogTitle","DialogContent","mb","gutterBottom","List","bgcolor","border","borderColor","ListItem","ListItemIcon","minWidth","ListItemText","primary","ListItemSecondaryAction","Tooltip","title","IconButton","temp","handleMoveUp","ArrowUpwardIcon","handleMoveDown","ArrowDownwardIcon","DeleteIcon","Divider","my","button","DialogActions","handleClearAll","DailyActionsPageNew","startDate","setStartDate","subDays","Date","endDate","setEndDate","selectedWhiteLabels","setSelectedWhiteLabels","whiteLabels","setWhiteLabels","whiteLabelsOptions","setWhiteLabelsOptions","whiteLabelsLoading","setWhiteLabelsLoading","selectedCountries","setSelectedCountries","countries","setCountries","countriesOptions","setCountriesOptions","countriesLoading","setCountriesLoading","groupBy","setGroupBy","setGroupByOptions","dailyActions","setDailyActions","loading","setLoading","error","setError","showAdvancedFilters","setShowAdvancedFilters","showFiltersPanel","setShowFiltersPanel","showExportDialog","setShowExportDialog","visibleColumns","setVisibleColumns","advancedFilters","setAdvancedFilters","enableHierarchicalGrouping","setEnableHierarchicalGrouping","hierarchicalGroupings","setHierarchicalGroupings","summary","setSummary","totalPlayers","newRegistrations","totalDeposits","totalBets","totalFTD","totalCashouts","totalGGR","totalRegistrations","playersTrend","registrationsTrend","depositsTrend","betsTrend","trends","previous","lastWeek","lastMonth","lastYear","selectedMetrics","setSelectedMetrics","comparisonPeriods","setComparisonPeriods","totalWithdrawals","avgBetAmount","conversionRate","retentionRate","activeUsers","avgSessionDuration","betCount","useEffect","fetchMetadata","async","retryCount","arguments","undefined","maxRetries","data","dailyActionsService","getMetadata","fetchedWhiteLabels","options","wl","defaultOptions","fetchedCountries","countryOptions","country","err","defaultWhiteLabels","defaultCountries","timer","fetchDailyActions","fetchInitialData","clearTimeout","registrations","reduce","sum","item","deposits","ftd","cashouts","paidCashouts","bets","betsCasino","betsSport","betsLive","betsBingo","players","uniquePlayers","generateTrend","Math","random","summaryData","formattedStartDate","format","filters","groupByString","whiteLabelIds","parseInt","countryIds","keys","registration","registrationDate","firstTimeDeposit","firstDepositDate","lastDepositDate","lastLogin","lastLoginDate","trackers","promotionCode","playerIds","split","trim","regPlayMode","playModes","platform","platforms","status","statuses","gender","genders","currency","currencies","smsEnabled","mailEnabled","phoneEnabled","postEnabled","bonusEnabled","getData","processedData","Array","isArray","items","handleExportDialogClose","Container","DailyActionsHeader","subtitle","Alert","severity","DailyActionsFilters","values","v","toString","handleApplyFilters","handleExport","dataLength","ConfigurableSummaryCards","isLoading","onMetricsChange","metrics","onComparisonPeriodChange","handleComparisonPeriodChange","metric","period","HierarchicalGroupingSelector","groupings","enabled","DailyActionsTableNew","hierarchicalGrouping","groupByLevels","handleColumnVisibilityChange","columns","onStateChange","state","grouping","JSON","stringify","onDrillDown","handleDrillDown","row","sourceGrouping","targetGrouping","SimpleReportExport","onExport"],"sourceRoot":""}