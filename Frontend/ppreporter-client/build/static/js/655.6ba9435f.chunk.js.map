{"version":3,"file":"static/js/655.6ba9435f.chunk.js","mappings":"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","sources":["components/common/Card.tsx","components/common/FilterPanel.tsx","components/common/TabPanel.tsx","components/common/ErrorBoundary.tsx","components/common/KPICard.tsx","components/common/DateRangePicker.tsx","components/common/EmptyState.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Paper, \n  Typography, \n  Box, \n  Divider, \n  IconButton,\n  Collapse\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport { CardProps } from '../../types/common';\n\n/**\n * Card component for consistent UI elements across the application\n */\nconst Card: React.FC<CardProps> = ({\n  children,\n  title,\n  subheader,\n  action,\n  icon,\n  sx,\n  collapsible = false,\n  defaultExpanded = true,\n  variant = 'outlined'\n}) => {\n  const [expanded, setExpanded] = useState<boolean>(defaultExpanded);\n\n  const handleExpandToggle = (): void => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Paper\n      variant={variant}\n      sx={{\n        borderRadius: 1,\n        overflow: 'hidden',\n        ...sx\n      }}\n    >\n      {/* Card Header */}\n      {(title || subheader) && (\n        <>\n          <Box\n            sx={{\n              px: 3,\n              py: 2,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              {icon && (\n                <Box sx={{ mr: 1.5, display: 'flex', alignItems: 'center' }}>\n                  {icon}\n                </Box>\n              )}\n              <Box>\n                {title && (\n                  <Typography variant=\"h6\" component=\"div\">\n                    {title}\n                  </Typography>\n                )}\n                {subheader && (\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {subheader}\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              {action}\n              {collapsible && (\n                <IconButton\n                  onClick={handleExpandToggle}\n                  sx={{ ml: action ? 1 : 0 }}\n                  size=\"small\"\n                >\n                  {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                </IconButton>\n              )}\n            </Box>\n          </Box>\n          <Divider />\n        </>\n      )}\n\n      {/* Card Content */}\n      {collapsible ? (\n        <Collapse in={expanded}>\n          <Box>{children}</Box>\n        </Collapse>\n      ) : (\n        <Box>{children}</Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Chip,\n  Divider,\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  Collapse,\n  Tooltip,\n  Grid,\n  SelectChangeEvent\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { CommonProps } from '../../types/common';\n\n// Filter type enum\nexport enum FilterType {\n  TEXT = 'text',\n  SELECT = 'select',\n  DATE = 'date',\n  BOOLEAN = 'boolean',\n  NUMBER = 'number',\n  RANGE = 'range'\n}\n\n// Filter option interface\nexport interface FilterOption {\n  value: string | number;\n  label: string;\n}\n\n// Filter definition interface\nexport interface FilterDefinition {\n  id: string;\n  label: string;\n  type: FilterType | string;\n  options?: FilterOption[];\n  defaultValue?: any;\n  placeholder?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\n// Component props interface\nexport interface FilterPanelProps extends CommonProps {\n  title?: string;\n  filters: FilterDefinition[];\n  values: Record<string, any>;\n  onChange: (id: string, value: any) => void;\n  onApply?: () => void;\n  onReset?: () => void;\n  onFilterSave?: () => void;\n  expanded?: boolean;\n  defaultExpanded?: boolean;\n}\n\n/**\n * FilterPanel component for filtering data in reports and dashboards\n */\nconst FilterPanel: React.FC<FilterPanelProps> = ({\n  title = 'Filters',\n  filters = [],\n  values = {},\n  onChange,\n  onApply,\n  onReset,\n  onFilterSave,\n  expanded: controlledExpanded,\n  defaultExpanded = true,\n  sx\n}) => {\n  // State for uncontrolled expansion\n  const [internalExpanded, setInternalExpanded] = useState<boolean>(defaultExpanded);\n  \n  // Determine if component is controlled or uncontrolled\n  const isControlled = controlledExpanded !== undefined;\n  const expanded = isControlled ? controlledExpanded : internalExpanded;\n  \n  // Get active filters count\n  const activeFilters = Object.keys(values).filter(key => {\n    const value = values[key];\n    return value !== undefined && value !== null && value !== '';\n  });\n  \n  // Toggle expansion state\n  const toggleExpand = (): void => {\n    if (!isControlled) {\n      setInternalExpanded(!internalExpanded);\n    }\n  };\n  \n  // Handle filter change\n  const handleFilterChange = (id: string, value: any): void => {\n    if (onChange) {\n      onChange(id, value);\n    }\n  };\n  \n  // Handle apply filters\n  const handleApplyFilters = (): void => {\n    if (onApply) {\n      onApply();\n    }\n  };\n  \n  // Handle reset filters\n  const handleResetFilters = (): void => {\n    if (onReset) {\n      onReset();\n    }\n  };\n  \n  // Handle save filters\n  const handleSaveFilters = (): void => {\n    if (onFilterSave) {\n      onFilterSave();\n    }\n  };\n  \n  // Render filter input based on type\n  const renderFilterInput = (filter: FilterDefinition): React.ReactNode => {\n    const value = values[filter.id] !== undefined ? values[filter.id] : filter.defaultValue || '';\n    \n    switch (filter.type) {\n      case FilterType.SELECT:\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel id={`filter-${filter.id}-label`}>{filter.label}</InputLabel>\n            <Select\n              labelId={`filter-${filter.id}-label`}\n              id={`filter-${filter.id}`}\n              value={value}\n              label={filter.label}\n              onChange={(e: SelectChangeEvent<any>) => handleFilterChange(filter.id, e.target.value)}\n            >\n              <MenuItem value=\"\">\n                <em>Any</em>\n              </MenuItem>\n              {filter.options?.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n      \n      case FilterType.DATE:\n        return (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              label={filter.label}\n              value={value || null}\n              onChange={(newValue) => handleFilterChange(filter.id, newValue)}\n              slotProps={{ textField: { size: 'small', fullWidth: true } }}\n            />\n          </LocalizationProvider>\n        );\n      \n      case FilterType.BOOLEAN:\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel id={`filter-${filter.id}-label`}>{filter.label}</InputLabel>\n            <Select\n              labelId={`filter-${filter.id}-label`}\n              id={`filter-${filter.id}`}\n              value={value}\n              label={filter.label}\n              onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n            >\n              <MenuItem value=\"\">\n                <em>Any</em>\n              </MenuItem>\n              <MenuItem value=\"true\">Yes</MenuItem>\n              <MenuItem value=\"false\">No</MenuItem>\n            </Select>\n          </FormControl>\n        );\n      \n      case FilterType.NUMBER:\n        return (\n          <TextField\n            fullWidth\n            label={filter.label}\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n            size=\"small\"\n            inputProps={{\n              min: filter.min,\n              max: filter.max,\n              step: filter.step || 1\n            }}\n          />\n        );\n      \n      case FilterType.RANGE:\n        // Range filter would be implemented here\n        return (\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <TextField\n              label={`Min ${filter.label}`}\n              type=\"number\"\n              value={value?.min || ''}\n              onChange={(e) => handleFilterChange(filter.id, { ...value, min: e.target.value })}\n              size=\"small\"\n              sx={{ flex: 1 }}\n            />\n            <TextField\n              label={`Max ${filter.label}`}\n              type=\"number\"\n              value={value?.max || ''}\n              onChange={(e) => handleFilterChange(filter.id, { ...value, max: e.target.value })}\n              size=\"small\"\n              sx={{ flex: 1 }}\n            />\n          </Box>\n        );\n      \n      // Default to text input\n      default:\n        return (\n          <TextField\n            fullWidth\n            label={filter.label}\n            value={value}\n            onChange={(e) => handleFilterChange(filter.id, e.target.value)}\n            size=\"small\"\n            placeholder={filter.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Paper variant=\"outlined\" sx={{ mb: 2, ...sx }}>\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          <FilterListIcon sx={{ mr: 1 }} />\n          <Typography variant=\"h6\" component=\"div\">\n            {title}\n          </Typography>\n          \n          {activeFilters.length > 0 && (\n            <Chip\n              label={`${activeFilters.length} active`}\n              color=\"primary\"\n              size=\"small\"\n              sx={{ ml: 1 }}\n            />\n          )}\n        </Box>\n        \n        <Box>\n          <IconButton onClick={toggleExpand} size=\"small\">\n            {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </IconButton>\n        </Box>\n      </Box>\n      \n      <Collapse in={expanded}>\n        <Divider />\n        \n        <Box sx={{ p: 2 }}>\n          <Grid container spacing={2}>\n            {filters.map((filter) => (\n              <Grid item xs={12} sm={6} md={4} key={filter.id}>\n                {renderFilterInput(filter)}\n              </Grid>\n            ))}\n          </Grid>\n          \n          {activeFilters.length > 0 && (\n            <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              <Typography variant=\"body2\" sx={{ mr: 1 }}>\n                Active filters:\n              </Typography>\n              \n              {activeFilters.map((key) => {\n                const filter = filters.find(f => f.id === key);\n                let displayValue = values[key];\n                \n                if (filter?.type === FilterType.SELECT && filter.options) {\n                  const option = filter.options.find(o => o.value === displayValue);\n                  displayValue = option ? option.label : displayValue;\n                }\n                \n                if (filter?.type === FilterType.BOOLEAN) {\n                  displayValue = displayValue === 'true' ? 'Yes' : 'No';\n                }\n                \n                if (filter?.type === FilterType.DATE && displayValue instanceof Date) {\n                  displayValue = displayValue.toLocaleDateString();\n                }\n                \n                return (\n                  <Chip\n                    key={key}\n                    label={`${filter?.label || key}: ${displayValue}`}\n                    onDelete={() => handleFilterChange(key, '')}\n                    size=\"small\"\n                  />\n                );\n              })}\n              \n              <Chip\n                label=\"Clear All\"\n                onDelete={handleResetFilters}\n                deleteIcon={<ClearIcon />}\n                size=\"small\"\n                color=\"secondary\"\n              />\n            </Box>\n          )}\n        </Box>\n        \n        <Divider />\n        \n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\n          <Button variant=\"outlined\" onClick={handleResetFilters} startIcon={<ClearIcon />}>\n            Reset\n          </Button>\n          \n          {onFilterSave && (\n            <Tooltip title=\"Save these filters\">\n              <Button \n                variant=\"outlined\" \n                color=\"secondary\" \n                onClick={handleSaveFilters}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </Tooltip>\n          )}\n          \n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={handleApplyFilters}\n            startIcon={<FilterListIcon />}\n          >\n            Apply Filters\n          </Button>\n        </Box>\n      </Collapse>\n    </Paper>\n  );\n};\n\nexport default FilterPanel;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { TabPanelProps } from '../../types/common';\n\n/**\n * TabPanel component that displays content based on the active tab\n * Enhanced with proper accessibility attributes\n */\nconst TabPanel: React.FC<TabPanelProps> = ({\n  children,\n  value,\n  index,\n  label,\n  sx,\n  ...other\n}) => {\n  const isSelected = value === index;\n  \n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={!isSelected}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      aria-label={label}\n      {...other}\n    >\n      {isSelected && (\n        <Box sx={{ p: 3, ...sx }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { ErrorBoundaryProps, ErrorBoundaryState, ErrorState } from '../../types/common';\n\n/**\n * ErrorBoundary component\n * Catches JavaScript errors in child components and displays a fallback UI\n */\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      error: {\n        message: error.message,\n        stack: error.stack\n      }\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    // Log the error to an error reporting service\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\n\n    // You could also log the error to an error reporting service here\n    // logErrorToService(error, errorInfo);\n  }\n\n  handleReset = (): void => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render(): ReactNode {\n    const { fallback, children } = this.props;\n    const { hasError, error } = this.state;\n\n    if (hasError) {\n      // Custom fallback UI\n      if (fallback) {\n        if (typeof fallback === 'function' && error) {\n          const result = fallback(error);\n          return result as ReactNode;\n        } else {\n          return fallback as ReactNode;\n        }\n      }\n\n      // Default fallback UI\n      return (\n        <Box sx={{ p: 3, textAlign: 'center' }}>\n          <ErrorOutlineIcon sx={{ fontSize: 48, color: 'error.main', mb: 2 }} />\n          <Typography variant=\"h6\" color=\"error\" gutterBottom>\n            Something went wrong\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n            {error?.message || 'An unexpected error occurred'}\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            startIcon={<RefreshIcon />}\n            onClick={this.handleReset}\n          >\n            Try Again\n          </Button>\n        </Box>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Tooltip,\n  CircularProgress,\n  Divider,\n  IconButton\n} from '@mui/material';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingFlatIcon from '@mui/icons-material/TrendingFlat';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { KPICardProps } from '../../types/common';\n\n/**\n * KPI (Key Performance Indicator) card component for displaying metrics with trends\n */\nconst KPICard: React.FC<KPICardProps> = ({\n  title,\n  value,\n  subtitle,\n  description,\n  trend = null,\n  trendLabel = 'vs previous period',\n  icon = null,\n  loading = false,\n  onMoreClick,\n  color,\n  isInverse = false,\n  sx\n}) => {\n  // Determine the trend direction and color\n  const getTrendInfo = () => {\n    if (trend === null) return { icon: null, color: 'text.secondary' };\n    \n    if (trend > 0) {\n      return {\n        icon: <TrendingUpIcon fontSize=\"small\" />,\n        color: isInverse ? 'error.main' : 'success.main'\n      };\n    }\n    \n    if (trend < 0) {\n      return {\n        icon: <TrendingDownIcon fontSize=\"small\" />,\n        color: isInverse ? 'success.main' : 'error.main'\n      };\n    }\n    \n    return {\n      icon: <TrendingFlatIcon fontSize=\"small\" />,\n      color: 'text.secondary'\n    };\n  };\n\n  const trendInfo = getTrendInfo();\n\n  // Format the trend percentage\n  const formatTrend = (value: number | null): string => {\n    if (value === null) return '';\n    const prefix = value > 0 ? '+' : '';\n    return `${prefix}${value}%`;\n  };\n\n  return (\n    <Card \n      variant=\"outlined\" \n      sx={{ \n        height: '100%', \n        display: 'flex',\n        flexDirection: 'column',\n        bgcolor: color,\n        ...sx\n      }}\n    >\n      <CardContent sx={{ flex: 1, position: 'relative', p: 2 }}>\n        {/* Card header with title and actions */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              {title}\n            </Typography>\n            \n            {description && (\n              <Tooltip title={description} arrow>\n                <IconButton size=\"small\" sx={{ ml: 0.5, p: 0 }}>\n                  <InfoOutlinedIcon fontSize=\"small\" color=\"action\" />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n          \n          {onMoreClick && (\n            <IconButton \n              size=\"small\" \n              onClick={onMoreClick}\n              sx={{ marginRight: -1 }}\n            >\n              <MoreVertIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n        </Box>\n        \n        {/* Main content with value and icon */}\n        <Box \n          sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'space-between',\n            mt: 1\n          }}\n        >\n          <Box>\n            {loading ? (\n              <CircularProgress size={24} />\n            ) : (\n              <>\n                <Typography variant=\"h4\" component=\"div\" fontWeight=\"medium\">\n                  {value}\n                </Typography>\n                \n                {subtitle && (\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {subtitle}\n                  </Typography>\n                )}\n              </>\n            )}\n          </Box>\n          \n          {icon && (\n            <Box \n              sx={{ \n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                bgcolor: 'action.hover',\n                borderRadius: '50%',\n                width: 48,\n                height: 48\n              }}\n            >\n              {icon}\n            </Box>\n          )}\n        </Box>\n        \n        {/* Trend indicator */}\n        {trend !== null && (\n          <>\n            <Divider sx={{ my: 1.5 }} />\n            \n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box \n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  color: trendInfo.color,\n                  mr: 1\n                }}\n              >\n                {trendInfo.icon}\n                <Typography \n                  variant=\"body2\" \n                  component=\"span\" \n                  fontWeight=\"medium\"\n                  sx={{ color: trendInfo.color, ml: 0.5 }}\n                >\n                  {formatTrend(trend)}\n                </Typography>\n              </Box>\n              \n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {trendLabel}\n              </Typography>\n            </Box>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default KPICard;\n","import React, { useState } from 'react';\nimport { Box, TextField, Button, Paper, Typography, IconButton, Popover } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format, startOfDay, endOfDay, subDays, startOfMonth, endOfMonth, isValid } from 'date-fns';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { DateRangePickerProps, DatePreset, DateRange } from '../../types/dateRangePicker';\n\n/**\n * A reusable date range picker component with presets\n */\nconst DateRangePicker: React.FC<DateRangePickerProps> = ({\n  startDate = null,\n  endDate = null,\n  onChange,\n  buttonLabel = \"Date Range\",\n  presets = null,\n  showClearButton = true,\n  autoApplyPresets = true,\n  disabled = false,\n  className,\n  sx\n}) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const [tempStartDate, setTempStartDate] = useState<Date | null>(startDate);\n  const [tempEndDate, setTempEndDate] = useState<Date | null>(endDate);\n\n  // Default presets if none provided\n  const defaultPresets: DatePreset[] = [\n    { label: 'Today', getValue: () => ({ start: startOfDay(new Date()), end: endOfDay(new Date()) }) },\n    { label: 'Yesterday', getValue: () => ({ start: startOfDay(subDays(new Date(), 1)), end: endOfDay(subDays(new Date(), 1)) }) },\n    { label: 'Last 7 days', getValue: () => ({ start: startOfDay(subDays(new Date(), 6)), end: endOfDay(new Date()) }) },\n    { label: 'Last 30 days', getValue: () => ({ start: startOfDay(subDays(new Date(), 29)), end: endOfDay(new Date()) }) },\n    { label: 'This month', getValue: () => ({ start: startOfMonth(new Date()), end: endOfMonth(new Date()) }) },\n    { label: 'Last month', getValue: () => {\n      const date = new Date();\n      date.setMonth(date.getMonth() - 1);\n      return { start: startOfMonth(date), end: endOfMonth(date) };\n    }},\n  ];\n\n  const datePresets = presets || defaultPresets;\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setTempStartDate(startDate);\n    setTempEndDate(endDate);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleApply = (): void => {\n    if (onChange) {\n      onChange({ start: tempStartDate, end: tempEndDate });\n    }\n    handleClose();\n  };\n\n  const handleClear = (e?: React.MouseEvent): void => {\n    if (e) {\n      e.stopPropagation();\n    }\n    setTempStartDate(null);\n    setTempEndDate(null);\n    if (onChange) {\n      onChange({ start: null, end: null });\n    }\n    handleClose();\n  };\n\n  const handlePresetClick = (preset: DatePreset): void => {\n    const { start, end } = preset.getValue();\n    setTempStartDate(start);\n    setTempEndDate(end);\n    \n    if (autoApplyPresets) {\n      if (onChange) {\n        onChange({ start, end });\n      }\n      handleClose();\n    }\n  };\n\n  const formatButtonText = (): string => {\n    if (startDate && endDate && isValid(startDate) && isValid(endDate)) {\n      return `${format(startDate, 'MMM dd, yyyy')} - ${format(endDate, 'MMM dd, yyyy')}`;\n    }\n    return buttonLabel;\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'date-range-popover' : undefined;\n\n  return (\n    <div className={className} style={sx}>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClick}\n        startIcon={<CalendarTodayIcon />}\n        endIcon={showClearButton && startDate && endDate && isValid(startDate) && isValid(endDate) ? (\n          <IconButton size=\"small\" onClick={handleClear}>\n            <ClearIcon fontSize=\"small\" />\n          </IconButton>\n        ) : undefined}\n        sx={{ \n          justifyContent: 'space-between', \n          minWidth: 200,\n          textTransform: 'none'\n        }}\n        disabled={disabled}\n      >\n        {formatButtonText()}\n      </Button>\n      \n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        PaperProps={{\n          elevation: 8,\n          sx: { p: 2, width: { xs: '90vw', sm: 400 } }\n        }}\n      >\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Select Date Range\n        </Typography>\n        \n        <Box sx={{ mb: 2 }}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <DatePicker\n                label=\"Start Date\"\n                value={tempStartDate}\n                onChange={(newValue) => setTempStartDate(newValue)}\n                slotProps={{ \n                  textField: { \n                    size: 'small', \n                    fullWidth: true,\n                    helperText: tempStartDate ? format(tempStartDate, 'EEEE') : '' \n                  } \n                }}\n              />\n              <DatePicker\n                label=\"End Date\"\n                value={tempEndDate}\n                onChange={(newValue) => setTempEndDate(newValue)}\n                minDate={tempStartDate}\n                slotProps={{ \n                  textField: { \n                    size: 'small', \n                    fullWidth: true,\n                    helperText: tempEndDate ? format(tempEndDate, 'EEEE') : '' \n                  } \n                }}\n              />\n            </Box>\n          </LocalizationProvider>\n        </Box>\n        \n        <Typography variant=\"subtitle2\" gutterBottom>\n          Presets\n        </Typography>\n        \n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n          {datePresets.map((preset, index) => (\n            <Button \n              key={index}\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => handlePresetClick(preset)}\n            >\n              {preset.label}\n            </Button>\n          ))}\n        </Box>\n        \n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, mt: 2 }}>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n            Apply\n          </Button>\n        </Box>\n      </Popover>\n    </div>\n  );\n};\n\nexport default DateRangePicker;\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { EmptyStateProps } from '../../types/common';\n\n/**\n * EmptyState component\n * Displays a message when no data is available\n */\nconst EmptyState: React.FC<EmptyStateProps> = ({ \n  message = 'No data available', \n  icon = <InfoIcon sx={{ fontSize: 48, color: 'text.secondary' }} />,\n  action,\n  description,\n  sx = {}\n}) => {\n  return (\n    <Box \n      sx={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'center', \n        p: 4,\n        ...sx\n      }}\n    >\n      {icon}\n      <Typography \n        variant=\"body1\" \n        color=\"text.secondary\" \n        sx={{ mt: 2, textAlign: 'center' }}\n      >\n        {message}\n      </Typography>\n      \n      {description && (\n        <Typography \n          variant=\"body2\" \n          color=\"text.secondary\" \n          sx={{ mt: 1, textAlign: 'center' }}\n        >\n          {description}\n        </Typography>\n      )}\n      \n      {action && (\n        <Box sx={{ mt: 2 }}>\n          {action}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default EmptyState;\n"],"names":["_ref","children","title","subheader","action","icon","sx","collapsible","defaultExpanded","variant","expanded","setExpanded","useState","_jsxs","Paper","borderRadius","overflow","_Fragment","Box","px","py","display","alignItems","justifyContent","_jsx","mr","Typography","component","color","IconButton","onClick","handleExpandToggle","ml","size","ExpandLessIcon","ExpandMoreIcon","Divider","Collapse","in","FilterType","filters","values","onChange","onApply","onReset","onFilterSave","controlledExpanded","internalExpanded","setInternalExpanded","isControlled","undefined","activeFilters","Object","keys","filter","key","value","handleFilterChange","id","handleResetFilters","renderFilterInput","_filter$options","defaultValue","type","SELECT","FormControl","fullWidth","InputLabel","label","Select","labelId","e","target","MenuItem","options","map","option","DATE","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newValue","slotProps","textField","BOOLEAN","NUMBER","TextField","inputProps","min","max","step","RANGE","gap","flex","placeholder","mb","p","FilterListIcon","length","Chip","toggleExpand","Grid","container","spacing","item","xs","sm","md","mt","flexWrap","find","f","displayValue","o","Date","toLocaleDateString","onDelete","deleteIcon","ClearIcon","Button","startIcon","Tooltip","handleSaveFilters","SaveIcon","handleApplyFilters","index","other","isSelected","role","hidden","ErrorBoundary","Component","constructor","props","super","handleReset","this","setState","hasError","error","state","getDerivedStateFromError","message","stack","componentDidCatch","errorInfo","console","render","fallback","textAlign","ErrorOutlineIcon","fontSize","gutterBottom","RefreshIcon","subtitle","description","trend","trendLabel","loading","onMoreClick","isInverse","trendInfo","TrendingUpIcon","TrendingDownIcon","TrendingFlatIcon","Card","height","flexDirection","bgcolor","CardContent","position","arrow","InfoOutlinedIcon","marginRight","MoreVertIcon","CircularProgress","fontWeight","width","my","formatTrend","startDate","endDate","buttonLabel","presets","showClearButton","autoApplyPresets","disabled","className","anchorEl","setAnchorEl","tempStartDate","setTempStartDate","tempEndDate","setTempEndDate","datePresets","getValue","start","startOfDay","end","endOfDay","subDays","startOfMonth","endOfMonth","date","setMonth","getMonth","handleClose","open","Boolean","style","event","currentTarget","CalendarTodayIcon","endIcon","isValid","stopPropagation","minWidth","textTransform","format","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","elevation","helperText","minDate","preset","handlePresetClick","handleApply","InfoIcon"],"sourceRoot":""}