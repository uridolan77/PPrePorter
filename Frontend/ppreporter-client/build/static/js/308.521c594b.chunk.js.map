{"version":3,"file":"static/js/308.521c594b.chunk.js","mappings":"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","sources":["pages/showcase/AuthComponentsShowcase.tsx","components/auth/LoginForm.tsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Button\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Import auth components\nimport LoginForm from '../../components/auth/LoginForm';\nimport RegisterForm from '../../components/auth/RegisterForm';\n\n// Sample component categories\nconst componentCategories = [\n  {\n    id: 'authentication',\n    name: 'Authentication Components',\n    components: [\n      {\n        id: 'loginForm',\n        name: 'Login Form',\n        description: 'Form for user authentication',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <LoginForm\n                  onSubmit={(data) => console.log('Login submitted:', data)}\n                  onGoogleLogin={() => console.log('Google login clicked')}\n                  onMicrosoftLogin={() => console.log('Microsoft login clicked')}\n                  showSocialLogin={true}\n                  showForgotPassword={true}\n                  showRegister={true}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      },\n      {\n        id: 'registerForm',\n        name: 'Register Form',\n        description: 'Form for new user registration',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <RegisterForm\n                  onSubmit={(data) => console.log('Registration submitted:', data)}\n                  onGoogleRegister={() => console.log('Google registration clicked')}\n                  onMicrosoftRegister={() => console.log('Microsoft registration clicked')}\n                  showSocialLogin={true}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      }\n    ]\n  },\n  {\n    id: 'passwordManagement',\n    name: 'Password Management',\n    components: [\n      {\n        id: 'forgotPassword',\n        name: 'Forgot Password',\n        description: 'Form for password recovery',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">Forgot Password Form</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display a form for password recovery\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">Forgot Password Form Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      },\n      {\n        id: 'resetPassword',\n        name: 'Reset Password',\n        description: 'Form for setting a new password',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">Reset Password Form</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display a form for setting a new password\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">Reset Password Form Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      }\n    ]\n  },\n  {\n    id: 'userManagement',\n    name: 'User Management',\n    components: [\n      {\n        id: 'userProfile',\n        name: 'User Profile',\n        description: 'Component for displaying and editing user profile',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">User Profile</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display and allow editing of user profile information\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">User Profile Component Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      },\n      {\n        id: 'userPermissions',\n        name: 'User Permissions',\n        description: 'Component for managing user permissions',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">User Permissions</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display and allow management of user permissions\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">User Permissions Component Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      }\n    ]\n  }\n];\n\n/**\n * Authentication Components Showcase\n * Displays all authentication and user management components in a categorized list\n */\nconst AuthComponentsShowcase: React.FC = () => {\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box sx={{ mb: 4, display: 'flex', alignItems: 'center' }}>\n        <Button\n          component={RouterLink}\n          to=\"/showcase\"\n          startIcon={<ArrowBackIcon />}\n          sx={{ mr: 2 }}\n        >\n          Back to Showcase\n        </Button>\n        <Typography variant=\"h4\" component=\"h1\">\n          Authentication Components\n        </Typography>\n      </Box>\n\n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n        This showcase demonstrates the various authentication and user management components available in the application.\n        Note: Some components are currently displayed as placeholders.\n      </Typography>\n\n      {componentCategories.map((category) => (\n        <Box key={category.id} sx={{ mb: 6 }}>\n          <Typography variant=\"h5\" component=\"h2\" sx={{ mb: 2 }}>\n            {category.name}\n          </Typography>\n          <Divider sx={{ mb: 3 }} />\n\n          <List>\n            {category.components.map((component) => (\n              <ListItem key={component.id} sx={{ display: 'block', mb: 4 }}>\n                <ListItemButton\n                  component=\"div\"\n                  disableRipple\n                  sx={{ display: 'block', p: 0, cursor: 'default' }}\n                >\n                  <ListItemText\n                    primary={component.name}\n                    secondary={component.description}\n                    primaryTypographyProps={{ variant: 'h6' }}\n                    sx={{ mb: 2 }}\n                  />\n                  {component.component}\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      ))}\n    </Container>\n  );\n};\n\nexport default AuthComponentsShowcase;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  IconButton,\n  Link,\n  Alert,\n  CircularProgress,\n  Paper,\n  Divider,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport MicrosoftIcon from '@mui/icons-material/Microsoft';\nimport { CommonProps } from '../../types/common';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n  rememberMe: boolean;\n}\n\ninterface LoginFormErrors {\n  username?: string;\n  password?: string;\n}\n\ninterface LoginFormProps extends CommonProps {\n  onSubmit?: (data: LoginFormData) => void;\n  onGoogleLogin?: () => void;\n  onMicrosoftLogin?: () => void;\n  error?: string | null;\n  loading?: boolean;\n  showSocialLogin?: boolean;\n  showForgotPassword?: boolean;\n  showRegister?: boolean;\n  registerLink?: string;\n  forgotPasswordLink?: string;\n  logoUrl?: string;\n}\n\n/**\n * Login form component for user authentication\n */\nconst LoginForm: React.FC<LoginFormProps> = ({\n  onSubmit,\n  onGoogleLogin,\n  onMicrosoftLogin,\n  error,\n  loading = false,\n  showSocialLogin = true,\n  showForgotPassword = true,\n  showRegister = true,\n  registerLink = '/register',\n  forgotPasswordLink = '/forgot-password',\n  logoUrl = '/logo.png',\n  sx\n}) => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    username: '',\n    password: '',\n    rememberMe: false\n  });\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [formErrors, setFormErrors] = useState<LoginFormErrors>({});\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value, checked, type } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n\n    // Clear validation error when field is edited\n    if (formErrors[name as keyof LoginFormErrors]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: undefined\n      });\n    }\n  };\n\n  const toggleShowPassword = (): void => {\n    setShowPassword(!showPassword);\n  };\n\n  const validate = (): LoginFormErrors => {\n    const errors: LoginFormErrors = {};\n\n    if (!formData.username.trim()) {\n      errors.username = 'Username or email is required';\n    }\n\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    // Prevent the default form submission behavior\n    e.preventDefault();\n\n    // Stop propagation to prevent any parent handlers from being called\n    e.stopPropagation();\n\n    console.log('Form submit event prevented');\n\n    const errors = validate();\n\n    if (Object.keys(errors).length === 0) {\n      if (onSubmit) {\n        console.log('Form is valid, calling onSubmit');\n        // Call the onSubmit handler with the form data\n        // This will be handled by the parent component\n        onSubmit(formData);\n      }\n    } else {\n      console.log('Form has errors:', errors);\n      setFormErrors(errors);\n    }\n\n    // Explicitly return false to ensure the form doesn't submit traditionally\n    return;\n  };\n\n  const handleGoogleLogin = (): void => {\n    if (onGoogleLogin) {\n      onGoogleLogin();\n    }\n  };\n\n  const handleMicrosoftLogin = (): void => {\n    if (onMicrosoftLogin) {\n      onMicrosoftLogin();\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        maxWidth: 450,\n        width: '100%',\n        p: 4,\n        borderRadius: 2,\n        ...sx\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={(e) => {\n          handleSubmit(e);\n          return false; // Explicitly return false to prevent form submission\n        }}\n        noValidate\n        autoComplete=\"off\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 3\n        }}\n      >\n        {/* Logo and Title */}\n        <Box sx={{ textAlign: 'center', mb: 2 }}>\n          <img\n            src={logoUrl}\n            alt=\"Logo\"\n            style={{ height: 60, width: 'auto', marginBottom: 16 }}\n            onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n          />\n          <Typography variant=\"h5\" component=\"h1\" gutterBottom sx={{ fontWeight: 'bold' }}>\n            Sign In\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Enter your credentials to access your account\n          </Typography>\n        </Box>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Username/Email Field */}\n        <TextField\n          label=\"Username or Email\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.username}\n          helperText={formErrors.username}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon color=\"action\" />\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Password Field */}\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.password}\n          helperText={formErrors.password}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={toggleShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Remember Me and Forgot Password */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"rememberMe\"\n                checked={formData.rememberMe}\n                onChange={handleChange}\n                color=\"primary\"\n                disabled={loading}\n              />\n            }\n            label=\"Remember me\"\n          />\n\n          {showForgotPassword && (\n            <Link\n              component={RouterLink}\n              to={forgotPasswordLink}\n              variant=\"body2\"\n              color=\"primary\"\n              underline=\"hover\"\n            >\n              Forgot password?\n            </Link>\n          )}\n        </Box>\n\n        {/* Submit Button */}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          disabled={loading}\n          sx={{ mt: 2 }}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Sign In'}\n        </Button>\n\n        {/* Register Link */}\n        {showRegister && (\n          <Box sx={{ textAlign: 'center', mt: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Don't have an account?{' '}\n              <Link\n                component={RouterLink}\n                to={registerLink}\n                color=\"primary\"\n                underline=\"hover\"\n              >\n                Sign up\n              </Link>\n            </Typography>\n          </Box>\n        )}\n\n        {/* Social Login Options */}\n        {showSocialLogin && (\n          <>\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n              <Divider sx={{ flex: 1 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mx: 2 }}>\n                or continue with\n              </Typography>\n              <Divider sx={{ flex: 1 }} />\n            </Box>\n\n            <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<GoogleIcon />}\n                onClick={handleGoogleLogin}\n                disabled={loading}\n              >\n                Google\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<MicrosoftIcon />}\n                onClick={handleMicrosoftLogin}\n                disabled={loading}\n              >\n                Microsoft\n              </Button>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["componentCategories","id","name","components","description","component","_jsx","Paper","sx","p","children","Grid","container","spacing","item","xs","md","LoginForm","onSubmit","data","console","log","onGoogleLogin","onMicrosoftLogin","showSocialLogin","showForgotPassword","showRegister","RegisterForm","onGoogleRegister","onMicrosoftRegister","_jsxs","Typography","variant","color","mb","Box","bgcolor","borderRadius","align","AuthComponentsShowcase","Container","maxWidth","py","display","alignItems","Button","RouterLink","to","startIcon","ArrowBackIcon","mr","map","category","Divider","List","ListItem","ListItemButton","disableRipple","cursor","ListItemText","primary","secondary","primaryTypographyProps","_ref","error","loading","registerLink","forgotPasswordLink","logoUrl","formData","setFormData","useState","username","password","rememberMe","showPassword","setShowPassword","formErrors","setFormErrors","handleChange","e","value","checked","type","target","undefined","handleSubmit","preventDefault","stopPropagation","errors","validate","trim","Object","keys","length","elevation","width","noValidate","autoComplete","flexDirection","gap","textAlign","src","alt","style","height","marginBottom","onError","gutterBottom","fontWeight","Alert","severity","TextField","label","onChange","fullWidth","helperText","InputProps","startAdornment","InputAdornment","position","EmailIcon","disabled","required","LockIcon","endAdornment","IconButton","onClick","toggleShowPassword","edge","VisibilityOff","Visibility","justifyContent","FormControlLabel","control","Checkbox","Link","underline","size","mt","CircularProgress","_Fragment","flex","mx","GoogleIcon","handleGoogleLogin","MicrosoftIcon","handleMicrosoftLogin","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}