{"version":3,"file":"static/js/5075.348c5493.chunk.js","mappings":"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","sources":["components/common/CardAccent.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","utils/applyFlatModernStyle.ts","pages/showcase/FlatModernStyleExample.tsx","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import React from 'react';\nimport { Box, useTheme } from '@mui/material';\nimport { getWavePatternBackground } from '../../theme/flatModernTheme';\n\nexport type AccentPosition = 'left' | 'top' | 'right' | 'bottom';\nexport type AccentVariant = 'teal' | 'purple' | 'blue' | 'green' | 'amber' | 'red';\n\nexport interface CardAccentProps {\n  /**\n   * Position of the accent stripe\n   */\n  position?: AccentPosition;\n\n  /**\n   * Color variant of the accent\n   */\n  variant?: AccentVariant;\n\n  /**\n   * Whether to show a wave pattern background\n   */\n  showWavePattern?: boolean;\n\n  /**\n   * Thickness of the accent stripe in pixels\n   */\n  thickness?: number;\n\n  /**\n   * Custom color for the accent (overrides variant)\n   */\n  color?: string;\n\n  /**\n   * Opacity of the wave pattern (0-1)\n   */\n  patternOpacity?: number;\n}\n\n/**\n * CardAccent component\n * Adds an accent stripe and optional wave pattern to cards\n */\nconst CardAccent: React.FC<CardAccentProps> = ({\n  position = 'left',\n  variant = 'teal',\n  showWavePattern = false,\n  thickness = 8,\n  color,\n  patternOpacity = 0.1\n}) => {\n  const theme = useTheme();\n\n  // Get color based on variant\n  const getColor = (): string => {\n    if (color) return color;\n\n    const variantColors = {\n      teal: theme.palette.primary.main,\n      purple: theme.palette.secondary.main,\n      blue: theme.palette.info.main,\n      green: theme.palette.success.main,\n      amber: theme.palette.warning.main,\n      red: theme.palette.error.main\n    };\n\n    return variantColors[variant] || theme.palette.primary.main;\n  };\n\n  // Get position styles\n  const getPositionStyles = () => {\n    switch (position) {\n      case 'top':\n        return {\n          top: 0,\n          left: 0,\n          right: 0,\n          height: thickness,\n          width: '100%'\n        };\n      case 'right':\n        return {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: thickness,\n          height: '100%'\n        };\n      case 'bottom':\n        return {\n          bottom: 0,\n          left: 0,\n          right: 0,\n          height: thickness,\n          width: '100%'\n        };\n      case 'left':\n      default:\n        return {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          width: thickness,\n          height: '100%'\n        };\n    }\n  };\n\n  const accentColor = getColor();\n  // Extract position styles to avoid complex union type\n  const positionStyles = getPositionStyles();\n\n  // Create a style object instead of using sx prop\n  const accentStyle = {\n    position: 'absolute',\n    backgroundColor: accentColor,\n    zIndex: 1,\n    top: positionStyles.top,\n    right: positionStyles.right,\n    bottom: positionStyles.bottom,\n    left: positionStyles.left,\n    width: positionStyles.width,\n    height: positionStyles.height\n  } as React.CSSProperties;\n\n  return (\n    <>\n      {/* Accent stripe */}\n      <div style={accentStyle} />\n\n      {/* Wave pattern background */}\n      {showWavePattern && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            opacity: patternOpacity,\n            backgroundImage: getWavePatternBackground(accentColor),\n            backgroundSize: '100px 50px',\n            backgroundPosition: 'bottom',\n            backgroundRepeat: 'repeat-x',\n            zIndex: 0\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CardAccent;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { alpha } from '@mui/material/styles';\nimport { SxProps, Theme } from '@mui/material';\nimport { AccentPosition, AccentVariant } from '../components/common/CardAccent';\n\n/**\n * Apply flat modern styling to a card component\n * @param variant Color variant for the accent\n * @param accentPosition Position of the accent stripe\n * @param deepShadow Whether to apply a deep shadow\n * @param additionalSx Additional sx props to apply\n * @returns SxProps object with styling\n */\nexport const getFlatModernCardSx = (\n  variant: AccentVariant = 'teal',\n  accentPosition: AccentPosition = 'left',\n  deepShadow: boolean = true,\n  additionalSx: SxProps<Theme> = {}\n): SxProps<Theme> => {\n  // Get color based on variant\n  const getColor = (theme: Theme): string => {\n    const variantColors = {\n      teal: theme.palette.primary.main,\n      purple: theme.palette.secondary.main,\n      blue: theme.palette.info.main,\n      green: theme.palette.success.main,\n      amber: theme.palette.warning.main,\n      red: theme.palette.error.main\n    };\n\n    return variantColors[variant] || theme.palette.primary.main;\n  };\n\n  // Get position styles for accent\n  const getAccentStyles = () => {\n    const thickness = 4;\n\n    switch (accentPosition) {\n      case 'top':\n        return {\n          top: 0,\n          left: 0,\n          right: 0,\n          height: thickness,\n          width: '100%'\n        };\n      case 'right':\n        return {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: thickness,\n          height: '100%'\n        };\n      case 'bottom':\n        return {\n          bottom: 0,\n          left: 0,\n          right: 0,\n          height: thickness,\n          width: '100%'\n        };\n      case 'left':\n      default:\n        return {\n          top: 0,\n          left: 0,\n          bottom: 0,\n          width: thickness,\n          height: '100%'\n        };\n    }\n  };\n\n  return {\n    position: 'relative',\n    borderRadius: 2,\n    overflow: 'hidden',\n    border: '1px solid rgba(0, 0, 0, 0.08)',\n    transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n    ...(deepShadow ? {\n      boxShadow: '0px 12px 24px rgba(0, 0, 0, 0.12), 0px 24px 32px rgba(0, 0, 0, 0.16)',\n    } : {\n      boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.14)',\n    }),\n    '&:hover': {\n      transform: 'translateY(-4px)',\n      boxShadow: '0px 16px 32px rgba(0, 0, 0, 0.16), 0px 32px 48px rgba(0, 0, 0, 0.2)',\n    },\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      ...getAccentStyles(),\n      backgroundColor: (theme) => getColor(theme),\n      zIndex: 1\n    },\n    ...additionalSx\n  };\n};\n\n/**\n * Apply flat modern styling to a button\n * @param variant Color variant for the button\n * @param additionalSx Additional sx props to apply\n * @returns SxProps object with styling\n */\nexport const getFlatModernButtonSx = (\n  variant: AccentVariant = 'teal',\n  additionalSx: SxProps<Theme> = {}\n): SxProps<Theme> => {\n  return {\n    textTransform: 'none',\n    fontWeight: 600,\n    borderRadius: 1,\n    padding: '8px 16px',\n    transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.12)',\n    '&:hover': {\n      boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.12), 0px 4px 8px rgba(0, 0, 0, 0.14)',\n      transform: 'translateY(-2px)',\n    },\n    '&.MuiButton-outlined': {\n      borderWidth: '2px',\n      '&:hover': {\n        borderWidth: '2px',\n      },\n    },\n    ...additionalSx\n  };\n};\n\n/**\n * Apply flat modern styling to a table\n * @param variant Color variant for the table header\n * @param additionalSx Additional sx props to apply\n * @returns SxProps object with styling\n */\nexport const getFlatModernTableSx = (\n  variant: AccentVariant = 'teal',\n  additionalSx: SxProps<Theme> = {}\n): SxProps<Theme> => {\n  // Get color based on variant\n  const getColor = (theme: Theme): string => {\n    const variantColors = {\n      teal: theme.palette.primary.main,\n      purple: theme.palette.secondary.main,\n      blue: theme.palette.info.main,\n      green: theme.palette.success.main,\n      amber: theme.palette.warning.main,\n      red: theme.palette.error.main\n    };\n\n    return variantColors[variant] || theme.palette.primary.main;\n  };\n\n  return {\n    '& .MuiTableHead-root': {\n      '& .MuiTableCell-head': {\n        fontWeight: 600,\n        backgroundColor: (theme) => alpha(getColor(theme), 0.08),\n      }\n    },\n    '& .MuiTableRow-root': {\n      '&:nth-of-type(odd)': {\n        backgroundColor: (theme) => alpha(getColor(theme), 0.02),\n      },\n      '&:hover': {\n        backgroundColor: (theme) => alpha(getColor(theme), 0.04),\n      }\n    },\n    '& .MuiTableCell-root': {\n      borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\n    },\n    ...additionalSx\n  };\n};\n\n/**\n * Apply flat modern styling to a paper component\n * @param deepShadow Whether to apply a deep shadow\n * @param additionalSx Additional sx props to apply\n * @returns SxProps object with styling\n */\nexport const getFlatModernPaperSx = (\n  deepShadow: boolean = true,\n  additionalSx: SxProps<Theme> = {}\n): SxProps<Theme> => {\n  return {\n    borderRadius: 2,\n    border: '1px solid rgba(0, 0, 0, 0.08)',\n    transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n    ...(deepShadow ? {\n      boxShadow: '0px 12px 24px rgba(0, 0, 0, 0.12), 0px 24px 32px rgba(0, 0, 0, 0.16)',\n    } : {\n      boxShadow: '0px 6px 12px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.14)',\n    }),\n    '&:hover': {\n      transform: 'translateY(-2px)',\n      boxShadow: '0px 16px 32px rgba(0, 0, 0, 0.16), 0px 32px 48px rgba(0, 0, 0, 0.2)',\n    },\n    ...additionalSx\n  };\n};\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Card,\n  CardContent,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Grid,\n  ThemeProvider\n} from '@mui/material';\nimport flatModernTheme from '../../theme/flatModernTheme';\nimport {\n  getFlatModernCardSx,\n  getFlatModernButtonSx,\n  getFlatModernTableSx,\n  getFlatModernPaperSx\n} from '../../utils/applyFlatModernStyle';\nimport CardAccent from '../../components/common/CardAccent';\n\n/**\n * Example of how to apply flat modern styling to existing components\n */\nconst FlatModernStyleExample: React.FC = () => {\n  // Sample data for the table\n  const createData = (\n    name: string,\n    calories: number,\n    fat: number,\n    carbs: number,\n    protein: number\n  ) => {\n    return { name, calories, fat, carbs, protein };\n  };\n\n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\n\n  return (\n    <ThemeProvider theme={flatModernTheme}>\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n          Applying Flat Modern Style to Existing Components\n        </Typography>\n        <Typography variant=\"body1\" paragraph>\n          This example shows how to apply the flat modern styling to existing components\n          using the utility functions and CardAccent component.\n        </Typography>\n\n        <Grid container spacing={4}>\n          {/* Example 1: Using CardAccent component */}\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" gutterBottom>\n              Method 1: Using CardAccent Component\n            </Typography>\n            <Card sx={{ position: 'relative', overflow: 'hidden' }}>\n              <CardAccent position=\"left\" variant=\"teal\" />\n              <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                  Card with Left Accent\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  This card uses the CardAccent component to add a teal accent stripe on the left side.\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <Box mt={3}>\n              <Card sx={{ position: 'relative', overflow: 'hidden' }}>\n                <CardAccent position=\"top\" variant=\"purple\" showWavePattern />\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"div\">\n                    Card with Top Accent and Wave Pattern\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    This card uses the CardAccent component to add a purple accent stripe on the top\n                    and a wave pattern background.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Box>\n          </Grid>\n\n          {/* Example 2: Using utility functions */}\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" gutterBottom>\n              Method 2: Using Utility Functions\n            </Typography>\n            <Card sx={getFlatModernCardSx('blue', 'left')}>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                  Card with Left Accent\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  This card uses the getFlatModernCardSx utility function to add a blue accent stripe on the left side.\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <Box mt={3}>\n              <Card sx={getFlatModernCardSx('amber', 'bottom')}>\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"div\">\n                    Card with Bottom Accent\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    This card uses the getFlatModernCardSx utility function to add an amber accent stripe on the bottom.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Box>\n          </Grid>\n\n          {/* Example 3: Buttons */}\n          <Grid item xs={12}>\n            <Paper sx={getFlatModernPaperSx(true, { p: 3 })}>\n              <Typography variant=\"h6\" gutterBottom>\n                Flat Modern Buttons\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('teal')}>\n                  Teal Button\n                </Button>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('purple')}>\n                  Purple Button\n                </Button>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('blue')}>\n                  Blue Button\n                </Button>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('green')}>\n                  Green Button\n                </Button>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('amber')}>\n                  Amber Button\n                </Button>\n                <Button variant=\"contained\" sx={getFlatModernButtonSx('red')}>\n                  Red Button\n                </Button>\n              </Box>\n            </Paper>\n          </Grid>\n\n          {/* Example 4: Table */}\n          <Grid item xs={12}>\n            <Paper sx={getFlatModernPaperSx(true, { p: 0, overflow: 'hidden' })}>\n              <TableContainer>\n                <Table sx={getFlatModernTableSx('teal')}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Dessert (100g serving)</TableCell>\n                      <TableCell align=\"right\">Calories</TableCell>\n                      <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                      <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                      <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {rows.map((row) => (\n                      <TableRow key={row.name}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.calories}</TableCell>\n                        <TableCell align=\"right\">{row.fat}</TableCell>\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\n                        <TableCell align=\"right\">{row.protein}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default FlatModernStyleExample;\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["_ref","position","variant","showWavePattern","thickness","color","patternOpacity","theme","useTheme","accentColor","getColor","teal","palette","primary","main","purple","secondary","blue","info","green","success","amber","warning","red","error","positionStyles","getPositionStyles","top","left","right","height","width","bottom","accentStyle","backgroundColor","zIndex","_jsxs","_Fragment","children","_jsx","style","opacity","backgroundImage","getWavePatternBackground","backgroundSize","backgroundPosition","backgroundRepeat","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","getFlatModernCardSx","arguments","length","accentPosition","additionalSx","borderRadius","border","transition","boxShadow","transform","content","getAccentStyles","getFlatModernButtonSx","textTransform","fontWeight","borderWidth","getFlatModernTableSx","alpha","borderBottom","divider","getFlatModernPaperSx","FlatModernStyleExample","createData","calories","fat","carbs","protein","rows","ThemeProvider","flatModernTheme","Container","maxWidth","sx","py","Typography","gutterBottom","paragraph","Grid","container","spacing","item","xs","md","Card","CardAccent","CardContent","Box","mt","p","display","gap","flexWrap","Button","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","defaultTheme","createTheme","options","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","_extendSxProp","extendSxProp","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate"],"sourceRoot":""}