{"version":3,"file":"static/js/9308.58f59375.chunk.js","mappings":"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","sources":["components/auth/LogoTitleContainer.tsx","components/auth/RegisterForm.tsx","pages/showcase/AuthComponentsShowcase.tsx","components/auth/LoginForm.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import React from 'react';\nimport { SxProps, Theme } from '@mui/material/styles';\nimport './RegisterForm.css';\n\ninterface ContainerProps {\n  sx?: SxProps<Theme>;\n  children: React.ReactNode;\n}\n\n// Simple wrapper component for logo title to avoid TypeScript complexity\nexport const LogoTitleContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"logo-title-container\" style={sx ? { marginBottom: '8px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for terms and conditions to avoid TypeScript complexity\nexport const TermsContainer: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return (\n    <div className=\"terms-container\">\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for login link to avoid TypeScript complexity\nexport const LoginLinkContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"login-link-container\" style={sx ? { textAlign: 'center', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for social divider to avoid TypeScript complexity\nexport const SocialDividerContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"social-divider-container\" style={sx ? { display: 'flex', alignItems: 'center', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// Simple wrapper component for social buttons to avoid TypeScript complexity\nexport const SocialButtonsContainer: React.FC<ContainerProps> = ({ children, sx }) => {\n  return (\n    <div className=\"social-buttons-container\" style={sx ? { display: 'flex', gap: '16px', marginTop: '16px' } : undefined}>\n      {children}\n    </div>\n  );\n};\n\n// For backward compatibility\nexport default LogoTitleContainer;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  IconButton,\n  Link,\n  Alert,\n  CircularProgress,\n  Paper,\n  Divider,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText\n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport PersonIcon from '@mui/icons-material/Person';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport MicrosoftIcon from '@mui/icons-material/Microsoft';\nimport { CommonProps } from '../../types/common';\n\n// Import CSS and custom components\nimport './RegisterForm.css';\nimport {\n  LogoTitleContainer,\n  TermsContainer,\n  LoginLinkContainer,\n  SocialDividerContainer,\n  SocialButtonsContainer\n} from './LogoTitleContainer';\n\ninterface RegisterFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  agreeToTerms: boolean;\n}\n\ninterface RegisterFormErrors {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  agreeToTerms?: string;\n}\n\ninterface RegisterFormProps extends CommonProps {\n  onSubmit?: (data: RegisterFormData) => void;\n  onGoogleRegister?: () => void;\n  onMicrosoftRegister?: () => void;\n  error?: string | null;\n  loading?: boolean;\n  showSocialLogin?: boolean;\n  loginLink?: string;\n  logoUrl?: string;\n}\n\n/**\n * Registration form component for new user sign-up\n */\nconst RegisterForm: React.FC<RegisterFormProps> = ({\n  onSubmit,\n  onGoogleRegister,\n  onMicrosoftRegister,\n  error,\n  loading = false,\n  showSocialLogin = true,\n  loginLink = '/login',\n  logoUrl = '/logo.png',\n  sx\n}) => {\n  const [formData, setFormData] = useState<RegisterFormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agreeToTerms: false\n  });\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false);\n  const [formErrors, setFormErrors] = useState<RegisterFormErrors>({});\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value, checked, type } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n\n    // Clear validation error when field is edited\n    if (formErrors[name as keyof RegisterFormErrors]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: undefined\n      });\n    }\n  };\n\n  const toggleShowPassword = (): void => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleShowConfirmPassword = (): void => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const validate = (): RegisterFormErrors => {\n    const errors: RegisterFormErrors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!formData.firstName.trim()) {\n      errors.firstName = 'First name is required';\n    }\n\n    if (!formData.lastName.trim()) {\n      errors.lastName = 'Last name is required';\n    }\n\n    if (!formData.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(formData.email)) {\n      errors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      errors.password = 'Password must be at least 8 characters long';\n    }\n\n    if (!formData.confirmPassword) {\n      errors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Passwords do not match';\n    }\n\n    if (!formData.agreeToTerms) {\n      errors.agreeToTerms = 'You must agree to the terms and conditions';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    const errors = validate();\n\n    if (Object.keys(errors).length === 0) {\n      if (onSubmit) {\n        onSubmit(formData);\n      }\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const handleGoogleRegister = (): void => {\n    if (onGoogleRegister) {\n      onGoogleRegister();\n    }\n  };\n\n  const handleMicrosoftRegister = (): void => {\n    if (onMicrosoftRegister) {\n      onMicrosoftRegister();\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        maxWidth: 600,\n        width: '100%',\n        p: 3, // Reduced padding from 4 to 3\n        borderRadius: 2,\n        ...sx\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2 // Reduced gap from 3 to 2\n        }}\n      >\n        {/* Logo and Title */}\n        <LogoTitleContainer sx={{ mb: 1 }}> {/* Reduced margin from 2 to 1 */}\n          {logoUrl && logoUrl.trim() !== '' && (\n            <img\n              src={logoUrl}\n              alt=\"Logo\"\n              style={{ height: 60, width: 'auto', marginBottom: 8 }} /* Reduced margin from 16 to 8 */\n              onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n            />\n          )}\n          {/* Title and subtitle removed as requested */}\n        </LogoTitleContainer>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Name Fields */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"First Name\"\n              name=\"firstName\"\n              value={formData.firstName}\n              onChange={handleChange}\n              fullWidth\n              error={!!formErrors.firstName}\n              helperText={formErrors.firstName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n              disabled={loading}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"Last Name\"\n              name=\"lastName\"\n              value={formData.lastName}\n              onChange={handleChange}\n              fullWidth\n              error={!!formErrors.lastName}\n              helperText={formErrors.lastName}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n              }}\n              disabled={loading}\n              required\n            />\n          </Grid>\n        </Grid>\n\n        {/* Email Field */}\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.email}\n          helperText={formErrors.email}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon color=\"action\" />\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Password Field */}\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.password}\n          helperText={formErrors.password || 'Password must be at least 8 characters long'}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={toggleShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Confirm Password Field */}\n        <TextField\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          type={showConfirmPassword ? 'text' : 'password'}\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.confirmPassword}\n          helperText={formErrors.confirmPassword}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle confirm password visibility\"\n                  onClick={toggleShowConfirmPassword}\n                  edge=\"end\"\n                >\n                  {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Terms and Conditions */}\n        <TermsContainer>\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"agreeToTerms\"\n                checked={formData.agreeToTerms}\n                onChange={handleChange}\n                color=\"primary\"\n                disabled={loading}\n              />\n            }\n            label={\n              <Typography variant=\"body2\">\n                I agree to the{' '}\n                <Link href=\"#\" underline=\"hover\" color=\"primary\">\n                  Terms of Service\n                </Link>{' '}\n                and{' '}\n                <Link href=\"#\" underline=\"hover\" color=\"primary\">\n                  Privacy Policy\n                </Link>\n              </Typography>\n            }\n          />\n          {formErrors.agreeToTerms && (\n            <FormHelperText error>{formErrors.agreeToTerms}</FormHelperText>\n          )}\n        </TermsContainer>\n\n        {/* Submit Button */}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          disabled={loading}\n          sx={{ mt: 2 }}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Create Account'}\n        </Button>\n\n        {/* Login Link */}\n        <LoginLinkContainer sx={{ mt: 2 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Already have an account?{' '}\n            <Link\n              component={RouterLink}\n              to={loginLink}\n              color=\"primary\"\n              underline=\"hover\"\n            >\n              Sign in\n            </Link>\n          </Typography>\n        </LoginLinkContainer>\n\n        {/* Social Registration Options */}\n        {showSocialLogin && (\n          <>\n            <SocialDividerContainer sx={{ mt: 2 }}>\n              <Divider sx={{ flex: 1 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mx: 2 }}>\n                or sign up with\n              </Typography>\n              <Divider sx={{ flex: 1 }} />\n            </SocialDividerContainer>\n\n            <SocialButtonsContainer sx={{ mt: 2 }}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<GoogleIcon />}\n                onClick={handleGoogleRegister}\n                disabled={loading}\n              >\n                Google\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<MicrosoftIcon />}\n                onClick={handleMicrosoftRegister}\n                disabled={loading}\n              >\n                Microsoft\n              </Button>\n            </SocialButtonsContainer>\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Button\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Import auth components\nimport LoginForm from '../../components/auth/LoginForm';\nimport RegisterForm from '../../components/auth/RegisterForm';\n\n// Sample component categories\nconst componentCategories = [\n  {\n    id: 'authentication',\n    name: 'Authentication Components',\n    components: [\n      {\n        id: 'loginForm',\n        name: 'Login Form',\n        description: 'Form for user authentication',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <LoginForm\n                  onSubmit={(data) => console.log('Login submitted:', data)}\n                  onGoogleLogin={() => console.log('Google login clicked')}\n                  onMicrosoftLogin={() => console.log('Microsoft login clicked')}\n                  showSocialLogin={true}\n                  showForgotPassword={true}\n                  showRegister={true}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      },\n      {\n        id: 'registerForm',\n        name: 'Register Form',\n        description: 'Form for new user registration',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <RegisterForm\n                  onSubmit={(data) => console.log('Registration submitted:', data)}\n                  onGoogleRegister={() => console.log('Google registration clicked')}\n                  onMicrosoftRegister={() => console.log('Microsoft registration clicked')}\n                  showSocialLogin={true}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      }\n    ]\n  },\n  {\n    id: 'passwordManagement',\n    name: 'Password Management',\n    components: [\n      {\n        id: 'forgotPassword',\n        name: 'Forgot Password',\n        description: 'Form for password recovery',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">Forgot Password Form</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display a form for password recovery\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">Forgot Password Form Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      },\n      {\n        id: 'resetPassword',\n        name: 'Reset Password',\n        description: 'Form for setting a new password',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">Reset Password Form</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display a form for setting a new password\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">Reset Password Form Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      }\n    ]\n  },\n  {\n    id: 'userManagement',\n    name: 'User Management',\n    components: [\n      {\n        id: 'userProfile',\n        name: 'User Profile',\n        description: 'Component for displaying and editing user profile',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">User Profile</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display and allow editing of user profile information\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">User Profile Component Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      },\n      {\n        id: 'userPermissions',\n        name: 'User Permissions',\n        description: 'Component for managing user permissions',\n        component: (\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">User Permissions</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              This component would display and allow management of user permissions\n            </Typography>\n            <Box sx={{ bgcolor: 'action.hover', p: 2, borderRadius: 1 }}>\n              <Typography align=\"center\">User Permissions Component Placeholder</Typography>\n            </Box>\n          </Paper>\n        )\n      }\n    ]\n  }\n];\n\n/**\n * Authentication Components Showcase\n * Displays all authentication and user management components in a categorized list\n */\nconst AuthComponentsShowcase: React.FC = () => {\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Box sx={{ mb: 4, display: 'flex', alignItems: 'center' }}>\n        <Button\n          component={RouterLink}\n          to=\"/showcase\"\n          startIcon={<ArrowBackIcon />}\n          sx={{ mr: 2 }}\n        >\n          Back to Showcase\n        </Button>\n        <Typography variant=\"h4\" component=\"h1\">\n          Authentication Components\n        </Typography>\n      </Box>\n\n      <Typography variant=\"body1\" sx={{ mb: 4 }}>\n        This showcase demonstrates the various authentication and user management components available in the application.\n        Note: Some components are currently displayed as placeholders.\n      </Typography>\n\n      {componentCategories.map((category) => (\n        <Box key={category.id} sx={{ mb: 6 }}>\n          <Typography variant=\"h5\" component=\"h2\" sx={{ mb: 2 }}>\n            {category.name}\n          </Typography>\n          <Divider sx={{ mb: 3 }} />\n\n          <List>\n            {category.components.map((component) => (\n              <ListItem key={component.id} sx={{ display: 'block', mb: 4 }}>\n                <ListItemButton\n                  component=\"div\"\n                  disableRipple\n                  sx={{ display: 'block', p: 0, cursor: 'default' }}\n                >\n                  <ListItemText\n                    primary={component.name}\n                    secondary={component.description}\n                    primaryTypographyProps={{ variant: 'h6' }}\n                    sx={{ mb: 2 }}\n                  />\n                  {component.component}\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      ))}\n    </Container>\n  );\n};\n\nexport default AuthComponentsShowcase;\n","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  IconButton,\n  Link,\n  Alert,\n  CircularProgress,\n  Paper,\n  Divider,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport MicrosoftIcon from '@mui/icons-material/Microsoft';\nimport { CommonProps } from '../../types/common';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n  rememberMe: boolean;\n}\n\ninterface LoginFormErrors {\n  username?: string;\n  password?: string;\n}\n\ninterface LoginFormProps extends CommonProps {\n  onSubmit?: (data: LoginFormData) => void;\n  onGoogleLogin?: () => void;\n  onMicrosoftLogin?: () => void;\n  error?: string | null;\n  loading?: boolean;\n  showSocialLogin?: boolean;\n  showForgotPassword?: boolean;\n  showRegister?: boolean;\n  registerLink?: string;\n  forgotPasswordLink?: string;\n  logoUrl?: string;\n}\n\n/**\n * Login form component for user authentication\n */\nconst LoginForm: React.FC<LoginFormProps> = ({\n  onSubmit,\n  onGoogleLogin,\n  onMicrosoftLogin,\n  error,\n  loading = false,\n  showSocialLogin = true,\n  showForgotPassword = true,\n  showRegister = true,\n  registerLink = '/register',\n  forgotPasswordLink = '/forgot-password',\n  logoUrl = '/logo.png',\n  sx\n}) => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    username: '',\n    password: '',\n    rememberMe: false\n  });\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [formErrors, setFormErrors] = useState<LoginFormErrors>({});\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value, checked, type } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n\n    // Clear validation error when field is edited\n    if (formErrors[name as keyof LoginFormErrors]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: undefined\n      });\n    }\n  };\n\n  const toggleShowPassword = (): void => {\n    setShowPassword(!showPassword);\n  };\n\n  const validate = (): LoginFormErrors => {\n    const errors: LoginFormErrors = {};\n\n    if (!formData.username.trim()) {\n      errors.username = 'Username or email is required';\n    }\n\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    // Prevent the default form submission behavior\n    e.preventDefault();\n\n    // Stop propagation to prevent any parent handlers from being called\n    e.stopPropagation();\n\n    console.log('Form submit event prevented');\n\n    const errors = validate();\n\n    if (Object.keys(errors).length === 0) {\n      if (onSubmit) {\n        console.log('Form is valid, calling onSubmit');\n        // Call the onSubmit handler with the form data\n        // This will be handled by the parent component\n        onSubmit(formData);\n      }\n    } else {\n      console.log('Form has errors:', errors);\n      setFormErrors(errors);\n    }\n\n    // Explicitly return false to ensure the form doesn't submit traditionally\n    return;\n  };\n\n  const handleGoogleLogin = (): void => {\n    if (onGoogleLogin) {\n      onGoogleLogin();\n    }\n  };\n\n  const handleMicrosoftLogin = (): void => {\n    if (onMicrosoftLogin) {\n      onMicrosoftLogin();\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        maxWidth: 450,\n        width: '100%',\n        p: 3, // Reduced padding from 4 to 3\n        borderRadius: 2,\n        ...sx\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={(e) => {\n          handleSubmit(e);\n          return false; // Explicitly return false to prevent form submission\n        }}\n        noValidate\n        autoComplete=\"off\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2 /* Reduced gap from 3 to 2 */\n        }}\n      >\n        {/* Logo and Title */}\n        <div style={{ textAlign: 'center', marginBottom: '8px' }}>\n          {/* Using div instead of Box to avoid TS2590 error */}\n          {logoUrl && logoUrl.trim() !== '' && (\n            <img\n              src={logoUrl}\n              alt=\"Logo\"\n              style={{ height: 60, width: 'auto', marginBottom: 8 }}\n              /* Reduced margin from 16 to 8 */\n              onError={(e) => { (e.target as HTMLImageElement).style.display = 'none'; }}\n            />\n          )}\n          <Typography variant=\"h5\" component=\"h1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\n            {/* Added mb: 0.5 instead of gutterBottom */}\n            Sign In\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Enter your credentials to access your account\n          </Typography>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Username/Email Field */}\n        <TextField\n          label=\"Username or Email\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.username}\n          helperText={formErrors.username}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon color=\"action\" />\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Password Field */}\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          error={!!formErrors.password}\n          helperText={formErrors.password}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={toggleShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          disabled={loading}\n          required\n        />\n\n        {/* Remember Me and Forgot Password */}\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"rememberMe\"\n                checked={formData.rememberMe}\n                onChange={handleChange}\n                color=\"primary\"\n                disabled={loading}\n              />\n            }\n            label=\"Remember me\"\n          />\n\n          {showForgotPassword && (\n            <Link\n              component={RouterLink}\n              to={forgotPasswordLink}\n              variant=\"body2\"\n              color=\"primary\"\n              underline=\"hover\"\n            >\n              Forgot password?\n            </Link>\n          )}\n        </div>\n\n        {/* Submit Button */}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          disabled={loading}\n          sx={{ mt: 2 }}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Sign In'}\n        </Button>\n\n        {/* Register Link */}\n        {showRegister && (\n          <div style={{ textAlign: 'center', marginTop: '16px' }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Don't have an account?{' '}\n              <Link\n                component={RouterLink}\n                to={registerLink}\n                color=\"primary\"\n                underline=\"hover\"\n              >\n                Sign up\n              </Link>\n            </Typography>\n          </div>\n        )}\n\n        {/* Social Login Options */}\n        {showSocialLogin && (\n          <>\n            <div style={{ display: 'flex', alignItems: 'center', marginTop: '16px' }}>\n              <Divider sx={{ flex: 1 }} />\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mx: 2 }}>\n                or continue with\n              </Typography>\n              <Divider sx={{ flex: 1 }} />\n            </div>\n\n            <div style={{ display: 'flex', gap: '16px', marginTop: '16px' }}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<GoogleIcon />}\n                onClick={handleGoogleLogin}\n                disabled={loading}\n              >\n                Google\n              </Button>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                size=\"large\"\n                startIcon={<MicrosoftIcon />}\n                onClick={handleMicrosoftLogin}\n                disabled={loading}\n              >\n                Microsoft\n              </Button>\n            </div>\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["LogoTitleContainer","_ref","children","sx","_jsx","className","style","marginBottom","undefined","TermsContainer","_ref2","LoginLinkContainer","_ref3","textAlign","marginTop","SocialDividerContainer","_ref4","display","alignItems","SocialButtonsContainer","_ref5","gap","onSubmit","onGoogleRegister","onMicrosoftRegister","error","loading","showSocialLogin","loginLink","logoUrl","formData","setFormData","useState","firstName","lastName","email","password","confirmPassword","agreeToTerms","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","formErrors","setFormErrors","handleChange","e","name","value","checked","type","target","Paper","elevation","maxWidth","width","p","borderRadius","_jsxs","Box","component","preventDefault","errors","validate","trim","test","length","Object","keys","flexDirection","mb","src","alt","height","onError","Alert","severity","Grid","container","spacing","item","xs","sm","TextField","label","onChange","fullWidth","helperText","InputProps","startAdornment","InputAdornment","position","PersonIcon","color","disabled","required","EmailIcon","LockIcon","endAdornment","IconButton","onClick","toggleShowPassword","edge","VisibilityOff","Visibility","toggleShowConfirmPassword","FormControlLabel","control","Checkbox","Typography","variant","Link","href","underline","FormHelperText","Button","size","mt","CircularProgress","RouterLink","to","_Fragment","Divider","flex","mx","startIcon","GoogleIcon","handleGoogleRegister","MicrosoftIcon","handleMicrosoftRegister","componentCategories","id","components","description","md","LoginForm","data","console","log","onGoogleLogin","onMicrosoftLogin","showForgotPassword","showRegister","RegisterForm","bgcolor","align","AuthComponentsShowcase","Container","py","ArrowBackIcon","mr","map","category","List","ListItem","ListItemButton","disableRipple","cursor","ListItemText","primary","secondary","primaryTypographyProps","registerLink","forgotPasswordLink","username","rememberMe","handleSubmit","stopPropagation","noValidate","autoComplete","fontWeight","justifyContent","handleGoogleLogin","handleMicrosoftLogin","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}