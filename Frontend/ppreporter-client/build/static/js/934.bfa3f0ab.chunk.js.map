{"version":3,"file":"static/js/934.bfa3f0ab.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","components/reports/DailyActionsAdvancedReport.tsx","containers/DailyActionsAdvancedReportContainer.jsx","pages/reports/DailyActionsAdvancedPage.tsx","../node_modules/file-saver/src/FileSaver.js","components/common/DateRangePicker.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Button,\n  Divider,\n  CircularProgress,\n  Alert,\n  Tabs,\n  Tab,\n  Menu,\n  MenuItem,\n  IconButton,\n  Tooltip,\n  Paper\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport InfoIcon from '@mui/icons-material/Info';\nimport DateRangePicker from '../common/DateRangePicker';\nimport { DateRange } from '../../types/dateRangePicker';\nimport { format, subDays, startOfDay, endOfDay } from 'date-fns';\n\n// Define interfaces\ninterface DailyActionsAdvancedReportProps {\n  /**\n   * Metadata for filters\n   */\n  metadata: any;\n\n  /**\n   * Report data\n   */\n  data: any;\n\n  /**\n   * Loading state\n   */\n  loading: boolean;\n\n  /**\n   * Error message\n   */\n  error: string | null;\n\n  /**\n   * Handler for filter changes\n   */\n  onFilterChange: (filters: any) => void;\n\n  /**\n   * Handler for refreshing data\n   */\n  onRefresh: (filters: any) => void;\n\n  /**\n   * Handler for exporting data\n   */\n  onExport: (filters: any, format: string) => void;\n}\n\n/**\n * Advanced daily actions report component\n */\nconst DailyActionsAdvancedReport: React.FC<DailyActionsAdvancedReportProps> = ({\n  metadata,\n  data,\n  loading,\n  error,\n  onFilterChange,\n  onRefresh,\n  onExport\n}) => {\n  // State\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [exportAnchorEl, setExportAnchorEl] = useState<null | HTMLElement>(null);\n  const [showFilters, setShowFilters] = useState<boolean>(false);\n  const [filters, setFilters] = useState({\n    startDate: startOfDay(subDays(new Date(), 30)),\n    endDate: endOfDay(new Date()),\n    gameCategory: '',\n    playerStatus: '',\n    country: '',\n    minAmount: '',\n    maxAmount: ''\n  });\n\n  // Handle tab change\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  // Handle export menu\n  const handleExportClick = (event: React.MouseEvent<HTMLElement>) => {\n    setExportAnchorEl(event.currentTarget);\n  };\n\n  const handleExportClose = () => {\n    setExportAnchorEl(null);\n  };\n\n  // Handle export format selection\n  const handleExportFormat = (format: string) => {\n    onExport(filters, format);\n    handleExportClose();\n  };\n\n  // Handle filter toggle\n  const handleToggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  // Handle filter change\n  const handleFilterChange = (field: string, value: any) => {\n    const newFilters = {\n      ...filters,\n      [field]: value\n    };\n\n    setFilters(newFilters);\n    onFilterChange(newFilters);\n  };\n\n  // Handle date range change\n  const handleDateRangeChange = (range: DateRange) => {\n    if (range.start && range.end) {\n      const newFilters = {\n        ...filters,\n        startDate: range.start,\n        endDate: range.end\n      };\n\n      setFilters(newFilters);\n      onFilterChange(newFilters);\n    }\n  };\n\n  // Handle refresh\n  const handleRefresh = () => {\n    onRefresh(filters);\n  };\n\n  // Render placeholder content when no data\n  const renderPlaceholder = () => (\n    <Box sx={{ p: 4, textAlign: 'center' }}>\n      <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n        No data available\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        Try adjusting your filters or select a different date range.\n      </Typography>\n      <Button\n        variant=\"outlined\"\n        startIcon={<RefreshIcon />}\n        onClick={handleRefresh}\n        sx={{ mt: 2 }}\n      >\n        Refresh Data\n      </Button>\n    </Box>\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        {/* Report Header */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n          <Typography variant=\"h5\">\n            Advanced Daily Actions Report\n          </Typography>\n          <Box>\n            <Tooltip title=\"Refresh data\">\n              <IconButton onClick={handleRefresh} disabled={loading}>\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Filter data\">\n              <IconButton onClick={handleToggleFilters} color={showFilters ? 'primary' : 'default'}>\n                <FilterListIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Export data\">\n              <IconButton onClick={handleExportClick} disabled={loading || !data}>\n                <DownloadIcon />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={exportAnchorEl}\n              open={Boolean(exportAnchorEl)}\n              onClose={handleExportClose}\n            >\n              <MenuItem onClick={() => handleExportFormat('csv')}>Export as CSV</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('xlsx')}>Export as Excel</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('pdf')}>Export as PDF</MenuItem>\n              <MenuItem onClick={() => handleExportFormat('json')}>Export as JSON</MenuItem>\n            </Menu>\n          </Box>\n        </Box>\n\n        {/* Error Alert */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Filters Section */}\n        {showFilters && (\n          <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Filters\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <DateRangePicker\n                  startDate={filters.startDate}\n                  endDate={filters.endDate}\n                  onChange={handleDateRangeChange}\n                  buttonLabel=\"Date Range\"\n                />\n              </Grid>\n              {/* Additional filters would go here */}\n            </Grid>\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  // Reset filters logic\n                  const resetFilters = {\n                    startDate: startOfDay(subDays(new Date(), 30)),\n                    endDate: endOfDay(new Date()),\n                    gameCategory: '',\n                    playerStatus: '',\n                    country: '',\n                    minAmount: '',\n                    maxAmount: ''\n                  };\n                  setFilters(resetFilters);\n                  onFilterChange(resetFilters);\n                }}\n                sx={{ mr: 1 }}\n              >\n                Reset\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleRefresh}\n              >\n                Apply Filters\n              </Button>\n            </Box>\n          </Paper>\n        )}\n\n        {/* Date Range Display */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Showing data from {format(filters.startDate, 'MMM d, yyyy')} to {format(filters.endDate, 'MMM d, yyyy')}\n          </Typography>\n        </Box>\n\n        {/* Loading Indicator */}\n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n            <CircularProgress />\n          </Box>\n        )}\n\n        {/* Report Content */}\n        {!loading && data && (\n          <>\n            {/* Report Tabs */}\n            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n              <Tabs value={activeTab} onChange={handleTabChange}>\n                <Tab label=\"Summary\" />\n                <Tab label=\"Detailed View\" />\n                <Tab label=\"Charts\" />\n              </Tabs>\n            </Box>\n\n            {/* Tab Content */}\n            <Box role=\"tabpanel\" hidden={activeTab !== 0}>\n              {activeTab === 0 && (\n                <Typography variant=\"body1\">\n                  Summary content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n            <Box role=\"tabpanel\" hidden={activeTab !== 1}>\n              {activeTab === 1 && (\n                <Typography variant=\"body1\">\n                  Detailed view content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n            <Box role=\"tabpanel\" hidden={activeTab !== 2}>\n              {activeTab === 2 && (\n                <Typography variant=\"body1\">\n                  Charts content would go here. This is a placeholder component.\n                </Typography>\n              )}\n            </Box>\n          </>\n        )}\n\n        {/* No Data Placeholder */}\n        {!loading && !data && renderPlaceholder()}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DailyActionsAdvancedReport;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Alert, CircularProgress } from '@mui/material';\nimport DailyActionsAdvancedReport from '../components/reports/DailyActionsAdvancedReport';\nimport dailyActionsService from '../services/api/dailyActionsService';\nimport { saveAs } from 'file-saver';\nimport { format } from 'date-fns';\nimport { FEATURES } from '../config/constants';\n\n/**\n * Container component for DailyActionsAdvancedReport\n * Handles API calls and data management\n */\nconst DailyActionsAdvancedReportContainer = () => {\n  // State\n  const [metadata, setMetadata] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [metadataLoading, setMetadataLoading] = useState(false);\n  const [metadataError, setMetadataError] = useState(null);\n\n  const navigate = useNavigate();\n\n  // Load metadata on mount\n  useEffect(() => {\n    fetchMetadata();\n  }, []);\n\n  // Fetch metadata for filters\n  const fetchMetadata = async () => {\n    try {\n      setMetadataLoading(true);\n      setMetadataError(null);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for metadata');\n\n        // Import mock data dynamically\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock metadata\n        const mockMetadata = mockDataService.getMockData('/reports/daily-actions/metadata');\n\n        if (mockMetadata) {\n          console.log('[DAILY ACTIONS ADVANCED] Got mock metadata:', mockMetadata);\n          setMetadata(mockMetadata);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Fetching metadata from service');\n      const response = await dailyActionsService.getMetadata();\n      setMetadata(response);\n    } catch (err) {\n      console.error('Error fetching metadata:', err);\n      setMetadataError(err.message || 'Failed to load filter options');\n    } finally {\n      setMetadataLoading(false);\n    }\n  };\n\n  // Fetch report data based on filters\n  const fetchData = async (filters) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Convert dates to ISO strings\n      const apiFilters = {\n        ...filters,\n        startDate: filters.startDate ? format(new Date(filters.startDate), 'yyyy-MM-dd') : null,\n        endDate: filters.endDate ? format(new Date(filters.endDate), 'yyyy-MM-dd') : null\n      };\n\n      console.log('[DAILY ACTIONS ADVANCED] Fetching data with filters:', apiFilters);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for report');\n\n        // Import mock data dynamically\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock data\n        const mockData = mockDataService.getMockData('/reports/daily-actions/data', apiFilters);\n\n        if (mockData) {\n          console.log('[DAILY ACTIONS ADVANCED] Got mock data:', mockData);\n          setData(mockData);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Fetching data from service');\n      const response = await dailyActionsService.getFilteredData(apiFilters);\n      setData(response);\n    } catch (err) {\n      console.error('Error fetching report data:', err);\n      setError(err.message || 'Failed to load report data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle filter changes\n  const handleFilterChange = (filters) => {\n    // This function can be used to update local state if needed\n    // For now, we'll just use it to log the filters\n    console.log('Filters changed:', filters);\n  };\n\n  // Handle export\n  const handleExport = async (filters, exportFormat) => {\n    try {\n      setLoading(true);\n\n      // Convert dates to ISO strings\n      const apiFilters = {\n        ...filters,\n        startDate: filters.startDate ? format(new Date(filters.startDate), 'yyyy-MM-dd') : null,\n        endDate: filters.endDate ? format(new Date(filters.endDate), 'yyyy-MM-dd') : null\n      };\n\n      console.log('[DAILY ACTIONS ADVANCED] Exporting data with filters:', apiFilters, 'format:', exportFormat);\n\n      // Check if mock data is enabled\n      const useMockData = FEATURES.USE_MOCK_DATA_FOR_UI_TESTING || localStorage.getItem('USE_MOCK_DATA_FOR_UI_TESTING') === 'true';\n\n      if (useMockData) {\n        console.log('[DAILY ACTIONS ADVANCED] Using mock data for export');\n\n        // For mock data, we'll just create a simple text file with JSON data\n        const mockDataModule = await import('../mockData');\n        const mockDataService = mockDataModule.default;\n\n        // Get mock data\n        const mockData = mockDataService.getMockData('/reports/daily-actions/data', apiFilters);\n\n        if (mockData) {\n          console.log('[DAILY ACTIONS ADVANCED] Creating mock export file');\n          // Create a blob with the JSON data\n          const blob = new Blob([JSON.stringify(mockData, null, 2)], { type: 'application/json' });\n          const fileName = `daily-actions-report-${format(new Date(), 'yyyy-MM-dd')}.json`;\n          saveAs(blob, fileName);\n          return;\n        }\n      }\n\n      // Fall back to service if mock data is not available or not enabled\n      console.log('[DAILY ACTIONS ADVANCED] Exporting data from service');\n      const blob = await dailyActionsService.exportFilteredReport(apiFilters, exportFormat);\n      const fileName = `daily-actions-report-${format(new Date(), 'yyyy-MM-dd')}.${exportFormat}`;\n      saveAs(blob, fileName);\n    } catch (err) {\n      console.error('Error exporting report:', err);\n      setError(err.message || 'Failed to export report');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show loading state while fetching metadata\n  if (metadataLoading && !metadata) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  // Show error if metadata fetch failed\n  if (metadataError && !metadata) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box sx={{ mt: 4 }}>\n          <Alert severity=\"error\">\n            {metadataError}\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body2\">\n                Please try refreshing the page or contact support if the problem persists.\n              </Typography>\n            </Box>\n          </Alert>\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <DailyActionsAdvancedReport\n          metadata={metadata}\n          data={data}\n          loading={loading}\n          error={error}\n          onFilterChange={handleFilterChange}\n          onRefresh={fetchData}\n          onExport={handleExport}\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default DailyActionsAdvancedReportContainer;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Link, Typography } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport DailyActionsAdvancedReportContainer from '../../containers/DailyActionsAdvancedReportContainer';\n\n/**\n * DailyActionsAdvancedPage - Page component for the advanced daily actions report\n */\nconst DailyActionsAdvancedPage: React.FC = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Advanced Daily Actions Report | PPrePorter</title>\n      </Helmet>\n      \n      <Box sx={{ p: 3 }}>\n        {/* Breadcrumbs */}\n        <Breadcrumbs aria-label=\"breadcrumb\" sx={{ mb: 2 }}>\n          <Link component={RouterLink} to=\"/\" color=\"inherit\">\n            Dashboard\n          </Link>\n          <Link component={RouterLink} to=\"/reports\" color=\"inherit\">\n            Reports\n          </Link>\n          <Typography color=\"text.primary\">Advanced Daily Actions</Typography>\n        </Breadcrumbs>\n        \n        {/* Page Title */}\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Advanced Daily Actions Report\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" paragraph>\n          Comprehensive analysis of daily player actions with advanced filtering options.\n        </Typography>\n        \n        {/* Report Container */}\n        <DailyActionsAdvancedReportContainer />\n      </Box>\n    </>\n  );\n};\n\nexport default DailyActionsAdvancedPage;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React, { useState } from 'react';\nimport { Box, TextField, Button, Paper, Typography, IconButton, Popover } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format, startOfDay, endOfDay, subDays, startOfMonth, endOfMonth, isValid } from 'date-fns';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { DateRangePickerProps, DatePreset, DateRange } from '../../types/dateRangePicker';\n\n/**\n * A reusable date range picker component with presets\n */\nconst DateRangePicker: React.FC<DateRangePickerProps> = ({\n  startDate = null,\n  endDate = null,\n  onChange,\n  buttonLabel = \"Date Range\",\n  presets = null,\n  showClearButton = true,\n  autoApplyPresets = true,\n  disabled = false,\n  className,\n  sx\n}) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const [tempStartDate, setTempStartDate] = useState<Date | null>(startDate);\n  const [tempEndDate, setTempEndDate] = useState<Date | null>(endDate);\n\n  // Default presets if none provided\n  const defaultPresets: DatePreset[] = [\n    { label: 'Today', getValue: () => ({ start: startOfDay(new Date()), end: endOfDay(new Date()) }) },\n    { label: 'Yesterday', getValue: () => ({ start: startOfDay(subDays(new Date(), 1)), end: endOfDay(subDays(new Date(), 1)) }) },\n    { label: 'Last 7 days', getValue: () => ({ start: startOfDay(subDays(new Date(), 6)), end: endOfDay(new Date()) }) },\n    { label: 'Last 30 days', getValue: () => ({ start: startOfDay(subDays(new Date(), 29)), end: endOfDay(new Date()) }) },\n    { label: 'This month', getValue: () => ({ start: startOfMonth(new Date()), end: endOfMonth(new Date()) }) },\n    { label: 'Last month', getValue: () => {\n      const date = new Date();\n      date.setMonth(date.getMonth() - 1);\n      return { start: startOfMonth(date), end: endOfMonth(date) };\n    }},\n  ];\n\n  const datePresets = presets || defaultPresets;\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>): void => {\n    setAnchorEl(event.currentTarget);\n    setTempStartDate(startDate);\n    setTempEndDate(endDate);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleApply = (): void => {\n    if (onChange) {\n      onChange({ start: tempStartDate, end: tempEndDate });\n    }\n    handleClose();\n  };\n\n  const handleClear = (e?: React.MouseEvent): void => {\n    if (e) {\n      e.stopPropagation();\n    }\n    setTempStartDate(null);\n    setTempEndDate(null);\n    if (onChange) {\n      onChange({ start: null, end: null });\n    }\n    handleClose();\n  };\n\n  const handlePresetClick = (preset: DatePreset): void => {\n    const { start, end } = preset.getValue();\n    setTempStartDate(start);\n    setTempEndDate(end);\n    \n    if (autoApplyPresets) {\n      if (onChange) {\n        onChange({ start, end });\n      }\n      handleClose();\n    }\n  };\n\n  const formatButtonText = (): string => {\n    if (startDate && endDate && isValid(startDate) && isValid(endDate)) {\n      return `${format(startDate, 'MMM dd, yyyy')} - ${format(endDate, 'MMM dd, yyyy')}`;\n    }\n    return buttonLabel;\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'date-range-popover' : undefined;\n\n  return (\n    <div className={className} style={sx}>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClick}\n        startIcon={<CalendarTodayIcon />}\n        endIcon={showClearButton && startDate && endDate && isValid(startDate) && isValid(endDate) ? (\n          <IconButton size=\"small\" onClick={handleClear}>\n            <ClearIcon fontSize=\"small\" />\n          </IconButton>\n        ) : undefined}\n        sx={{ \n          justifyContent: 'space-between', \n          minWidth: 200,\n          textTransform: 'none'\n        }}\n        disabled={disabled}\n      >\n        {formatButtonText()}\n      </Button>\n      \n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        PaperProps={{\n          elevation: 8,\n          sx: { p: 2, width: { xs: '90vw', sm: 400 } }\n        }}\n      >\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Select Date Range\n        </Typography>\n        \n        <Box sx={{ mb: 2 }}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <DatePicker\n                label=\"Start Date\"\n                value={tempStartDate}\n                onChange={(newValue) => setTempStartDate(newValue)}\n                slotProps={{ \n                  textField: { \n                    size: 'small', \n                    fullWidth: true,\n                    helperText: tempStartDate ? format(tempStartDate, 'EEEE') : '' \n                  } \n                }}\n              />\n              <DatePicker\n                label=\"End Date\"\n                value={tempEndDate}\n                onChange={(newValue) => setTempEndDate(newValue)}\n                minDate={tempStartDate}\n                slotProps={{ \n                  textField: { \n                    size: 'small', \n                    fullWidth: true,\n                    helperText: tempEndDate ? format(tempEndDate, 'EEEE') : '' \n                  } \n                }}\n              />\n            </Box>\n          </LocalizationProvider>\n        </Box>\n        \n        <Typography variant=\"subtitle2\" gutterBottom>\n          Presets\n        </Typography>\n        \n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n          {datePresets.map((preset, index) => (\n            <Button \n              key={index}\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => handlePresetClick(preset)}\n            >\n              {preset.label}\n            </Button>\n          ))}\n        </Box>\n        \n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, mt: 2 }}>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleApply}>\n            Apply\n          </Button>\n        </Box>\n      </Popover>\n    </div>\n  );\n};\n\nexport default DateRangePicker;\n"],"names":["createSvgIcon","_jsx","d","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","_ref","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","slots","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","Typography","name","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","BreadcrumbCollapsed","onClick","handleClickExpand","focusable","querySelector","focus","renderItemsBeforeAndAfter","metadata","data","loading","error","onFilterChange","onRefresh","onExport","activeTab","setActiveTab","useState","exportAnchorEl","setExportAnchorEl","showFilters","setShowFilters","filters","setFilters","startDate","startOfDay","subDays","Date","endDate","endOfDay","gameCategory","playerStatus","country","minAmount","maxAmount","handleExportClose","handleExportFormat","format","handleRefresh","Card","_jsxs","CardContent","Box","sx","justifyContent","mb","variant","Tooltip","title","IconButton","disabled","RefreshIcon","handleToggleFilters","FilterListIcon","event","currentTarget","DownloadIcon","Menu","anchorEl","open","Boolean","onClose","MenuItem","Alert","severity","Paper","p","gutterBottom","Grid","container","item","xs","DateRangePicker","onChange","range","start","end","newFilters","buttonLabel","mt","Button","resetFilters","mr","my","CircularProgress","_Fragment","borderBottom","borderColor","Tabs","value","handleTabChange","newValue","Tab","label","role","hidden","textAlign","startIcon","DailyActionsAdvancedReportContainer","setMetadata","setData","setLoading","setError","metadataLoading","setMetadataLoading","metadataError","setMetadataError","useNavigate","useEffect","fetchMetadata","async","FEATURES","USE_MOCK_DATA_FOR_UI_TESTING","localStorage","getItem","console","log","mockDataModule","mockMetadata","default","getMockData","response","dailyActionsService","getMetadata","err","message","Container","maxWidth","DailyActionsAdvancedReport","apiFilters","mockData","getFilteredData","exportFormat","blob","Blob","JSON","stringify","type","fileName","saveAs","exportFilteredReport","DailyActionsAdvancedPage","Helmet","Breadcrumbs","Link","RouterLink","to","paragraph","b","a","autoBom","warn","test","c","XMLHttpRequest","responseType","onload","g","onerror","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","presets","showClearButton","autoApplyPresets","setAnchorEl","tempStartDate","setTempStartDate","tempEndDate","setTempEndDate","datePresets","getValue","startOfMonth","endOfMonth","date","setMonth","getMonth","handleClose","id","undefined","style","CalendarTodayIcon","endIcon","isValid","size","stopPropagation","ClearIcon","fontSize","minWidth","textTransform","Popover","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","elevation","sm","LocalizationProvider","dateAdapter","AdapterDateFns","gap","DatePicker","textField","fullWidth","helperText","minDate","preset","handlePresetClick","handleApply"],"sourceRoot":""}