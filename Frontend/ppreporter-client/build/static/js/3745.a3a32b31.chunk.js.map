{"version":3,"file":"static/js/3745.a3a32b31.chunk.js","mappings":"+JAoBA,MAAMA,EAAkBC,GACD,kBAAVA,EACS,EAARA,EAAH,KAEFA,EAwET,EAjE6CC,IAC3C,MAAM,UAAEC,EAAS,GAAEC,EAAE,MAAEC,EAAK,SAAEC,KAAaC,GAAeL,EAGpDM,EAAmC,IACnCH,GAAS,CAAC,EACdI,QAAW,OAAFL,QAAE,IAAFA,OAAE,EAAFA,EAAIK,QACbC,cAAiB,OAAFN,QAAE,IAAFA,OAAE,EAAFA,EAAIM,cACnBC,eAAkB,OAAFP,QAAE,IAAFA,OAAE,EAAFA,EAAIO,eACpBC,WAAc,OAAFR,QAAE,IAAFA,OAAE,EAAFA,EAAIQ,WAChBC,SAAY,OAAFT,QAAE,IAAFA,OAAE,EAAFA,EAAIS,SACdC,IAAKd,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIU,KACxBC,aAAcf,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIY,IACjCC,UAAWjB,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIc,IAC9BC,YAAanB,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIgB,IAChCC,WAAYrB,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIkB,IAC/BC,QAASvB,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIoB,GAC5BC,WAAYzB,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIsB,IAC/BC,cAAe3B,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAIwB,IAClCC,YAAa7B,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAI0B,IAChCC,aAAc/B,EAAiB,OAAFI,QAAE,IAAFA,OAAE,EAAFA,EAAI4B,IACjCC,OAAU,OAAF7B,QAAE,IAAFA,OAAE,EAAFA,EAAI6B,OACZC,MAAS,OAAF9B,QAAE,IAAFA,OAAE,EAAFA,EAAI8B,MACXC,SAAY,OAAF/B,QAAE,IAAFA,OAAE,EAAFA,EAAI+B,SACdC,SAAY,OAAFhC,QAAE,IAAFA,OAAE,EAAFA,EAAIgC,SACdC,UAAa,OAAFjC,QAAE,IAAFA,OAAE,EAAFA,EAAIiC,UACfC,UAAa,OAAFlC,QAAE,IAAFA,OAAE,EAAFA,EAAIkC,UACfC,SAAY,OAAFnC,QAAE,IAAFA,OAAE,EAAFA,EAAImC,SACdC,IAAO,OAAFpC,QAAE,IAAFA,OAAE,EAAFA,EAAIoC,IACTC,KAAQ,OAAFrC,QAAE,IAAFA,OAAE,EAAFA,EAAIqC,KACVC,MAAS,OAAFtC,QAAE,IAAFA,OAAE,EAAFA,EAAIsC,MACXC,OAAU,OAAFvC,QAAE,IAAFA,OAAE,EAAFA,EAAIuC,OACZC,aAAgB,OAAFxC,QAAE,IAAFA,OAAE,EAAFA,EAAIwC,aAClBC,OAAU,OAAFzC,QAAE,IAAFA,OAAE,EAAFA,EAAIyC,OACZC,YAAe,OAAF1C,QAAE,IAAFA,OAAE,EAAFA,EAAI0C,YACjBC,aAAgB,OAAF3C,QAAE,IAAFA,OAAE,EAAFA,EAAI2C,aAClBC,gBAAmB,OAAF5C,QAAE,IAAFA,OAAE,EAAFA,EAAI6C,QACrBC,MAAS,OAAF9C,QAAE,IAAFA,OAAE,EAAFA,EAAI8C,MACXC,SAAY,OAAF/C,QAAE,IAAFA,OAAE,EAAFA,EAAI+C,SACdC,SAAY,OAAFhD,QAAE,IAAFA,OAAE,EAAFA,EAAIgD,SACdC,UAAW,cAWb,GAPAC,OAAOC,KAAK/C,GAAagD,SAAQC,SACuBC,IAAlDlD,EAAYiD,WACPjD,EAAYiD,EACrB,IAIEtD,EAAW,CACb,MAAMwD,EAAe,IAChBpD,EACHF,MAAOG,EACPoD,GAAIzD,GAGN,OAAO0D,EAAAA,EAAAA,KAAA,UAASF,EAAYrD,SAAGA,GACjC,CAGA,OAAOuD,EAAAA,EAAAA,KAAA,OAAKxD,MAAOG,KAAiBD,EAAUD,SAAGA,GAAe,C,qBC1F9DwD,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,6VACD,c,qJCVG,SAASC,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,S,eCDvD,MAAMC,EAAY,CAAC,YAAa,UAoB1BC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC7BC,KAAM,UACNP,KAAM,OACNQ,kBAAmBA,CAAC7E,EAAO8E,IAAWA,EAAOC,MAH9BL,EAId,KACM,CACLxB,SAAU,aAwDd,EArD0B8B,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMlF,GAAQmF,EAAAA,EAAAA,GAAgB,CAC5BnF,MAAOiF,EACPL,KAAM,aAEF,UACFQ,EAAS,OACTC,GAAS,GACPrF,EACJsF,GAAQC,EAAAA,EAAAA,GAA8BvF,EAAOwE,GACzCgB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGzF,EAAO,CACrCqF,WAEIK,EA/BkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBX,EAAqBsB,EAAQ,EAwB1CE,CAAkBJ,GAClC,OAAoB7B,EAAAA,EAAAA,KAAKc,GAAUgB,EAAAA,EAAAA,GAAS,CAC1CL,WAAWS,EAAAA,EAAAA,GAAKH,EAAQX,KAAMK,GAC9BU,UAAWT,EAAS,OAAI7B,EACxB0B,IAAKA,EACLM,WAAYA,GACXF,GACL,G,oCC3CO,MAAMS,EAAYjB,GAChBA,C,0ICTF,SAASkB,EAA2B3B,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMC,EAAY,CAAC,YAAa,aAkB1ByB,GAAkBvB,EAAAA,EAAAA,IAAO,MAAO,CACpCE,KAAM,iBACNP,KAAM,OACNQ,kBAAmBA,CAAC7E,EAAO8E,IAAWA,EAAOC,MAHvBL,EAIrB,KACM,CACLrD,QAAS,GACT,eAAgB,CACdI,cAAe,QAoDrB,EAhDiCuD,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,MAAMlF,GAAQmF,EAAAA,EAAAA,GAAgB,CAC5BnF,MAAOiF,EACPL,KAAM,oBAEF,UACFQ,EAAS,UACTnF,EAAY,OACVD,EACJsF,GAAQC,EAAAA,EAAAA,GAA8BvF,EAAOwE,GACzCgB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGzF,EAAO,CACrCC,cAEIyF,EAlCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBiB,EAA4BN,EAAQ,EA2BjDE,CAAkBJ,GAClC,OAAoB7B,EAAAA,EAAAA,KAAKsC,GAAiBR,EAAAA,EAAAA,GAAS,CACjD/B,GAAIzD,EACJmF,WAAWS,EAAAA,EAAAA,GAAKH,EAAQX,KAAMK,GAC9BI,WAAYA,EACZN,IAAKA,GACJI,GACL,G,sBCnDI1B,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,4EACD,a,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,kSACD,S,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,8IACD,Y,wRCYJ,MAAM+B,EAAW,CACfC,MAAO,CACLC,QAAS,CACPrG,MAAO,SACPsG,OAAQ,KACRC,OAAQ,gBAEVC,QAAS,CACPxG,MAAO,KACPsG,OAAQ,IACRC,OAAQ,gBAEVE,WAAY,CACVzG,MAAO,IACPsG,OAAQ,KACRC,OAAQ,gBAEVG,YAAa,CACX1G,MAAO,KACPsG,QAAS,IACTC,OAAQ,iBAGZI,SAAU,CACR,CAAE9B,KAAM,YAAawB,QAAS,QAASG,QAAS,KAChD,CAAE3B,KAAM,oBAAqBwB,QAAS,QAASG,QAAS,KACxD,CAAE3B,KAAM,eAAgBwB,QAAS,QAASG,QAAS,KACnD,CAAE3B,KAAM,gBAAiBwB,QAAS,QAASG,QAAS,KACpD,CAAE3B,KAAM,iBAAkBwB,QAAS,QAASG,QAAS,MAEvDI,mBAAoB,CAClB,CAAEC,GAAI,EAAGC,SAAU,IAAKC,WAAY,WAAYC,OAAQ,IAAQC,KAAM,UAAWC,UAAW,wBAC5F,CAAEL,GAAI,EAAGC,SAAU,IAAKC,WAAY,aAAcC,OAAQ,GAAOC,KAAM,aAAcC,UAAW,wBAChG,CAAEL,GAAI,EAAGC,SAAU,IAAKC,WAAY,eAAgBC,OAAQ,KAAOC,KAAM,MAAOC,UAAW,wBAC3F,CAAEL,GAAI,EAAGC,SAAU,IAAKC,WAAY,aAAcC,OAAQ,OAAQC,KAAM,MAAOC,UAAW,wBAC1F,CAAEL,GAAI,EAAGC,SAAU,IAAKC,WAAY,gBAAiBC,OAAQ,IAAQC,KAAM,UAAWC,UAAW,0BAyWrG,EAjWkCC,MAClBC,EAAAA,EAAAA,KAAd,MACOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAc,OAC/BC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,IACzCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAwB,OAGlDK,EAAAA,EAAAA,YAAU,KACSC,WACfJ,GAAW,GACXE,EAAS,MAET,UAEQ,IAAIG,SAAQC,GAAWC,WAAWD,EAAS,QACjDT,EAAQnB,EACV,CAAE,MAAO8B,GACPN,EAAS,iCACTO,QAAQR,MAAM,gCAAiCO,EACjD,CAAC,QACCR,GAAW,EACb,GAGFU,EAAU,GACT,IAGH,MAoCMC,EAAkBpI,GACf,IAAIqI,KAAKC,aAAa,QAAS,CACpClI,MAAO,WACPmI,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAO1I,GAIN2I,EAAgB3I,GACb,IAAIqI,KAAKC,aAAa,QAAS,CACpCE,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAO1I,GAIN4I,EAAcC,IAClB,MAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAO,IAAIR,KAAKW,eAAe,QAAS,CACtCC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YACPV,OAAOI,EAAK,EAIjB,OAAItB,IAAYH,GAEZzD,EAAAA,EAAAA,KAACyF,EAAAA,EAAS,CAAClH,SAAS,KAAKhC,GAAI,CAAEc,GAAI,EAAGF,GAAI,GAAIV,UAC5CuD,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,SAAUC,WAAY,SAAUqB,OAAQ,SAAU3B,UAC3GuD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAgB,CAACC,KAAM,UAO9BC,EAAAA,EAAAA,MAACJ,EAAAA,EAAS,CAAClH,SAAS,KAAKhC,GAAI,CAAEc,GAAI,EAAGF,GAAI,GAAIV,SAAA,EAE5CoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,gBAAiBC,WAAY,SAAUI,GAAI,IAAKV,SAAA,EACzGuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,KAAIG,SAAC,eAGxCuD,EAAAA,EAAAA,KAACgG,EAAAA,EAAM,CACLD,QAAQ,WACRE,WAAWjG,EAAAA,EAAAA,KAACkG,EAAAA,EAAW,IACvBC,QArFclC,UACpBJ,GAAW,GACXE,EAAS,MAET,UAEQ,IAAIG,SAAQC,GAAWC,WAAWD,EAAS,QAGjD,MAAMiC,EAAgB,IACjB7D,EACHC,MAAO,IACFD,EAASC,MACZC,QAAS,IACJF,EAASC,MAAMC,QAClBrG,MAAOmG,EAASC,MAAMC,QAAQrG,OAA8B,GAAhBiK,KAAKC,SAAiB,IAA3B,GACvC5D,OAAQH,EAASC,MAAMC,QAAQC,QAA+B,GAAhB2D,KAAKC,SAAiB,GAA3B,IAE3C1D,QAAS,IACJL,EAASC,MAAMI,QAClBxG,MAAOiK,KAAKE,MAAMhE,EAASC,MAAMI,QAAQxG,OAA8B,GAAhBiK,KAAKC,SAAiB,IAA3B,IAClD5D,OAAQH,EAASC,MAAMI,QAAQF,QAA+B,GAAhB2D,KAAKC,SAAiB,GAA3B,MAK/C5C,EAAQ0C,EACV,CAAE,MAAO/B,GACPN,EAAS,oCACTO,QAAQR,MAAM,2BAA4BO,EAC5C,CAAC,QACCR,GAAW,EACb,GAsDM2C,SAAU5C,EAAQnH,SACnB,eAMFqH,IACC9D,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACzE,GAAI,CAAEoB,EAAG,EAAGR,GAAI,EAAGiC,QAAS,eAAgB3C,UACjDuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACzG,MAAM,aAAY5C,SAAEqH,MAKnCL,IACCoC,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAElK,SAAA,EAEzBuD,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEtK,UAC9BuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUI,GAAI,IAAKV,SAAA,EACxEuD,EAAAA,EAAAA,KAACkH,EAAAA,EAAe,CAAC7H,MAAM,UAAU9C,GAAI,CAAEgB,GAAI,MAC3CyC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SAAC,gBAI3CuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SACrC+H,EAAef,EAAKjB,MAAMC,QAAQrG,UAErCyJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUM,GAAI,IAAKZ,SAAA,CACvEgH,EAAKjB,MAAMC,QAAQC,QAAU,GAC5B1C,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAAC5K,GAAI,CAAE8C,MAAO,eAAgB9B,GAAI,IAAO6J,SAAS,WAEjEpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAgB,CAAC9K,GAAI,CAAE8C,MAAO,aAAc9B,GAAI,IAAO6J,SAAS,WAEnEvB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRxJ,GAAI,CACF8C,MAAOoE,EAAKjB,MAAMC,QAAQC,QAAU,EAAI,eAAiB,cACzDjG,SAAA,CAEDgH,EAAKjB,MAAMC,QAAQC,QAAU,EAAI,IAAM,GACvCe,EAAKjB,MAAMC,QAAQC,OAAO4E,QAAQ,GAAG,KAAG7D,EAAKjB,MAAMC,QAAQE,qBAQtE3C,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEtK,UAC9BuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUI,GAAI,IAAKV,SAAA,EACxEuD,EAAAA,EAAAA,KAACuH,EAAAA,EAAU,CAAClI,MAAM,UAAU9C,GAAI,CAAEgB,GAAI,MACtCyC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SAAC,gBAI3CuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SACrCsI,EAAatB,EAAKjB,MAAMI,QAAQxG,UAEnCyJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUM,GAAI,IAAKZ,SAAA,CACvEgH,EAAKjB,MAAMI,QAAQF,QAAU,GAC5B1C,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAAC5K,GAAI,CAAE8C,MAAO,eAAgB9B,GAAI,IAAO6J,SAAS,WAEjEpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAgB,CAAC9K,GAAI,CAAE8C,MAAO,aAAc9B,GAAI,IAAO6J,SAAS,WAEnEvB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRxJ,GAAI,CACF8C,MAAOoE,EAAKjB,MAAMI,QAAQF,QAAU,EAAI,eAAiB,cACzDjG,SAAA,CAEDgH,EAAKjB,MAAMI,QAAQF,QAAU,EAAI,IAAM,GACvCe,EAAKjB,MAAMI,QAAQF,OAAO4E,QAAQ,GAAG,KAAG7D,EAAKjB,MAAMI,QAAQD,qBAQtE3C,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEtK,UAC9BuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUI,GAAI,IAAKV,SAAA,EACxEuD,EAAAA,EAAAA,KAACwH,EAAAA,EAAa,CAACnI,MAAM,UAAU9C,GAAI,CAAEgB,GAAI,MACzCyC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SAAC,oBAI3CuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SACrCsI,EAAatB,EAAKjB,MAAMK,WAAWzG,UAEtCyJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUM,GAAI,IAAKZ,SAAA,CACvEgH,EAAKjB,MAAMK,WAAWH,QAAU,GAC/B1C,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAAC5K,GAAI,CAAE8C,MAAO,eAAgB9B,GAAI,IAAO6J,SAAS,WAEjEpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAgB,CAAC9K,GAAI,CAAE8C,MAAO,aAAc9B,GAAI,IAAO6J,SAAS,WAEnEvB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRxJ,GAAI,CACF8C,MAAOoE,EAAKjB,MAAMK,WAAWH,QAAU,EAAI,eAAiB,cAC5DjG,SAAA,CAEDgH,EAAKjB,MAAMK,WAAWH,QAAU,EAAI,IAAM,GAC1Ce,EAAKjB,MAAMK,WAAWH,OAAO4E,QAAQ,GAAG,KAAG7D,EAAKjB,MAAMK,WAAWF,qBAQ5E3C,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEtK,UAC9BuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUI,GAAI,IAAKV,SAAA,EACxEuD,EAAAA,EAAAA,KAACyH,EAAAA,EAAiB,CAACpI,MAAM,UAAU9C,GAAI,CAAEgB,GAAI,MAC7CyC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SAAC,qBAI3CuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAKzJ,UAAU,MAAKG,SACrCsI,EAAatB,EAAKjB,MAAMM,YAAY1G,UAEvCyJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQG,WAAY,SAAUM,GAAI,IAAKZ,SAAA,CACvEgH,EAAKjB,MAAMM,YAAYJ,QAAU,GAChC1C,EAAAA,EAAAA,KAACmH,EAAAA,EAAc,CAAC5K,GAAI,CAAE8C,MAAO,eAAgB9B,GAAI,IAAO6J,SAAS,WAEjEpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAgB,CAAC9K,GAAI,CAAE8C,MAAO,aAAc9B,GAAI,IAAO6J,SAAS,WAEnEvB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRxJ,GAAI,CACF8C,MAAOoE,EAAKjB,MAAMM,YAAYJ,QAAU,EAAI,eAAiB,cAC7DjG,SAAA,CAEDgH,EAAKjB,MAAMM,YAAYJ,QAAU,EAAI,IAAM,GAC3Ce,EAAKjB,MAAMM,YAAYJ,OAAO4E,QAAQ,GAAG,KAAG7D,EAAKjB,MAAMM,YAAYH,uBAUjFc,IACCoC,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGpK,GAAI,CAAEc,GAAI,GAAIZ,SAAA,EAExCuD,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEtK,UACvBuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAK2B,cAAY,EAAAjL,SAAC,eAGtCuD,EAAAA,EAAAA,KAAC2H,EAAAA,EAAO,CAACpL,GAAI,CAAEY,GAAI,KAClBsG,EAAKV,SAAS6E,KAAI,CAACC,EAAWC,KAC7BjC,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAAanJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAEjF,GAAI,IAAKV,SAAA,EAC7CoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,kBAAmBL,SAAA,EAC5EuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,QAAOtJ,SAAEoL,EAAK5G,QAClCjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,QAAQgC,WAAW,OAAMtL,SAC1C+H,EAAeqD,EAAKpF,eAGzBoD,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,kBAAmBL,SAAA,EAC5EoJ,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQ1G,MAAM,iBAAgB5C,SAAA,CAC/CsI,EAAa8C,EAAKjF,SAAS,eAE9BiD,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQ1G,MAAM,iBAAgB5C,SAAA,CAC/C+H,EAAeqD,EAAKpF,QAAUoF,EAAKjF,SAAS,oBAGhDkF,EAAQrE,EAAKV,SAASiF,OAAS,IAAKhI,EAAAA,EAAAA,KAAC2H,EAAAA,EAAO,CAACpL,GAAI,CAAE0L,GAAI,OAf1CH,aAuBxB9H,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAEtK,UACvBuD,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CAAAvK,UACHoJ,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAAAxK,SAAA,EACVuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,KAAK2B,cAAY,EAAAjL,SAAC,yBAGtCuD,EAAAA,EAAAA,KAAC2H,EAAAA,EAAO,CAACpL,GAAI,CAAEY,GAAI,KAClBsG,EAAKT,mBAAmB4E,KAAI,CAACM,EAAkBJ,KAC9CjC,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAAanJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAEjF,GAAI,IAAKV,SAAA,EAC7CoJ,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,kBAAmBL,SAAA,EAC5EuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,QAAOtJ,SAAEyL,EAAY/E,cACzC0C,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRgC,WAAW,OACXxL,GAAI,CACF8C,MACuB,YAArB6I,EAAY7E,MAA2C,QAArB6E,EAAY7E,KAC1C,eACqB,eAArB6E,EAAY7E,MAA8C,QAArB6E,EAAY7E,KACjD,aACA,gBACN5G,SAAA,CAEoB,YAArByL,EAAY7E,MAA2C,QAArB6E,EAAY7E,KAAiB,IAAM,GAChD,eAArB6E,EAAY7E,MAA8C,QAArB6E,EAAY7E,KAAiB,IAAM,GACxEmB,EAAe0D,EAAY9E,eAGhCyC,EAAAA,EAAAA,MAACH,EAAAA,EAAS,CAACnJ,IAAI6F,EAAAA,EAAAA,IAAS,CAAExF,QAAS,OAAQE,eAAgB,kBAAmBL,SAAA,EAC5EuD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CACTC,QAAQ,QACRxJ,GAAI,CACF4L,cAAe,aACf9I,MAAO,kBACP5C,SAEDyL,EAAY7E,QAEfrD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAU,CAACC,QAAQ,QAAQ1G,MAAM,iBAAgB5C,SAC/CuI,EAAWkD,EAAY5E,gBAG3BwE,EAAQrE,EAAKT,mBAAmBgF,OAAS,IAAKhI,EAAAA,EAAAA,KAAC2H,EAAAA,EAAO,CAACpL,GAAI,CAAE0L,GAAI,OAlCpDH,iBA0ClB,C,sBC7ZZ7H,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,2EACD,e,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,yVACD,gB","sources":["components/common/SimpleBox.tsx","../node_modules/@mui/icons-material/AttachMoney.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","utils/styleUtils.ts","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/TrendingUp.js","../node_modules/@mui/icons-material/People.js","../node_modules/@mui/icons-material/PersonAdd.js","pages/SimpleDashboard.tsx","../node_modules/@mui/icons-material/TrendingDown.js","../node_modules/@mui/icons-material/SportsEsports.js"],"sourcesContent":["import React from 'react';\nimport { Box } from '@mui/material';\n\n/**\n * SimpleBox component\n * A simple div component that replaces MUI Box to avoid TypeScript union type complexity issues\n */\ninterface SimpleBoxProps {\n  component?: any;\n  sx?: any;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  [key: string]: any;\n}\n\n/**\n * Convert MUI spacing units to pixels\n * @param value - The spacing value in MUI units\n * @returns The spacing value in pixels\n */\nconst convertSpacing = (value: any): string | undefined => {\n  if (typeof value === 'number') {\n    return `${value * 8}px`;\n  }\n  return value;\n};\n\n/**\n * SimpleBox component\n * A simple replacement for MUI Box that avoids TypeScript union type issues\n */\nconst SimpleBox: React.FC<SimpleBoxProps> = (props) => {\n  const { component, sx, style, children, ...otherProps } = props;\n\n  // Create a simplified inline style object from sx prop\n  const inlineStyle: React.CSSProperties = {\n    ...(style || {}),\n    display: sx?.display,\n    flexDirection: sx?.flexDirection,\n    justifyContent: sx?.justifyContent,\n    alignItems: sx?.alignItems,\n    flexWrap: sx?.flexWrap,\n    gap: convertSpacing(sx?.gap),\n    marginBottom: convertSpacing(sx?.mb),\n    marginTop: convertSpacing(sx?.mt),\n    marginRight: convertSpacing(sx?.mr),\n    marginLeft: convertSpacing(sx?.ml),\n    padding: convertSpacing(sx?.p),\n    paddingTop: convertSpacing(sx?.pt),\n    paddingBottom: convertSpacing(sx?.pb),\n    paddingLeft: convertSpacing(sx?.pl),\n    paddingRight: convertSpacing(sx?.pr),\n    height: sx?.height,\n    width: sx?.width,\n    minWidth: sx?.minWidth,\n    maxWidth: sx?.maxWidth,\n    minHeight: sx?.minHeight,\n    maxHeight: sx?.maxHeight,\n    position: sx?.position,\n    top: sx?.top,\n    left: sx?.left,\n    right: sx?.right,\n    bottom: sx?.bottom,\n    borderRadius: sx?.borderRadius,\n    border: sx?.border,\n    borderColor: sx?.borderColor,\n    borderBottom: sx?.borderBottom,\n    backgroundColor: sx?.bgcolor,\n    color: sx?.color,\n    flexGrow: sx?.flexGrow,\n    overflow: sx?.overflow,\n    boxSizing: 'border-box',\n  };\n\n  // Filter out undefined values\n  Object.keys(inlineStyle).forEach(key => {\n    if (inlineStyle[key as keyof React.CSSProperties] === undefined) {\n      delete inlineStyle[key as keyof React.CSSProperties];\n    }\n  });\n\n  // If component prop is provided, render a div with the as attribute\n  if (component) {\n    const elementProps = {\n      ...otherProps,\n      style: inlineStyle,\n      as: component\n    };\n\n    return <div {...elementProps}>{children}</div>;\n  }\n\n  // Otherwise, render a regular div\n  return <div style={inlineStyle} {...otherProps}>{children}</div>;\n};\n\nexport default SimpleBox;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoney');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { SxProps, Theme } from '@mui/material';\n\n/**\n * A utility function to create sx props without TypeScript union type complexity issues.\n * This function simply returns the input object but with a type assertion that avoids\n * the \"union type too complex to represent\" error.\n *\n * @param styles The styles object to be used as sx props\n * @returns The same styles object with the correct type\n */\nexport const createSx = (styles: Record<string, any>): any => {\n  return styles;\n};\n\n/**\n * A utility function to create a style function that returns an object\n * This approach avoids TypeScript's complex union type issues\n *\n * @param stylesFn A function that returns a styles object\n * @returns A function that returns the styles object\n */\nexport const createStyleFn = <T extends any[]>(stylesFn: (...args: T) => Record<string, any>) => {\n  return (...args: T): any => stylesFn(...args);\n};\n\n/**\n * Style functions for common components\n * These functions return style objects directly to avoid TypeScript union type issues\n */\nexport const styles = {\n  card: () => ({\n    bgcolor: 'background.paper',\n    p: 2,\n    border: '1px solid',\n    borderColor: 'divider',\n    borderRadius: 1,\n    boxShadow: 1,\n  }),\n\n  panel: () => ({\n    bgcolor: 'background.paper',\n    p: 1.5,\n    border: '1px solid',\n    borderColor: 'divider',\n    borderRadius: 1,\n    boxShadow: 1,\n  }),\n\n  flexRow: () => ({\n    display: 'flex',\n    alignItems: 'center',\n    gap: 1,\n  }),\n\n  flexColumn: () => ({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 1,\n  }),\n\n  flexBetween: () => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  }),\n\n  flexCenter: () => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }),\n\n  marginBottom: (value: number) => ({\n    mb: value,\n  }),\n\n  padding: (value: number) => ({\n    p: value,\n  }),\n\n  fullWidth: () => ({\n    width: '100%',\n  }),\n\n  fullHeight: () => ({\n    height: '100%',\n  }),\n};\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Card,\n  CardContent,\n  CircularProgress,\n  Button,\n  Divider,\n  useTheme\n} from '@mui/material';\nimport SimpleBox from '../components/common/SimpleBox';\nimport { createSx } from '../utils/styleUtils';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport SportsEsportsIcon from '@mui/icons-material/SportsEsports';\n\n// Mock data for the dashboard\nconst mockData = {\n  stats: {\n    revenue: {\n      value: 12567.89,\n      change: 15.2,\n      period: 'vs last week'\n    },\n    players: {\n      value: 1432,\n      change: 7.5,\n      period: 'vs last week'\n    },\n    newPlayers: {\n      value: 256,\n      change: 12.8,\n      period: 'vs last week'\n    },\n    gamesPlayed: {\n      value: 5621,\n      change: -3.2,\n      period: 'vs last week'\n    }\n  },\n  topGames: [\n    { name: 'Poker Pro', revenue: 3200.56, players: 432 },\n    { name: 'Blackjack Masters', revenue: 2800.32, players: 387 },\n    { name: 'Slots Royale', revenue: 2300.18, players: 356 },\n    { name: 'Roulette King', revenue: 1900.45, players: 289 },\n    { name: 'Baccarat Elite', revenue: 1450.67, players: 218 }\n  ],\n  recentTransactions: [\n    { id: 1, playerId: 101, playerName: 'John Doe', amount: 100.00, type: 'deposit', timestamp: '2023-05-01T08:30:00Z' },\n    { id: 2, playerId: 102, playerName: 'Jane Smith', amount: 50.00, type: 'withdrawal', timestamp: '2023-05-02T10:15:00Z' },\n    { id: 3, playerId: 103, playerName: 'Mike Johnson', amount: 75.50, type: 'bet', timestamp: '2023-05-03T14:45:00Z' },\n    { id: 4, playerId: 104, playerName: 'Lisa Brown', amount: 120.25, type: 'win', timestamp: '2023-05-04T09:20:00Z' },\n    { id: 5, playerId: 105, playerName: 'Robert Wilson', amount: 200.00, type: 'deposit', timestamp: '2023-05-05T16:10:00Z' }\n  ]\n};\n\n/**\n * Simple Dashboard component\n * A basic dashboard with key metrics and data visualization\n */\nconst SimpleDashboard: React.FC = () => {\n  const theme = useTheme();\n  const [data, setData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Simulate data loading\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        setData(mockData);\n      } catch (err) {\n        setError('Failed to load dashboard data');\n        console.error('Dashboard data loading error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Handle refresh\n  const handleRefresh = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Generate slightly different data for refresh\n      const refreshedData = {\n        ...mockData,\n        stats: {\n          ...mockData.stats,\n          revenue: {\n            ...mockData.stats.revenue,\n            value: mockData.stats.revenue.value * (1 + (Math.random() * 0.1 - 0.05)),\n            change: mockData.stats.revenue.change * (1 + (Math.random() * 0.2 - 0.1))\n          },\n          players: {\n            ...mockData.stats.players,\n            value: Math.round(mockData.stats.players.value * (1 + (Math.random() * 0.1 - 0.05))),\n            change: mockData.stats.players.change * (1 + (Math.random() * 0.2 - 0.1))\n          }\n        }\n      };\n\n      setData(refreshedData);\n    } catch (err) {\n      setError('Failed to refresh dashboard data');\n      console.error('Dashboard refresh error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format currency\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency: 'GBP',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  // Format number with commas\n  const formatNumber = (value: number): string => {\n    return new Intl.NumberFormat('en-GB', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  };\n\n  // Format date\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-GB', {\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format(date);\n  };\n\n  // Render loading state\n  if (loading && !data) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' })}>\n          <CircularProgress size={60} />\n        </SimpleBox>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {/* Dashboard Header */}\n      <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 })}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Dashboard\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          startIcon={<RefreshIcon />}\n          onClick={handleRefresh}\n          disabled={loading}\n        >\n          Refresh\n        </Button>\n      </SimpleBox>\n\n      {/* Error Message */}\n      {error && (\n        <Paper sx={{ p: 2, mb: 3, bgcolor: 'error.light' }}>\n          <Typography color=\"error.dark\">{error}</Typography>\n        </Paper>\n      )}\n\n      {/* Stats Cards */}\n      {data && (\n        <Grid container spacing={3}>\n          {/* Revenue Card */}\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mb: 1 })}>\n                  <AttachMoneyIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" component=\"div\">\n                    Revenue\n                  </Typography>\n                </SimpleBox>\n                <Typography variant=\"h4\" component=\"div\">\n                  {formatCurrency(data.stats.revenue.value)}\n                </Typography>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mt: 1 })}>\n                  {data.stats.revenue.change >= 0 ? (\n                    <TrendingUpIcon sx={{ color: 'success.main', mr: 0.5 }} fontSize=\"small\" />\n                  ) : (\n                    <TrendingDownIcon sx={{ color: 'error.main', mr: 0.5 }} fontSize=\"small\" />\n                  )}\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: data.stats.revenue.change >= 0 ? 'success.main' : 'error.main'\n                    }}\n                  >\n                    {data.stats.revenue.change >= 0 ? '+' : ''}\n                    {data.stats.revenue.change.toFixed(1)}% {data.stats.revenue.period}\n                  </Typography>\n                </SimpleBox>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Players Card */}\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mb: 1 })}>\n                  <PeopleIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" component=\"div\">\n                    Players\n                  </Typography>\n                </SimpleBox>\n                <Typography variant=\"h4\" component=\"div\">\n                  {formatNumber(data.stats.players.value)}\n                </Typography>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mt: 1 })}>\n                  {data.stats.players.change >= 0 ? (\n                    <TrendingUpIcon sx={{ color: 'success.main', mr: 0.5 }} fontSize=\"small\" />\n                  ) : (\n                    <TrendingDownIcon sx={{ color: 'error.main', mr: 0.5 }} fontSize=\"small\" />\n                  )}\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: data.stats.players.change >= 0 ? 'success.main' : 'error.main'\n                    }}\n                  >\n                    {data.stats.players.change >= 0 ? '+' : ''}\n                    {data.stats.players.change.toFixed(1)}% {data.stats.players.period}\n                  </Typography>\n                </SimpleBox>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* New Players Card */}\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mb: 1 })}>\n                  <PersonAddIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" component=\"div\">\n                    New Players\n                  </Typography>\n                </SimpleBox>\n                <Typography variant=\"h4\" component=\"div\">\n                  {formatNumber(data.stats.newPlayers.value)}\n                </Typography>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mt: 1 })}>\n                  {data.stats.newPlayers.change >= 0 ? (\n                    <TrendingUpIcon sx={{ color: 'success.main', mr: 0.5 }} fontSize=\"small\" />\n                  ) : (\n                    <TrendingDownIcon sx={{ color: 'error.main', mr: 0.5 }} fontSize=\"small\" />\n                  )}\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: data.stats.newPlayers.change >= 0 ? 'success.main' : 'error.main'\n                    }}\n                  >\n                    {data.stats.newPlayers.change >= 0 ? '+' : ''}\n                    {data.stats.newPlayers.change.toFixed(1)}% {data.stats.newPlayers.period}\n                  </Typography>\n                </SimpleBox>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Games Played Card */}\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mb: 1 })}>\n                  <SportsEsportsIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\" component=\"div\">\n                    Games Played\n                  </Typography>\n                </SimpleBox>\n                <Typography variant=\"h4\" component=\"div\">\n                  {formatNumber(data.stats.gamesPlayed.value)}\n                </Typography>\n                <SimpleBox sx={createSx({ display: 'flex', alignItems: 'center', mt: 1 })}>\n                  {data.stats.gamesPlayed.change >= 0 ? (\n                    <TrendingUpIcon sx={{ color: 'success.main', mr: 0.5 }} fontSize=\"small\" />\n                  ) : (\n                    <TrendingDownIcon sx={{ color: 'error.main', mr: 0.5 }} fontSize=\"small\" />\n                  )}\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: data.stats.gamesPlayed.change >= 0 ? 'success.main' : 'error.main'\n                    }}\n                  >\n                    {data.stats.gamesPlayed.change >= 0 ? '+' : ''}\n                    {data.stats.gamesPlayed.change.toFixed(1)}% {data.stats.gamesPlayed.period}\n                  </Typography>\n                </SimpleBox>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* Dashboard Content */}\n      {data && (\n        <Grid container spacing={3} sx={{ mt: 1 }}>\n          {/* Top Games */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Top Games\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                {data.topGames.map((game: any, index: number) => (\n                  <SimpleBox key={index} sx={createSx({ mb: 2 })}>\n                    <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'space-between' })}>\n                      <Typography variant=\"body1\">{game.name}</Typography>\n                      <Typography variant=\"body1\" fontWeight=\"bold\">\n                        {formatCurrency(game.revenue)}\n                      </Typography>\n                    </SimpleBox>\n                    <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'space-between' })}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {formatNumber(game.players)} players\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {formatCurrency(game.revenue / game.players)} per player\n                      </Typography>\n                    </SimpleBox>\n                    {index < data.topGames.length - 1 && <Divider sx={{ my: 1 }} />}\n                  </SimpleBox>\n                ))}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Recent Transactions */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Recent Transactions\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                {data.recentTransactions.map((transaction: any, index: number) => (\n                  <SimpleBox key={index} sx={createSx({ mb: 2 })}>\n                    <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'space-between' })}>\n                      <Typography variant=\"body1\">{transaction.playerName}</Typography>\n                      <Typography\n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        sx={{\n                          color:\n                            transaction.type === 'deposit' || transaction.type === 'win'\n                              ? 'success.main'\n                              : transaction.type === 'withdrawal' || transaction.type === 'bet'\n                              ? 'error.main'\n                              : 'text.primary'\n                        }}\n                      >\n                        {transaction.type === 'deposit' || transaction.type === 'win' ? '+' : ''}\n                        {transaction.type === 'withdrawal' || transaction.type === 'bet' ? '-' : ''}\n                        {formatCurrency(transaction.amount)}\n                      </Typography>\n                    </SimpleBox>\n                    <SimpleBox sx={createSx({ display: 'flex', justifyContent: 'space-between' })}>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          textTransform: 'capitalize',\n                          color: 'text.secondary'\n                        }}\n                      >\n                        {transaction.type}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {formatDate(transaction.timestamp)}\n                      </Typography>\n                    </SimpleBox>\n                    {index < data.recentTransactions.length - 1 && <Divider sx={{ my: 1 }} />}\n                  </SimpleBox>\n                ))}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default SimpleDashboard;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\"\n}), 'TrendingDown');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m21.58 16.09-1.09-7.66C20.21 6.46 18.52 5 16.53 5H7.47C5.48 5 3.79 6.46 3.51 8.43l-1.09 7.66C2.2 17.63 3.39 19 4.94 19c.68 0 1.32-.27 1.8-.75L9 16h6l2.25 2.25c.48.48 1.13.75 1.8.75 1.56 0 2.75-1.37 2.53-2.91M11 11H9v2H8v-2H6v-1h2V8h1v2h2zm4-1c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m2 3c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1\"\n}), 'SportsEsports');"],"names":["convertSpacing","value","props","component","sx","style","children","otherProps","inlineStyle","display","flexDirection","justifyContent","alignItems","flexWrap","gap","marginBottom","mb","marginTop","mt","marginRight","mr","marginLeft","ml","padding","p","paddingTop","pt","paddingBottom","pb","paddingLeft","pl","paddingRight","pr","height","width","minWidth","maxWidth","minHeight","maxHeight","position","top","left","right","bottom","borderRadius","border","borderColor","borderBottom","backgroundColor","bgcolor","color","flexGrow","overflow","boxSizing","Object","keys","forEach","key","undefined","elementProps","as","_jsx","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","styles","root","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","createSx","getCardContentUtilityClass","CardContentRoot","mockData","stats","revenue","change","period","players","newPlayers","gamesPlayed","topGames","recentTransactions","id","playerId","playerName","amount","type","timestamp","SimpleDashboard","useTheme","data","setData","useState","loading","setLoading","error","setError","useEffect","async","Promise","resolve","setTimeout","err","console","loadData","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","formatDate","dateString","date","Date","DateTimeFormat","month","day","hour","minute","Container","SimpleBox","CircularProgress","size","_jsxs","Typography","variant","Button","startIcon","RefreshIcon","onClick","refreshedData","Math","random","round","disabled","Grid","container","spacing","item","xs","sm","md","Card","CardContent","AttachMoneyIcon","TrendingUpIcon","fontSize","TrendingDownIcon","toFixed","PeopleIcon","PersonAddIcon","SportsEsportsIcon","gutterBottom","Divider","map","game","index","fontWeight","length","my","transaction","textTransform"],"sourceRoot":""}